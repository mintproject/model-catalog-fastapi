# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401

class TimeInterval(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    TimeInterval - a model defined in OpenAPI

        interval_unit: The interval_unit of this TimeInterval [Optional].
        description: The description of this TimeInterval [Optional].
        id: The id of this TimeInterval [Optional].
        label: The label of this TimeInterval [Optional].
        type: The type of this TimeInterval [Optional].
        interval_value: The interval_value of this TimeInterval [Optional].
    """

    interval_unit: Optional[List[Unit]] = Field(alias="intervalUnit", default=None)
    description: Optional[List[str]] = Field(alias="description", default=None)
    id: Optional[str] = Field(alias="id", default=None)
    label: Optional[List[str]] = Field(alias="label", default=None)
    type: Optional[List[str]] = Field(alias="type", default=None)
    interval_value: Optional[List[UnionStrIntNone]] = Field(alias="intervalValue", default=None)

    class Config:
        arbitrary_types_allowed = True
        allow_population_by_field_name = True

    @classmethod
    def __modify_schema__(cls, field_schema):
        field_schema.update(type='string')



from openapi_server.models.union_str_int_none import UnionStrIntNone
from openapi_server.models.unit import Unit
TimeInterval.update_forward_refs()

name: Docker

on:
  push:
    branches:
      - "*"
    tags:
      - v*
  pull_request:

env:
  DOCKER_IMAGE_NAME: model-catalog-fastapi
  DOCKER_IMAGE_REPOSITORY: mintproject

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2

      - name: Create value as an environment variable
        run: |
          echo "DOCKER_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Expose value
        id: exposeValue
        run: |
          echo "::set-output name=docker_tag::${{ env.DOCKER_TAG }}"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.0.0
        with:
          push: true
          context: .
          tags: ${{ env.DOCKER_IMAGE_REPOSITORY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}

    outputs:
      docker_tag: ${{ steps.exposeValue.outputs.docker_tag }}

  security:
    permissions:
      contents: read
      security-events: write
      packages: write
    name: "Scan vulnerabilities in the image"
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE_REPOSITORY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ needs.build.outputs.docker_tag }}
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
          severity: ${{ env.VULNERABILITY_SCAN_LEVEL }}
          exit-code: "0"
          ignore-unfixed: "true"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  update:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v2
        with:
          repository: ${{ env.INFRASTRUCTURE_REPOSITORY }}
          path: infrastructure
          token: ${{ secrets.PRIVATE_REPO }}
          ref: ${{ env.REPOSITORY_MAIN_BRANCH }}

      - name: Update ISI dev instance
        uses: fjogeleit/yaml-update-action@main
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        with:
          valueFile: infrastructure/isi-dev/values.yaml
          propertyPath: "components.model_catalog_api.image.tag"
          value: ${{ needs.build.outputs.docker_tag }}
          repository: ${{ env.INFRASTRUCTURE_REPOSITORY }}
          token: ${{ secrets.PRIVATE_REPO }}
          updateFile: true
          message: "Update model catalog image"

{
  "openapi": "3.0.2",
  "info": {
    "title": "Model Catalog",
    "description": "This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)",
    "version": "v1.8.0"
  },
  "paths": {
    "/catalogidentifiers": {
      "get": {
        "tags": [
          "CatalogIdentifier"
        ],
        "summary": "List all instances of CatalogIdentifier",
        "description": "Gets a list of all instances of CatalogIdentifier (more information in https://w3id.org/okn/o/sd#CatalogIdentifier)",
        "operationId": "catalogidentifiers_get_catalogidentifiers_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of CatalogIdentifier.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Catalogidentifiers Get Catalogidentifiers Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CatalogIdentifier"
        ],
        "summary": "Create one CatalogIdentifier",
        "description": "Create a new instance of CatalogIdentifier (more information in https://w3id.org/okn/o/sd#CatalogIdentifier)",
        "operationId": "catalogidentifiers_post_catalogidentifiers_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Catalog Identifier",
                "type": "string",
                "description": "Information about the CatalogIdentifierto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Catalogidentifiers Post Catalogidentifiers Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/catalogidentifiers/{id}": {
      "get": {
        "tags": [
          "CatalogIdentifier"
        ],
        "summary": "Get a single CatalogIdentifier by its id",
        "description": "Gets the details of a given CatalogIdentifier (more information in https://w3id.org/okn/o/sd#CatalogIdentifier)",
        "operationId": "catalogidentifiers_id_get_catalogidentifiers__id__get",
        "parameters": [
          {
            "description": "The ID of the CatalogIdentifier to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the CatalogIdentifier to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given CatalogIdentifier",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Catalogidentifiers Id Get Catalogidentifiers  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CatalogIdentifier"
        ],
        "summary": "Update an existing CatalogIdentifier",
        "description": "Updates an existing CatalogIdentifier (more information in https://w3id.org/okn/o/sd#CatalogIdentifier)",
        "operationId": "catalogidentifiers_id_put_catalogidentifiers__id__put",
        "parameters": [
          {
            "description": "The ID of the CatalogIdentifier to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the CatalogIdentifier to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Catalog Identifier",
                "type": "string",
                "description": "An old CatalogIdentifierto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Catalogidentifiers Id Put Catalogidentifiers  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CatalogIdentifier"
        ],
        "summary": "Delete an existing CatalogIdentifier",
        "description": "Delete an existing CatalogIdentifier (more information in https://w3id.org/okn/o/sd#CatalogIdentifier)",
        "operationId": "catalogidentifiers_id_delete_catalogidentifiers__id__delete",
        "parameters": [
          {
            "description": "The ID of the CatalogIdentifier to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the CatalogIdentifier to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/causaldiagrams": {
      "get": {
        "tags": [
          "CausalDiagram"
        ],
        "summary": "List all instances of CausalDiagram",
        "description": "Gets a list of all instances of CausalDiagram (more information in https://w3id.org/okn/o/sdm#CausalDiagram)",
        "operationId": "causaldiagrams_get_causaldiagrams_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of CausalDiagram.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Causaldiagrams Get Causaldiagrams Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CausalDiagram"
        ],
        "summary": "Create one CausalDiagram",
        "description": "Create a new instance of CausalDiagram (more information in https://w3id.org/okn/o/sdm#CausalDiagram)",
        "operationId": "causaldiagrams_post_causaldiagrams_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Causal Diagram",
                "type": "string",
                "description": "Information about the CausalDiagramto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Causaldiagrams Post Causaldiagrams Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/causaldiagrams/{id}": {
      "get": {
        "tags": [
          "CausalDiagram"
        ],
        "summary": "Get a single CausalDiagram by its id",
        "description": "Gets the details of a given CausalDiagram (more information in https://w3id.org/okn/o/sdm#CausalDiagram)",
        "operationId": "causaldiagrams_id_get_causaldiagrams__id__get",
        "parameters": [
          {
            "description": "The ID of the CausalDiagram to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the CausalDiagram to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given CausalDiagram",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Causaldiagrams Id Get Causaldiagrams  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CausalDiagram"
        ],
        "summary": "Update an existing CausalDiagram",
        "description": "Updates an existing CausalDiagram (more information in https://w3id.org/okn/o/sdm#CausalDiagram)",
        "operationId": "causaldiagrams_id_put_causaldiagrams__id__put",
        "parameters": [
          {
            "description": "The ID of the CausalDiagram to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the CausalDiagram to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Causal Diagram",
                "type": "string",
                "description": "An old CausalDiagramto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Causaldiagrams Id Put Causaldiagrams  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CausalDiagram"
        ],
        "summary": "Delete an existing CausalDiagram",
        "description": "Delete an existing CausalDiagram (more information in https://w3id.org/okn/o/sdm#CausalDiagram)",
        "operationId": "causaldiagrams_id_delete_causaldiagrams__id__delete",
        "parameters": [
          {
            "description": "The ID of the CausalDiagram to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the CausalDiagram to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/configurationsetups": {
      "get": {
        "tags": [
          "ConfigurationSetup"
        ],
        "summary": "List all instances of ConfigurationSetup",
        "description": "Gets a list of all instances of ConfigurationSetup (more information in https://w3id.org/okn/o/sd#ConfigurationSetup)",
        "operationId": "configurationsetups_get_configurationsetups_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of ConfigurationSetup.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Configurationsetups Get Configurationsetups Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ConfigurationSetup"
        ],
        "summary": "Create one ConfigurationSetup",
        "description": "Create a new instance of ConfigurationSetup (more information in https://w3id.org/okn/o/sd#ConfigurationSetup)",
        "operationId": "configurationsetups_post_configurationsetups_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Configuration Setup",
                "type": "string",
                "description": "Information about the ConfigurationSetupto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Configurationsetups Post Configurationsetups Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/configurationsetups/{id}": {
      "get": {
        "tags": [
          "ConfigurationSetup"
        ],
        "summary": "Get a single ConfigurationSetup by its id",
        "description": "Gets the details of a given ConfigurationSetup (more information in https://w3id.org/okn/o/sd#ConfigurationSetup)",
        "operationId": "configurationsetups_id_get_configurationsetups__id__get",
        "parameters": [
          {
            "description": "The ID of the ConfigurationSetup to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ConfigurationSetup to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given ConfigurationSetup",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Configurationsetups Id Get Configurationsetups  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationSetup"
        ],
        "summary": "Update an existing ConfigurationSetup",
        "description": "Updates an existing ConfigurationSetup (more information in https://w3id.org/okn/o/sd#ConfigurationSetup)",
        "operationId": "configurationsetups_id_put_configurationsetups__id__put",
        "parameters": [
          {
            "description": "The ID of the ConfigurationSetup to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ConfigurationSetup to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Configuration Setup",
                "type": "string",
                "description": "An old ConfigurationSetupto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Configurationsetups Id Put Configurationsetups  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ConfigurationSetup"
        ],
        "summary": "Delete an existing ConfigurationSetup",
        "description": "Delete an existing ConfigurationSetup (more information in https://w3id.org/okn/o/sd#ConfigurationSetup)",
        "operationId": "configurationsetups_id_delete_configurationsetups__id__delete",
        "parameters": [
          {
            "description": "The ID of the ConfigurationSetup to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ConfigurationSetup to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/custom/configurationsetups/{id}": {
      "get": {
        "tags": [
          "ConfigurationSetup"
        ],
        "summary": "Get a ModelConfigurationSetup",
        "description": "Gets the details of a single instance of a ModelConfigurationSetup",
        "operationId": "custom_configurationsetups_id_get_custom_configurationsetups__id__get",
        "parameters": [
          {
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the resource"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_configurationsetups"
            },
            "name": "custom_query_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a single instance of  ModelConfigurationSetup",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Configurationsetups Id Get Custom Configurationsetups  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/constraints": {
      "get": {
        "tags": [
          "Constraint"
        ],
        "summary": "List all instances of Constraint",
        "description": "Gets a list of all instances of Constraint (more information in https://w3id.org/okn/o/sd#Constraint)",
        "operationId": "constraints_get_constraints_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Constraint.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Constraints Get Constraints Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Constraint"
        ],
        "summary": "Create one Constraint",
        "description": "Create a new instance of Constraint (more information in https://w3id.org/okn/o/sd#Constraint)",
        "operationId": "constraints_post_constraints_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Constraint",
                "type": "string",
                "description": "Information about the Constraintto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Constraints Post Constraints Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/constraints/{id}": {
      "get": {
        "tags": [
          "Constraint"
        ],
        "summary": "Get a single Constraint by its id",
        "description": "Gets the details of a given Constraint (more information in https://w3id.org/okn/o/sd#Constraint)",
        "operationId": "constraints_id_get_constraints__id__get",
        "parameters": [
          {
            "description": "The ID of the Constraint to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Constraint to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Constraint",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Constraints Id Get Constraints  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Constraint"
        ],
        "summary": "Update an existing Constraint",
        "description": "Updates an existing Constraint (more information in https://w3id.org/okn/o/sd#Constraint)",
        "operationId": "constraints_id_put_constraints__id__put",
        "parameters": [
          {
            "description": "The ID of the Constraint to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Constraint to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Constraint",
                "type": "string",
                "description": "An old Constraintto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Constraints Id Put Constraints  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Constraint"
        ],
        "summary": "Delete an existing Constraint",
        "description": "Delete an existing Constraint (more information in https://w3id.org/okn/o/sd#Constraint)",
        "operationId": "constraints_id_delete_constraints__id__delete",
        "parameters": [
          {
            "description": "The ID of the Constraint to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Constraint to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/coupledmodels": {
      "get": {
        "tags": [
          "CoupledModel"
        ],
        "summary": "List all instances of CoupledModel",
        "description": "Gets a list of all instances of CoupledModel (more information in https://w3id.org/okn/o/sdm#CoupledModel)",
        "operationId": "coupledmodels_get_coupledmodels_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of CoupledModel.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Coupledmodels Get Coupledmodels Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CoupledModel"
        ],
        "summary": "Create one CoupledModel",
        "description": "Create a new instance of CoupledModel (more information in https://w3id.org/okn/o/sdm#CoupledModel)",
        "operationId": "coupledmodels_post_coupledmodels_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Coupled Model",
                "type": "string",
                "description": "Information about the CoupledModelto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Coupledmodels Post Coupledmodels Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/coupledmodels/{id}": {
      "get": {
        "tags": [
          "CoupledModel"
        ],
        "summary": "Get a single CoupledModel by its id",
        "description": "Gets the details of a given CoupledModel (more information in https://w3id.org/okn/o/sdm#CoupledModel)",
        "operationId": "coupledmodels_id_get_coupledmodels__id__get",
        "parameters": [
          {
            "description": "The ID of the CoupledModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the CoupledModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given CoupledModel",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Coupledmodels Id Get Coupledmodels  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CoupledModel"
        ],
        "summary": "Update an existing CoupledModel",
        "description": "Updates an existing CoupledModel (more information in https://w3id.org/okn/o/sdm#CoupledModel)",
        "operationId": "coupledmodels_id_put_coupledmodels__id__put",
        "parameters": [
          {
            "description": "The ID of the CoupledModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the CoupledModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Coupled Model",
                "type": "string",
                "description": "An old CoupledModelto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Coupledmodels Id Put Coupledmodels  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "CoupledModel"
        ],
        "summary": "Delete an existing CoupledModel",
        "description": "Delete an existing CoupledModel (more information in https://w3id.org/okn/o/sdm#CoupledModel)",
        "operationId": "coupledmodels_id_delete_coupledmodels__id__delete",
        "parameters": [
          {
            "description": "The ID of the CoupledModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the CoupledModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/custom/datasetspecifications/{id}/datatransformations": {
      "get": {
        "tags": [
          "DataTransformation"
        ],
        "summary": "Gets a list of data transformations related a dataset",
        "description": "Gets a list of data transformations related a dataset",
        "operationId": "custom_datasetspecifications_id_datatransformations_get_custom_datasetspecifications__id__datatransformations_get",
        "parameters": [
          {
            "description": "The ID of the dataspecification",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the dataspecification"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_datatransformations"
            },
            "name": "custom_query_name",
            "in": "query"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets a list of data transformations filter related a dataset.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Datasetspecifications Id Datatransformations Get Custom Datasetspecifications  Id  Datatransformations Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/datatransformations": {
      "get": {
        "tags": [
          "DataTransformation"
        ],
        "summary": "List all instances of DataTransformation",
        "description": "Gets a list of all instances of DataTransformation (more information in https://w3id.org/okn/o/sd#DataTransformation)",
        "operationId": "datatransformations_get_datatransformations_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of DataTransformation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Datatransformations Get Datatransformations Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataTransformation"
        ],
        "summary": "Create one DataTransformation",
        "description": "Create a new instance of DataTransformation (more information in https://w3id.org/okn/o/sd#DataTransformation)",
        "operationId": "datatransformations_post_datatransformations_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Data Transformation",
                "type": "string",
                "description": "Information about the DataTransformationto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Datatransformations Post Datatransformations Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/datatransformations/{id}": {
      "get": {
        "tags": [
          "DataTransformation"
        ],
        "summary": "Get a single DataTransformation by its id",
        "description": "Gets the details of a given DataTransformation (more information in https://w3id.org/okn/o/sd#DataTransformation)",
        "operationId": "datatransformations_id_get_datatransformations__id__get",
        "parameters": [
          {
            "description": "The ID of the DataTransformation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the DataTransformation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given DataTransformation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Datatransformations Id Get Datatransformations  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataTransformation"
        ],
        "summary": "Update an existing DataTransformation",
        "description": "Updates an existing DataTransformation (more information in https://w3id.org/okn/o/sd#DataTransformation)",
        "operationId": "datatransformations_id_put_datatransformations__id__put",
        "parameters": [
          {
            "description": "The ID of the DataTransformation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the DataTransformation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Data Transformation",
                "type": "string",
                "description": "An old DataTransformationto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Datatransformations Id Put Datatransformations  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DataTransformation"
        ],
        "summary": "Delete an existing DataTransformation",
        "description": "Delete an existing DataTransformation (more information in https://w3id.org/okn/o/sd#DataTransformation)",
        "operationId": "datatransformations_id_delete_datatransformations__id__delete",
        "parameters": [
          {
            "description": "The ID of the DataTransformation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the DataTransformation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/datatransformationsetups": {
      "get": {
        "tags": [
          "DataTransformationSetup"
        ],
        "summary": "List all instances of DataTransformationSetup",
        "description": "Gets a list of all instances of DataTransformationSetup (more information in https://w3id.org/okn/o/sd#DataTransformationSetup)",
        "operationId": "datatransformationsetups_get_datatransformationsetups_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of DataTransformationSetup.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Datatransformationsetups Get Datatransformationsetups Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DataTransformationSetup"
        ],
        "summary": "Create one DataTransformationSetup",
        "description": "Create a new instance of DataTransformationSetup (more information in https://w3id.org/okn/o/sd#DataTransformationSetup)",
        "operationId": "datatransformationsetups_post_datatransformationsetups_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Data Transformation Setup",
                "type": "string",
                "description": "Information about the DataTransformationSetupto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Datatransformationsetups Post Datatransformationsetups Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/datatransformationsetups/{id}": {
      "get": {
        "tags": [
          "DataTransformationSetup"
        ],
        "summary": "Get a single DataTransformationSetup by its id",
        "description": "Gets the details of a given DataTransformationSetup (more information in https://w3id.org/okn/o/sd#DataTransformationSetup)",
        "operationId": "datatransformationsetups_id_get_datatransformationsetups__id__get",
        "parameters": [
          {
            "description": "The ID of the DataTransformationSetup to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the DataTransformationSetup to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given DataTransformationSetup",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Datatransformationsetups Id Get Datatransformationsetups  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataTransformationSetup"
        ],
        "summary": "Update an existing DataTransformationSetup",
        "description": "Updates an existing DataTransformationSetup (more information in https://w3id.org/okn/o/sd#DataTransformationSetup)",
        "operationId": "datatransformationsetups_id_put_datatransformationsetups__id__put",
        "parameters": [
          {
            "description": "The ID of the DataTransformationSetup to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the DataTransformationSetup to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Data Transformation Setup",
                "type": "string",
                "description": "An old DataTransformationSetupto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Datatransformationsetups Id Put Datatransformationsetups  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DataTransformationSetup"
        ],
        "summary": "Delete an existing DataTransformationSetup",
        "description": "Delete an existing DataTransformationSetup (more information in https://w3id.org/okn/o/sd#DataTransformationSetup)",
        "operationId": "datatransformationsetups_id_delete_datatransformationsetups__id__delete",
        "parameters": [
          {
            "description": "The ID of the DataTransformationSetup to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the DataTransformationSetup to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/custom/configuration/{id}/inputs": {
      "get": {
        "tags": [
          "DatasetSpecification"
        ],
        "summary": "Gets all inputs of a configuration",
        "description": "Gets all inputs of a configuration",
        "operationId": "custom_configuration_id_inputs_get_custom_configuration__id__inputs_get",
        "parameters": [
          {
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the resource"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "search_datasetspecification_by_configurationid"
            },
            "name": "custom_query_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets all inputs of a configuration",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Configuration Id Inputs Get Custom Configuration  Id  Inputs Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/custom/datasetspecifications": {
      "get": {
        "tags": [
          "DatasetSpecification"
        ],
        "summary": "Gets all inputs of a configuration",
        "description": "Gets all inputs of a configuration",
        "operationId": "custom_datasetspecifications_get_custom_datasetspecifications_get",
        "parameters": [
          {
            "description": "The ID of the configuration",
            "required": false,
            "schema": {
              "title": "Configurationid",
              "type": "string",
              "description": "The ID of the configuration"
            },
            "name": "configurationid",
            "in": "query"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_allinputs"
            },
            "name": "custom_query_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets all inputs of a configuration",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Datasetspecifications Get Custom Datasetspecifications Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/datasetspecifications": {
      "get": {
        "tags": [
          "DatasetSpecification"
        ],
        "summary": "List all instances of DatasetSpecification",
        "description": "Gets a list of all instances of DatasetSpecification (more information in https://w3id.org/okn/o/sd#DatasetSpecification)",
        "operationId": "datasetspecifications_get_datasetspecifications_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of DatasetSpecification.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Datasetspecifications Get Datasetspecifications Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DatasetSpecification"
        ],
        "summary": "Create one DatasetSpecification",
        "description": "Create a new instance of DatasetSpecification (more information in https://w3id.org/okn/o/sd#DatasetSpecification)",
        "operationId": "datasetspecifications_post_datasetspecifications_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Dataset Specification",
                "type": "string",
                "description": "Information about the DatasetSpecificationto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Datasetspecifications Post Datasetspecifications Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/datasetspecifications/{id}": {
      "get": {
        "tags": [
          "DatasetSpecification"
        ],
        "summary": "Get a single DatasetSpecification by its id",
        "description": "Gets the details of a given DatasetSpecification (more information in https://w3id.org/okn/o/sd#DatasetSpecification)",
        "operationId": "datasetspecifications_id_get_datasetspecifications__id__get",
        "parameters": [
          {
            "description": "The ID of the DatasetSpecification to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the DatasetSpecification to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given DatasetSpecification",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Datasetspecifications Id Get Datasetspecifications  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DatasetSpecification"
        ],
        "summary": "Update an existing DatasetSpecification",
        "description": "Updates an existing DatasetSpecification (more information in https://w3id.org/okn/o/sd#DatasetSpecification)",
        "operationId": "datasetspecifications_id_put_datasetspecifications__id__put",
        "parameters": [
          {
            "description": "The ID of the DatasetSpecification to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the DatasetSpecification to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Dataset Specification",
                "type": "string",
                "description": "An old DatasetSpecificationto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Datasetspecifications Id Put Datasetspecifications  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "DatasetSpecification"
        ],
        "summary": "Delete an existing DatasetSpecification",
        "description": "Delete an existing DatasetSpecification (more information in https://w3id.org/okn/o/sd#DatasetSpecification)",
        "operationId": "datasetspecifications_id_delete_datasetspecifications__id__delete",
        "parameters": [
          {
            "description": "The ID of the DatasetSpecification to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the DatasetSpecification to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/empiricalmodels": {
      "get": {
        "tags": [
          "EmpiricalModel"
        ],
        "summary": "List all instances of EmpiricalModel",
        "description": "Gets a list of all instances of EmpiricalModel (more information in https://w3id.org/okn/o/sdm#EmpiricalModel)",
        "operationId": "empiricalmodels_get_empiricalmodels_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of EmpiricalModel.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Empiricalmodels Get Empiricalmodels Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmpiricalModel"
        ],
        "summary": "Create one EmpiricalModel",
        "description": "Create a new instance of EmpiricalModel (more information in https://w3id.org/okn/o/sdm#EmpiricalModel)",
        "operationId": "empiricalmodels_post_empiricalmodels_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Empirical Model",
                "type": "string",
                "description": "Information about the EmpiricalModelto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Empiricalmodels Post Empiricalmodels Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/empiricalmodels/{id}": {
      "get": {
        "tags": [
          "EmpiricalModel"
        ],
        "summary": "Get a single EmpiricalModel by its id",
        "description": "Gets the details of a given EmpiricalModel (more information in https://w3id.org/okn/o/sdm#EmpiricalModel)",
        "operationId": "empiricalmodels_id_get_empiricalmodels__id__get",
        "parameters": [
          {
            "description": "The ID of the EmpiricalModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the EmpiricalModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given EmpiricalModel",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Empiricalmodels Id Get Empiricalmodels  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmpiricalModel"
        ],
        "summary": "Update an existing EmpiricalModel",
        "description": "Updates an existing EmpiricalModel (more information in https://w3id.org/okn/o/sdm#EmpiricalModel)",
        "operationId": "empiricalmodels_id_put_empiricalmodels__id__put",
        "parameters": [
          {
            "description": "The ID of the EmpiricalModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the EmpiricalModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Empirical Model",
                "type": "string",
                "description": "An old EmpiricalModelto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Empiricalmodels Id Put Empiricalmodels  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "EmpiricalModel"
        ],
        "summary": "Delete an existing EmpiricalModel",
        "description": "Delete an existing EmpiricalModel (more information in https://w3id.org/okn/o/sdm#EmpiricalModel)",
        "operationId": "empiricalmodels_id_delete_empiricalmodels__id__delete",
        "parameters": [
          {
            "description": "The ID of the EmpiricalModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the EmpiricalModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/emulators": {
      "get": {
        "tags": [
          "Emulator"
        ],
        "summary": "List all instances of Emulator",
        "description": "Gets a list of all instances of Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)",
        "operationId": "emulators_get_emulators_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Emulator.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Emulators Get Emulators Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Emulator"
        ],
        "summary": "Create one Emulator",
        "description": "Create a new instance of Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)",
        "operationId": "emulators_post_emulators_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Emulator",
                "type": "string",
                "description": "Information about the Emulatorto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Emulators Post Emulators Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/emulators/{id}": {
      "get": {
        "tags": [
          "Emulator"
        ],
        "summary": "Get a single Emulator by its id",
        "description": "Gets the details of a given Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)",
        "operationId": "emulators_id_get_emulators__id__get",
        "parameters": [
          {
            "description": "The ID of the Emulator to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Emulator to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Emulator",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Emulators Id Get Emulators  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Emulator"
        ],
        "summary": "Update an existing Emulator",
        "description": "Updates an existing Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)",
        "operationId": "emulators_id_put_emulators__id__put",
        "parameters": [
          {
            "description": "The ID of the Emulator to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Emulator to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Emulator",
                "type": "string",
                "description": "An old Emulatorto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Emulators Id Put Emulators  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Emulator"
        ],
        "summary": "Delete an existing Emulator",
        "description": "Delete an existing Emulator (more information in https://w3id.org/okn/o/sdm#Emulator)",
        "operationId": "emulators_id_delete_emulators__id__delete",
        "parameters": [
          {
            "description": "The ID of the Emulator to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Emulator to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/equations": {
      "get": {
        "tags": [
          "Equation"
        ],
        "summary": "List all instances of Equation",
        "description": "Gets a list of all instances of Equation (more information in https://w3id.org/okn/o/sdm#Equation)",
        "operationId": "equations_get_equations_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Equation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Equations Get Equations Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Equation"
        ],
        "summary": "Create one Equation",
        "description": "Create a new instance of Equation (more information in https://w3id.org/okn/o/sdm#Equation)",
        "operationId": "equations_post_equations_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Equation",
                "type": "string",
                "description": "Information about the Equationto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Equations Post Equations Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/equations/{id}": {
      "get": {
        "tags": [
          "Equation"
        ],
        "summary": "Get a single Equation by its id",
        "description": "Gets the details of a given Equation (more information in https://w3id.org/okn/o/sdm#Equation)",
        "operationId": "equations_id_get_equations__id__get",
        "parameters": [
          {
            "description": "The ID of the Equation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Equation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Equation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Equations Id Get Equations  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Equation"
        ],
        "summary": "Update an existing Equation",
        "description": "Updates an existing Equation (more information in https://w3id.org/okn/o/sdm#Equation)",
        "operationId": "equations_id_put_equations__id__put",
        "parameters": [
          {
            "description": "The ID of the Equation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Equation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Equation",
                "type": "string",
                "description": "An old Equationto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Equations Id Put Equations  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Equation"
        ],
        "summary": "Delete an existing Equation",
        "description": "Delete an existing Equation (more information in https://w3id.org/okn/o/sdm#Equation)",
        "operationId": "equations_id_delete_equations__id__delete",
        "parameters": [
          {
            "description": "The ID of the Equation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Equation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fundinginformations": {
      "get": {
        "tags": [
          "FundingInformation"
        ],
        "summary": "List all instances of FundingInformation",
        "description": "Gets a list of all instances of FundingInformation (more information in https://w3id.org/okn/o/sd#FundingInformation)",
        "operationId": "fundinginformations_get_fundinginformations_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of FundingInformation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Fundinginformations Get Fundinginformations Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FundingInformation"
        ],
        "summary": "Create one FundingInformation",
        "description": "Create a new instance of FundingInformation (more information in https://w3id.org/okn/o/sd#FundingInformation)",
        "operationId": "fundinginformations_post_fundinginformations_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Funding Information",
                "type": "string",
                "description": "Information about the FundingInformationto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Fundinginformations Post Fundinginformations Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/fundinginformations/{id}": {
      "get": {
        "tags": [
          "FundingInformation"
        ],
        "summary": "Get a single FundingInformation by its id",
        "description": "Gets the details of a given FundingInformation (more information in https://w3id.org/okn/o/sd#FundingInformation)",
        "operationId": "fundinginformations_id_get_fundinginformations__id__get",
        "parameters": [
          {
            "description": "The ID of the FundingInformation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the FundingInformation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given FundingInformation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Fundinginformations Id Get Fundinginformations  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FundingInformation"
        ],
        "summary": "Update an existing FundingInformation",
        "description": "Updates an existing FundingInformation (more information in https://w3id.org/okn/o/sd#FundingInformation)",
        "operationId": "fundinginformations_id_put_fundinginformations__id__put",
        "parameters": [
          {
            "description": "The ID of the FundingInformation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the FundingInformation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Funding Information",
                "type": "string",
                "description": "An old FundingInformationto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Fundinginformations Id Put Fundinginformations  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "FundingInformation"
        ],
        "summary": "Delete an existing FundingInformation",
        "description": "Delete an existing FundingInformation (more information in https://w3id.org/okn/o/sd#FundingInformation)",
        "operationId": "fundinginformations_id_delete_fundinginformations__id__delete",
        "parameters": [
          {
            "description": "The ID of the FundingInformation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the FundingInformation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/geocoordinatess": {
      "get": {
        "tags": [
          "GeoCoordinates"
        ],
        "summary": "List all instances of GeoCoordinates",
        "description": "Gets a list of all instances of GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates)",
        "operationId": "geocoordinatess_get_geocoordinatess_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of GeoCoordinates.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Geocoordinatess Get Geocoordinatess Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GeoCoordinates"
        ],
        "summary": "Create one GeoCoordinates",
        "description": "Create a new instance of GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates)",
        "operationId": "geocoordinatess_post_geocoordinatess_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Geo Coordinates",
                "type": "string",
                "description": "Information about the GeoCoordinatesto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Geocoordinatess Post Geocoordinatess Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/geocoordinatess/{id}": {
      "get": {
        "tags": [
          "GeoCoordinates"
        ],
        "summary": "Get a single GeoCoordinates by its id",
        "description": "Gets the details of a given GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates)",
        "operationId": "geocoordinatess_id_get_geocoordinatess__id__get",
        "parameters": [
          {
            "description": "The ID of the GeoCoordinates to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the GeoCoordinates to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given GeoCoordinates",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Geocoordinatess Id Get Geocoordinatess  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "GeoCoordinates"
        ],
        "summary": "Update an existing GeoCoordinates",
        "description": "Updates an existing GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates)",
        "operationId": "geocoordinatess_id_put_geocoordinatess__id__put",
        "parameters": [
          {
            "description": "The ID of the GeoCoordinates to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the GeoCoordinates to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Geo Coordinates",
                "type": "string",
                "description": "An old GeoCoordinatesto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Geocoordinatess Id Put Geocoordinatess  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "GeoCoordinates"
        ],
        "summary": "Delete an existing GeoCoordinates",
        "description": "Delete an existing GeoCoordinates (more information in https://w3id.org/okn/o/sdm#GeoCoordinates)",
        "operationId": "geocoordinatess_id_delete_geocoordinatess__id__delete",
        "parameters": [
          {
            "description": "The ID of the GeoCoordinates to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the GeoCoordinates to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/geoshapes": {
      "get": {
        "tags": [
          "GeoShape"
        ],
        "summary": "List all instances of GeoShape",
        "description": "Gets a list of all instances of GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)",
        "operationId": "geoshapes_get_geoshapes_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of GeoShape.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Geoshapes Get Geoshapes Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GeoShape"
        ],
        "summary": "Create one GeoShape",
        "description": "Create a new instance of GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)",
        "operationId": "geoshapes_post_geoshapes_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Geo Shape",
                "type": "string",
                "description": "Information about the GeoShapeto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Geoshapes Post Geoshapes Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/geoshapes/{id}": {
      "get": {
        "tags": [
          "GeoShape"
        ],
        "summary": "Get a single GeoShape by its id",
        "description": "Gets the details of a given GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)",
        "operationId": "geoshapes_id_get_geoshapes__id__get",
        "parameters": [
          {
            "description": "The ID of the GeoShape to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the GeoShape to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given GeoShape",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Geoshapes Id Get Geoshapes  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "GeoShape"
        ],
        "summary": "Update an existing GeoShape",
        "description": "Updates an existing GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)",
        "operationId": "geoshapes_id_put_geoshapes__id__put",
        "parameters": [
          {
            "description": "The ID of the GeoShape to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the GeoShape to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Geo Shape",
                "type": "string",
                "description": "An old GeoShapeto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Geoshapes Id Put Geoshapes  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "GeoShape"
        ],
        "summary": "Delete an existing GeoShape",
        "description": "Delete an existing GeoShape (more information in https://w3id.org/okn/o/sdm#GeoShape)",
        "operationId": "geoshapes_id_delete_geoshapes__id__delete",
        "parameters": [
          {
            "description": "The ID of the GeoShape to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the GeoShape to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/grids": {
      "get": {
        "tags": [
          "Grid"
        ],
        "summary": "List all instances of Grid",
        "description": "Gets a list of all instances of Grid (more information in https://w3id.org/okn/o/sdm#Grid)",
        "operationId": "grids_get_grids_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Grid.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Grids Get Grids Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Grid"
        ],
        "summary": "Create one Grid",
        "description": "Create a new instance of Grid (more information in https://w3id.org/okn/o/sdm#Grid)",
        "operationId": "grids_post_grids_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Grid",
                "type": "string",
                "description": "Information about the Gridto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Grids Post Grids Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/grids/{id}": {
      "get": {
        "tags": [
          "Grid"
        ],
        "summary": "Get a single Grid by its id",
        "description": "Gets the details of a given Grid (more information in https://w3id.org/okn/o/sdm#Grid)",
        "operationId": "grids_id_get_grids__id__get",
        "parameters": [
          {
            "description": "The ID of the Grid to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Grid to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Grid",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Grids Id Get Grids  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Grid"
        ],
        "summary": "Update an existing Grid",
        "description": "Updates an existing Grid (more information in https://w3id.org/okn/o/sdm#Grid)",
        "operationId": "grids_id_put_grids__id__put",
        "parameters": [
          {
            "description": "The ID of the Grid to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Grid to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Grid",
                "type": "string",
                "description": "An old Gridto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Grids Id Put Grids  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Grid"
        ],
        "summary": "Delete an existing Grid",
        "description": "Delete an existing Grid (more information in https://w3id.org/okn/o/sdm#Grid)",
        "operationId": "grids_id_delete_grids__id__delete",
        "parameters": [
          {
            "description": "The ID of the Grid to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Grid to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/hybridmodels": {
      "get": {
        "tags": [
          "HybridModel"
        ],
        "summary": "List all instances of HybridModel",
        "description": "Gets a list of all instances of HybridModel (more information in https://w3id.org/okn/o/sdm#HybridModel)",
        "operationId": "hybridmodels_get_hybridmodels_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of HybridModel.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Hybridmodels Get Hybridmodels Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HybridModel"
        ],
        "summary": "Create one HybridModel",
        "description": "Create a new instance of HybridModel (more information in https://w3id.org/okn/o/sdm#HybridModel)",
        "operationId": "hybridmodels_post_hybridmodels_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Hybrid Model",
                "type": "string",
                "description": "Information about the HybridModelto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Hybridmodels Post Hybridmodels Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/hybridmodels/{id}": {
      "get": {
        "tags": [
          "HybridModel"
        ],
        "summary": "Get a single HybridModel by its id",
        "description": "Gets the details of a given HybridModel (more information in https://w3id.org/okn/o/sdm#HybridModel)",
        "operationId": "hybridmodels_id_get_hybridmodels__id__get",
        "parameters": [
          {
            "description": "The ID of the HybridModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the HybridModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given HybridModel",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Hybridmodels Id Get Hybridmodels  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HybridModel"
        ],
        "summary": "Update an existing HybridModel",
        "description": "Updates an existing HybridModel (more information in https://w3id.org/okn/o/sdm#HybridModel)",
        "operationId": "hybridmodels_id_put_hybridmodels__id__put",
        "parameters": [
          {
            "description": "The ID of the HybridModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the HybridModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Hybrid Model",
                "type": "string",
                "description": "An old HybridModelto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Hybridmodels Id Put Hybridmodels  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "HybridModel"
        ],
        "summary": "Delete an existing HybridModel",
        "description": "Delete an existing HybridModel (more information in https://w3id.org/okn/o/sdm#HybridModel)",
        "operationId": "hybridmodels_id_delete_hybridmodels__id__delete",
        "parameters": [
          {
            "description": "The ID of the HybridModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the HybridModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/images": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "List all instances of Image",
        "description": "Gets a list of all instances of Image (more information in https://w3id.org/okn/o/sd#Image)",
        "operationId": "images_get_images_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Image.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Images Get Images Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Create one Image",
        "description": "Create a new instance of Image (more information in https://w3id.org/okn/o/sd#Image)",
        "operationId": "images_post_images_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Image",
                "type": "string",
                "description": "Information about the Imageto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Images Post Images Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/images/{id}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get a single Image by its id",
        "description": "Gets the details of a given Image (more information in https://w3id.org/okn/o/sd#Image)",
        "operationId": "images_id_get_images__id__get",
        "parameters": [
          {
            "description": "The ID of the Image to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Image to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Image",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Images Id Get Images  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Image"
        ],
        "summary": "Update an existing Image",
        "description": "Updates an existing Image (more information in https://w3id.org/okn/o/sd#Image)",
        "operationId": "images_id_put_images__id__put",
        "parameters": [
          {
            "description": "The ID of the Image to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Image to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Image",
                "type": "string",
                "description": "An old Imageto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Images Id Put Images  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Image"
        ],
        "summary": "Delete an existing Image",
        "description": "Delete an existing Image (more information in https://w3id.org/okn/o/sd#Image)",
        "operationId": "images_id_delete_images__id__delete",
        "parameters": [
          {
            "description": "The ID of the Image to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Image to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/interventions": {
      "get": {
        "tags": [
          "Intervention"
        ],
        "summary": "List all instances of Intervention",
        "description": "Gets a list of all instances of Intervention (more information in https://w3id.org/okn/o/sdm#Intervention)",
        "operationId": "interventions_get_interventions_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Intervention.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Interventions Get Interventions Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Intervention"
        ],
        "summary": "Create one Intervention",
        "description": "Create a new instance of Intervention (more information in https://w3id.org/okn/o/sdm#Intervention)",
        "operationId": "interventions_post_interventions_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Intervention",
                "type": "string",
                "description": "Information about the Interventionto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Interventions Post Interventions Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/interventions/{id}": {
      "get": {
        "tags": [
          "Intervention"
        ],
        "summary": "Get a single Intervention by its id",
        "description": "Gets the details of a given Intervention (more information in https://w3id.org/okn/o/sdm#Intervention)",
        "operationId": "interventions_id_get_interventions__id__get",
        "parameters": [
          {
            "description": "The ID of the Intervention to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Intervention to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Intervention",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Interventions Id Get Interventions  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Intervention"
        ],
        "summary": "Update an existing Intervention",
        "description": "Updates an existing Intervention (more information in https://w3id.org/okn/o/sdm#Intervention)",
        "operationId": "interventions_id_put_interventions__id__put",
        "parameters": [
          {
            "description": "The ID of the Intervention to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Intervention to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Intervention",
                "type": "string",
                "description": "An old Interventionto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Interventions Id Put Interventions  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Intervention"
        ],
        "summary": "Delete an existing Intervention",
        "description": "Delete an existing Intervention (more information in https://w3id.org/okn/o/sdm#Intervention)",
        "operationId": "interventions_id_delete_interventions__id__delete",
        "parameters": [
          {
            "description": "The ID of the Intervention to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Intervention to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/custom/model/index": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get a Model",
        "description": "Gets the details of a single instance of a Model",
        "operationId": "custom_model_index_get_custom_model_index_get",
        "parameters": [
          {
            "description": "Label of NumericalIndex",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Label of NumericalIndex"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_model_index"
            },
            "name": "custom_query_name",
            "in": "query"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a single instance of Model",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Model Index Get Custom Model Index Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/custom/model/intervention": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get a Model",
        "description": "Gets the details of a single instance of a Model",
        "operationId": "custom_model_intervention_get_custom_model_intervention_get",
        "parameters": [
          {
            "description": "Label of intervation",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Label of intervation"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_model_intervetion"
            },
            "name": "custom_query_name",
            "in": "query"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a single instance of Model",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Model Intervention Get Custom Model Intervention Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/custom/model/region": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get a Model",
        "description": "Gets the details of a single instance of a Model",
        "operationId": "custom_model_region_get_custom_model_region_get",
        "parameters": [
          {
            "description": "region to search",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "region to search"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_model_region"
            },
            "name": "custom_query_name",
            "in": "query"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a single instance of Model",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Model Region Get Custom Model Region Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/custom/models/standard_variable": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get a list of models",
        "description": "Gets a list of model filter by the label of a standard variable",
        "operationId": "custom_models_standard_variable_get_custom_models_standard_variable_get",
        "parameters": [
          {
            "description": "standard variable name",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "standard variable name"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_model_standard_variable"
            },
            "name": "custom_query_name",
            "in": "query"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets a list of models",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Models Standard Variable Get Custom Models Standard Variable Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/custom/models/variable": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get a list of Model",
        "description": "Get models by variable name",
        "operationId": "custom_models_variable_get_custom_models_variable_get",
        "parameters": [
          {
            "description": "variable to search",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "variable to search"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_models_variable"
            },
            "name": "custom_query_name",
            "in": "query"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets a list of instance of Model",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Models Variable Get Custom Models Variable Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "List all instances of Model",
        "description": "Gets a list of all instances of Model (more information in https://w3id.org/okn/o/sdm#Model)",
        "operationId": "models_get_models_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Model.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Models Get Models Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Model"
        ],
        "summary": "Create one Model",
        "description": "Create a new instance of Model (more information in https://w3id.org/okn/o/sdm#Model)",
        "operationId": "models_post_models_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Model",
                "type": "string",
                "description": "Information about the Modelto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Models Post Models Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Get a single Model by its id",
        "description": "Gets the details of a given Model (more information in https://w3id.org/okn/o/sdm#Model)",
        "operationId": "models_id_get_models__id__get",
        "parameters": [
          {
            "description": "The ID of the Model to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Model to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Model",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Models Id Get Models  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Model"
        ],
        "summary": "Update an existing Model",
        "description": "Updates an existing Model (more information in https://w3id.org/okn/o/sdm#Model)",
        "operationId": "models_id_put_models__id__put",
        "parameters": [
          {
            "description": "The ID of the Model to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Model to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Model",
                "type": "string",
                "description": "An old Modelto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Models Id Put Models  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Model"
        ],
        "summary": "Delete an existing Model",
        "description": "Delete an existing Model (more information in https://w3id.org/okn/o/sdm#Model)",
        "operationId": "models_id_delete_models__id__delete",
        "parameters": [
          {
            "description": "The ID of the Model to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Model to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/modelcategorys": {
      "get": {
        "tags": [
          "ModelCategory"
        ],
        "summary": "List all instances of ModelCategory",
        "description": "Gets a list of all instances of ModelCategory (more information in https://w3id.org/okn/o/sdm#ModelCategory)",
        "operationId": "modelcategorys_get_modelcategorys_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of ModelCategory.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Modelcategorys Get Modelcategorys Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ModelCategory"
        ],
        "summary": "Create one ModelCategory",
        "description": "Create a new instance of ModelCategory (more information in https://w3id.org/okn/o/sdm#ModelCategory)",
        "operationId": "modelcategorys_post_modelcategorys_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Model Category",
                "type": "string",
                "description": "Information about the ModelCategoryto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Modelcategorys Post Modelcategorys Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/modelcategorys/{id}": {
      "get": {
        "tags": [
          "ModelCategory"
        ],
        "summary": "Get a single ModelCategory by its id",
        "description": "Gets the details of a given ModelCategory (more information in https://w3id.org/okn/o/sdm#ModelCategory)",
        "operationId": "modelcategorys_id_get_modelcategorys__id__get",
        "parameters": [
          {
            "description": "The ID of the ModelCategory to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ModelCategory to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given ModelCategory",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Modelcategorys Id Get Modelcategorys  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ModelCategory"
        ],
        "summary": "Update an existing ModelCategory",
        "description": "Updates an existing ModelCategory (more information in https://w3id.org/okn/o/sdm#ModelCategory)",
        "operationId": "modelcategorys_id_put_modelcategorys__id__put",
        "parameters": [
          {
            "description": "The ID of the ModelCategory to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ModelCategory to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Model Category",
                "type": "string",
                "description": "An old ModelCategoryto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Modelcategorys Id Put Modelcategorys  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ModelCategory"
        ],
        "summary": "Delete an existing ModelCategory",
        "description": "Delete an existing ModelCategory (more information in https://w3id.org/okn/o/sdm#ModelCategory)",
        "operationId": "modelcategorys_id_delete_modelcategorys__id__delete",
        "parameters": [
          {
            "description": "The ID of the ModelCategory to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ModelCategory to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/custom/modelconfigurations/{id}": {
      "get": {
        "tags": [
          "ModelConfiguration"
        ],
        "summary": "Get a ModelConfiguration",
        "description": "Gets the details of a single instance of a ModelConfiguration",
        "operationId": "custom_modelconfigurations_id_get_custom_modelconfigurations__id__get",
        "parameters": [
          {
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the resource"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_modelconfigurations"
            },
            "name": "custom_query_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a single instance of ModelConfiguration",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Modelconfigurations Id Get Custom Modelconfigurations  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/modelconfigurations": {
      "get": {
        "tags": [
          "ModelConfiguration"
        ],
        "summary": "List all instances of ModelConfiguration",
        "description": "Gets a list of all instances of ModelConfiguration (more information in https://w3id.org/okn/o/sdm#ModelConfiguration)",
        "operationId": "modelconfigurations_get_modelconfigurations_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of ModelConfiguration.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Modelconfigurations Get Modelconfigurations Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ModelConfiguration"
        ],
        "summary": "Create one ModelConfiguration",
        "description": "Create a new instance of ModelConfiguration (more information in https://w3id.org/okn/o/sdm#ModelConfiguration)",
        "operationId": "modelconfigurations_post_modelconfigurations_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Model Configuration",
                "type": "string",
                "description": "Information about the ModelConfigurationto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Modelconfigurations Post Modelconfigurations Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/modelconfigurations/{id}": {
      "get": {
        "tags": [
          "ModelConfiguration"
        ],
        "summary": "Get a single ModelConfiguration by its id",
        "description": "Gets the details of a given ModelConfiguration (more information in https://w3id.org/okn/o/sdm#ModelConfiguration)",
        "operationId": "modelconfigurations_id_get_modelconfigurations__id__get",
        "parameters": [
          {
            "description": "The ID of the ModelConfiguration to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ModelConfiguration to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given ModelConfiguration",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Modelconfigurations Id Get Modelconfigurations  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ModelConfiguration"
        ],
        "summary": "Update an existing ModelConfiguration",
        "description": "Updates an existing ModelConfiguration (more information in https://w3id.org/okn/o/sdm#ModelConfiguration)",
        "operationId": "modelconfigurations_id_put_modelconfigurations__id__put",
        "parameters": [
          {
            "description": "The ID of the ModelConfiguration to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ModelConfiguration to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Model Configuration",
                "type": "string",
                "description": "An old ModelConfigurationto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Modelconfigurations Id Put Modelconfigurations  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ModelConfiguration"
        ],
        "summary": "Delete an existing ModelConfiguration",
        "description": "Delete an existing ModelConfiguration (more information in https://w3id.org/okn/o/sdm#ModelConfiguration)",
        "operationId": "modelconfigurations_id_delete_modelconfigurations__id__delete",
        "parameters": [
          {
            "description": "The ID of the ModelConfiguration to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ModelConfiguration to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/custom/modelconfigurationsetups/{id}": {
      "get": {
        "tags": [
          "ModelConfigurationSetup"
        ],
        "summary": "Get a ModelConfigurationSetup",
        "description": "Gets the details of a single instance of a ModelConfigurationSetup",
        "operationId": "custom_modelconfigurationsetups_id_get_custom_modelconfigurationsetups__id__get",
        "parameters": [
          {
            "description": "The ID of the resource",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the resource"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_modelconfigurationsetups"
            },
            "name": "custom_query_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a single instance of  ModelConfigurationSetup",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Modelconfigurationsetups Id Get Custom Modelconfigurationsetups  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/custom/modelconfigurationsetups/variable": {
      "get": {
        "tags": [
          "ModelConfigurationSetup"
        ],
        "summary": "Get a list  Model",
        "description": "Get model configurations by variable name",
        "operationId": "custom_modelconfigurationsetups_variable_get_custom_modelconfigurationsetups_variable_get",
        "parameters": [
          {
            "description": "variable to search",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "variable to search"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Name of the custom query",
            "required": false,
            "schema": {
              "title": "Custom Query Name",
              "type": "string",
              "description": "Name of the custom query",
              "default": "custom_modelconfigurationsetups_variable"
            },
            "name": "custom_query_name",
            "in": "query"
          },
          {
            "description": "Username to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Username to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets a list of instance of ModelConfigurationSetup",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Custom Modelconfigurationsetups Variable Get Custom Modelconfigurationsetups Variable Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/modelconfigurationsetups": {
      "get": {
        "tags": [
          "ModelConfigurationSetup"
        ],
        "summary": "List all instances of ModelConfigurationSetup",
        "description": "Gets a list of all instances of ModelConfigurationSetup (more information in https://w3id.org/okn/o/sdm#ModelConfigurationSetup)",
        "operationId": "modelconfigurationsetups_get_modelconfigurationsetups_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of ModelConfigurationSetup.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Modelconfigurationsetups Get Modelconfigurationsetups Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ModelConfigurationSetup"
        ],
        "summary": "Create one ModelConfigurationSetup",
        "description": "Create a new instance of ModelConfigurationSetup (more information in https://w3id.org/okn/o/sdm#ModelConfigurationSetup)",
        "operationId": "modelconfigurationsetups_post_modelconfigurationsetups_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Model Configuration Setup",
                "type": "string",
                "description": "Information about the ModelConfigurationSetupto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Modelconfigurationsetups Post Modelconfigurationsetups Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/modelconfigurationsetups/{id}": {
      "get": {
        "tags": [
          "ModelConfigurationSetup"
        ],
        "summary": "Get a single ModelConfigurationSetup by its id",
        "description": "Gets the details of a given ModelConfigurationSetup (more information in https://w3id.org/okn/o/sdm#ModelConfigurationSetup)",
        "operationId": "modelconfigurationsetups_id_get_modelconfigurationsetups__id__get",
        "parameters": [
          {
            "description": "The ID of the ModelConfigurationSetup to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ModelConfigurationSetup to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given ModelConfigurationSetup",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Modelconfigurationsetups Id Get Modelconfigurationsetups  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ModelConfigurationSetup"
        ],
        "summary": "Update an existing ModelConfigurationSetup",
        "description": "Updates an existing ModelConfigurationSetup (more information in https://w3id.org/okn/o/sdm#ModelConfigurationSetup)",
        "operationId": "modelconfigurationsetups_id_put_modelconfigurationsetups__id__put",
        "parameters": [
          {
            "description": "The ID of the ModelConfigurationSetup to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ModelConfigurationSetup to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Model Configuration Setup",
                "type": "string",
                "description": "An old ModelConfigurationSetupto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Modelconfigurationsetups Id Put Modelconfigurationsetups  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ModelConfigurationSetup"
        ],
        "summary": "Delete an existing ModelConfigurationSetup",
        "description": "Delete an existing ModelConfigurationSetup (more information in https://w3id.org/okn/o/sdm#ModelConfigurationSetup)",
        "operationId": "modelconfigurationsetups_id_delete_modelconfigurationsetups__id__delete",
        "parameters": [
          {
            "description": "The ID of the ModelConfigurationSetup to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the ModelConfigurationSetup to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/numericalindexs": {
      "get": {
        "tags": [
          "NumericalIndex"
        ],
        "summary": "List all instances of NumericalIndex",
        "description": "Gets a list of all instances of NumericalIndex (more information in https://w3id.org/okn/o/sd#NumericalIndex)",
        "operationId": "numericalindexs_get_numericalindexs_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of NumericalIndex.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Numericalindexs Get Numericalindexs Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "NumericalIndex"
        ],
        "summary": "Create one NumericalIndex",
        "description": "Create a new instance of NumericalIndex (more information in https://w3id.org/okn/o/sd#NumericalIndex)",
        "operationId": "numericalindexs_post_numericalindexs_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Numerical Index",
                "type": "string",
                "description": "Information about the NumericalIndexto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Numericalindexs Post Numericalindexs Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/numericalindexs/{id}": {
      "get": {
        "tags": [
          "NumericalIndex"
        ],
        "summary": "Get a single NumericalIndex by its id",
        "description": "Gets the details of a given NumericalIndex (more information in https://w3id.org/okn/o/sd#NumericalIndex)",
        "operationId": "numericalindexs_id_get_numericalindexs__id__get",
        "parameters": [
          {
            "description": "The ID of the NumericalIndex to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the NumericalIndex to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given NumericalIndex",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Numericalindexs Id Get Numericalindexs  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NumericalIndex"
        ],
        "summary": "Update an existing NumericalIndex",
        "description": "Updates an existing NumericalIndex (more information in https://w3id.org/okn/o/sd#NumericalIndex)",
        "operationId": "numericalindexs_id_put_numericalindexs__id__put",
        "parameters": [
          {
            "description": "The ID of the NumericalIndex to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the NumericalIndex to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Numerical Index",
                "type": "string",
                "description": "An old NumericalIndexto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Numericalindexs Id Put Numericalindexs  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "NumericalIndex"
        ],
        "summary": "Delete an existing NumericalIndex",
        "description": "Delete an existing NumericalIndex (more information in https://w3id.org/okn/o/sd#NumericalIndex)",
        "operationId": "numericalindexs_id_delete_numericalindexs__id__delete",
        "parameters": [
          {
            "description": "The ID of the NumericalIndex to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the NumericalIndex to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "List all instances of Organization",
        "description": "Gets a list of all instances of Organization (more information in https://w3id.org/okn/o/sd#Organization)",
        "operationId": "organizations_get_organizations_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Organization.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Organizations Get Organizations Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Create one Organization",
        "description": "Create a new instance of Organization (more information in https://w3id.org/okn/o/sd#Organization)",
        "operationId": "organizations_post_organizations_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Organization",
                "type": "string",
                "description": "Information about the Organizationto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Organizations Post Organizations Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/organizations/{id}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get a single Organization by its id",
        "description": "Gets the details of a given Organization (more information in https://w3id.org/okn/o/sd#Organization)",
        "operationId": "organizations_id_get_organizations__id__get",
        "parameters": [
          {
            "description": "The ID of the Organization to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Organization to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Organization",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Organizations Id Get Organizations  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Update an existing Organization",
        "description": "Updates an existing Organization (more information in https://w3id.org/okn/o/sd#Organization)",
        "operationId": "organizations_id_put_organizations__id__put",
        "parameters": [
          {
            "description": "The ID of the Organization to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Organization to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Organization",
                "type": "string",
                "description": "An old Organizationto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Organizations Id Put Organizations  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete an existing Organization",
        "description": "Delete an existing Organization (more information in https://w3id.org/okn/o/sd#Organization)",
        "operationId": "organizations_id_delete_organizations__id__delete",
        "parameters": [
          {
            "description": "The ID of the Organization to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Organization to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/parameters": {
      "get": {
        "tags": [
          "Parameter"
        ],
        "summary": "List all instances of Parameter",
        "description": "Gets a list of all instances of Parameter (more information in https://w3id.org/okn/o/sd#Parameter)",
        "operationId": "parameters_get_parameters_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Parameters Get Parameters Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Parameter"
        ],
        "summary": "Create one Parameter",
        "description": "Create a new instance of Parameter (more information in https://w3id.org/okn/o/sd#Parameter)",
        "operationId": "parameters_post_parameters_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Parameter",
                "type": "string",
                "description": "Information about the Parameterto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Parameters Post Parameters Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/parameters/{id}": {
      "get": {
        "tags": [
          "Parameter"
        ],
        "summary": "Get a single Parameter by its id",
        "description": "Gets the details of a given Parameter (more information in https://w3id.org/okn/o/sd#Parameter)",
        "operationId": "parameters_id_get_parameters__id__get",
        "parameters": [
          {
            "description": "The ID of the Parameter to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Parameter to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Parameter",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Parameters Id Get Parameters  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Parameter"
        ],
        "summary": "Update an existing Parameter",
        "description": "Updates an existing Parameter (more information in https://w3id.org/okn/o/sd#Parameter)",
        "operationId": "parameters_id_put_parameters__id__put",
        "parameters": [
          {
            "description": "The ID of the Parameter to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Parameter to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Parameter",
                "type": "string",
                "description": "An old Parameterto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Parameters Id Put Parameters  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Parameter"
        ],
        "summary": "Delete an existing Parameter",
        "description": "Delete an existing Parameter (more information in https://w3id.org/okn/o/sd#Parameter)",
        "operationId": "parameters_id_delete_parameters__id__delete",
        "parameters": [
          {
            "description": "The ID of the Parameter to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Parameter to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/persons": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "List all instances of Person",
        "description": "Gets a list of all instances of Person (more information in https://w3id.org/okn/o/sd#Person)",
        "operationId": "persons_get_persons_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Person.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Persons Get Persons Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Create one Person",
        "description": "Create a new instance of Person (more information in https://w3id.org/okn/o/sd#Person)",
        "operationId": "persons_post_persons_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Person",
                "type": "string",
                "description": "Information about the Personto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Persons Post Persons Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/persons/{id}": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get a single Person by its id",
        "description": "Gets the details of a given Person (more information in https://w3id.org/okn/o/sd#Person)",
        "operationId": "persons_id_get_persons__id__get",
        "parameters": [
          {
            "description": "The ID of the Person to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Person to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Person",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Persons Id Get Persons  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Person"
        ],
        "summary": "Update an existing Person",
        "description": "Updates an existing Person (more information in https://w3id.org/okn/o/sd#Person)",
        "operationId": "persons_id_put_persons__id__put",
        "parameters": [
          {
            "description": "The ID of the Person to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Person to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Person",
                "type": "string",
                "description": "An old Personto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Persons Id Put Persons  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Person"
        ],
        "summary": "Delete an existing Person",
        "description": "Delete an existing Person (more information in https://w3id.org/okn/o/sd#Person)",
        "operationId": "persons_id_delete_persons__id__delete",
        "parameters": [
          {
            "description": "The ID of the Person to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Person to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/pointbasedgrids": {
      "get": {
        "tags": [
          "PointBasedGrid"
        ],
        "summary": "List all instances of PointBasedGrid",
        "description": "Gets a list of all instances of PointBasedGrid (more information in https://w3id.org/okn/o/sdm#PointBasedGrid)",
        "operationId": "pointbasedgrids_get_pointbasedgrids_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of PointBasedGrid.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Pointbasedgrids Get Pointbasedgrids Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PointBasedGrid"
        ],
        "summary": "Create one PointBasedGrid",
        "description": "Create a new instance of PointBasedGrid (more information in https://w3id.org/okn/o/sdm#PointBasedGrid)",
        "operationId": "pointbasedgrids_post_pointbasedgrids_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Point Based Grid",
                "type": "string",
                "description": "Information about the PointBasedGridto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Pointbasedgrids Post Pointbasedgrids Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/pointbasedgrids/{id}": {
      "get": {
        "tags": [
          "PointBasedGrid"
        ],
        "summary": "Get a single PointBasedGrid by its id",
        "description": "Gets the details of a given PointBasedGrid (more information in https://w3id.org/okn/o/sdm#PointBasedGrid)",
        "operationId": "pointbasedgrids_id_get_pointbasedgrids__id__get",
        "parameters": [
          {
            "description": "The ID of the PointBasedGrid to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the PointBasedGrid to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given PointBasedGrid",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Pointbasedgrids Id Get Pointbasedgrids  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PointBasedGrid"
        ],
        "summary": "Update an existing PointBasedGrid",
        "description": "Updates an existing PointBasedGrid (more information in https://w3id.org/okn/o/sdm#PointBasedGrid)",
        "operationId": "pointbasedgrids_id_put_pointbasedgrids__id__put",
        "parameters": [
          {
            "description": "The ID of the PointBasedGrid to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the PointBasedGrid to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Point Based Grid",
                "type": "string",
                "description": "An old PointBasedGridto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Pointbasedgrids Id Put Pointbasedgrids  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PointBasedGrid"
        ],
        "summary": "Delete an existing PointBasedGrid",
        "description": "Delete an existing PointBasedGrid (more information in https://w3id.org/okn/o/sdm#PointBasedGrid)",
        "operationId": "pointbasedgrids_id_delete_pointbasedgrids__id__delete",
        "parameters": [
          {
            "description": "The ID of the PointBasedGrid to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the PointBasedGrid to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/processs": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "List all instances of Process",
        "description": "Gets a list of all instances of Process (more information in https://w3id.org/okn/o/sdm#Process)",
        "operationId": "processs_get_processs_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Process.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Processs Get Processs Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Process"
        ],
        "summary": "Create one Process",
        "description": "Create a new instance of Process (more information in https://w3id.org/okn/o/sdm#Process)",
        "operationId": "processs_post_processs_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Process",
                "type": "string",
                "description": "Information about the Processto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Processs Post Processs Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/processs/{id}": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get a single Process by its id",
        "description": "Gets the details of a given Process (more information in https://w3id.org/okn/o/sdm#Process)",
        "operationId": "processs_id_get_processs__id__get",
        "parameters": [
          {
            "description": "The ID of the Process to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Process to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Process",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Processs Id Get Processs  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Process"
        ],
        "summary": "Update an existing Process",
        "description": "Updates an existing Process (more information in https://w3id.org/okn/o/sdm#Process)",
        "operationId": "processs_id_put_processs__id__put",
        "parameters": [
          {
            "description": "The ID of the Process to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Process to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Process",
                "type": "string",
                "description": "An old Processto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Processs Id Put Processs  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Process"
        ],
        "summary": "Delete an existing Process",
        "description": "Delete an existing Process (more information in https://w3id.org/okn/o/sdm#Process)",
        "operationId": "processs_id_delete_processs__id__delete",
        "parameters": [
          {
            "description": "The ID of the Process to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Process to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/regions": {
      "get": {
        "tags": [
          "Region"
        ],
        "summary": "List all instances of Region",
        "description": "Gets a list of all instances of Region (more information in https://w3id.org/okn/o/sdm#Region)",
        "operationId": "regions_get_regions_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Region.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Regions Get Regions Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Region"
        ],
        "summary": "Create one Region",
        "description": "Create a new instance of Region (more information in https://w3id.org/okn/o/sdm#Region)",
        "operationId": "regions_post_regions_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Region",
                "type": "string",
                "description": "Information about the Regionto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Regions Post Regions Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/regions/{id}": {
      "get": {
        "tags": [
          "Region"
        ],
        "summary": "Get a single Region by its id",
        "description": "Gets the details of a given Region (more information in https://w3id.org/okn/o/sdm#Region)",
        "operationId": "regions_id_get_regions__id__get",
        "parameters": [
          {
            "description": "The ID of the Region to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Region to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Region",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Regions Id Get Regions  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Region"
        ],
        "summary": "Update an existing Region",
        "description": "Updates an existing Region (more information in https://w3id.org/okn/o/sdm#Region)",
        "operationId": "regions_id_put_regions__id__put",
        "parameters": [
          {
            "description": "The ID of the Region to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Region to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Region",
                "type": "string",
                "description": "An old Regionto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Regions Id Put Regions  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Region"
        ],
        "summary": "Delete an existing Region",
        "description": "Delete an existing Region (more information in https://w3id.org/okn/o/sdm#Region)",
        "operationId": "regions_id_delete_regions__id__delete",
        "parameters": [
          {
            "description": "The ID of the Region to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Region to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/samplecollections": {
      "get": {
        "tags": [
          "SampleCollection"
        ],
        "summary": "List all instances of SampleCollection",
        "description": "Gets a list of all instances of SampleCollection (more information in https://w3id.org/okn/o/sd#SampleCollection)",
        "operationId": "samplecollections_get_samplecollections_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of SampleCollection.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Samplecollections Get Samplecollections Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SampleCollection"
        ],
        "summary": "Create one SampleCollection",
        "description": "Create a new instance of SampleCollection (more information in https://w3id.org/okn/o/sd#SampleCollection)",
        "operationId": "samplecollections_post_samplecollections_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Sample Collection",
                "type": "string",
                "description": "Information about the SampleCollectionto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Samplecollections Post Samplecollections Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/samplecollections/{id}": {
      "get": {
        "tags": [
          "SampleCollection"
        ],
        "summary": "Get a single SampleCollection by its id",
        "description": "Gets the details of a given SampleCollection (more information in https://w3id.org/okn/o/sd#SampleCollection)",
        "operationId": "samplecollections_id_get_samplecollections__id__get",
        "parameters": [
          {
            "description": "The ID of the SampleCollection to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SampleCollection to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given SampleCollection",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Samplecollections Id Get Samplecollections  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SampleCollection"
        ],
        "summary": "Update an existing SampleCollection",
        "description": "Updates an existing SampleCollection (more information in https://w3id.org/okn/o/sd#SampleCollection)",
        "operationId": "samplecollections_id_put_samplecollections__id__put",
        "parameters": [
          {
            "description": "The ID of the SampleCollection to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SampleCollection to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Sample Collection",
                "type": "string",
                "description": "An old SampleCollectionto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Samplecollections Id Put Samplecollections  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SampleCollection"
        ],
        "summary": "Delete an existing SampleCollection",
        "description": "Delete an existing SampleCollection (more information in https://w3id.org/okn/o/sd#SampleCollection)",
        "operationId": "samplecollections_id_delete_samplecollections__id__delete",
        "parameters": [
          {
            "description": "The ID of the SampleCollection to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SampleCollection to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/sampleexecutions": {
      "get": {
        "tags": [
          "SampleExecution"
        ],
        "summary": "List all instances of SampleExecution",
        "description": "Gets a list of all instances of SampleExecution (more information in https://w3id.org/okn/o/sd#SampleExecution)",
        "operationId": "sampleexecutions_get_sampleexecutions_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of SampleExecution.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sampleexecutions Get Sampleexecutions Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SampleExecution"
        ],
        "summary": "Create one SampleExecution",
        "description": "Create a new instance of SampleExecution (more information in https://w3id.org/okn/o/sd#SampleExecution)",
        "operationId": "sampleexecutions_post_sampleexecutions_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Sample Execution",
                "type": "string",
                "description": "Information about the SampleExecutionto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Sampleexecutions Post Sampleexecutions Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/sampleexecutions/{id}": {
      "get": {
        "tags": [
          "SampleExecution"
        ],
        "summary": "Get a single SampleExecution by its id",
        "description": "Gets the details of a given SampleExecution (more information in https://w3id.org/okn/o/sd#SampleExecution)",
        "operationId": "sampleexecutions_id_get_sampleexecutions__id__get",
        "parameters": [
          {
            "description": "The ID of the SampleExecution to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SampleExecution to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given SampleExecution",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sampleexecutions Id Get Sampleexecutions  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SampleExecution"
        ],
        "summary": "Update an existing SampleExecution",
        "description": "Updates an existing SampleExecution (more information in https://w3id.org/okn/o/sd#SampleExecution)",
        "operationId": "sampleexecutions_id_put_sampleexecutions__id__put",
        "parameters": [
          {
            "description": "The ID of the SampleExecution to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SampleExecution to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Sample Execution",
                "type": "string",
                "description": "An old SampleExecutionto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sampleexecutions Id Put Sampleexecutions  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SampleExecution"
        ],
        "summary": "Delete an existing SampleExecution",
        "description": "Delete an existing SampleExecution (more information in https://w3id.org/okn/o/sd#SampleExecution)",
        "operationId": "sampleexecutions_id_delete_sampleexecutions__id__delete",
        "parameters": [
          {
            "description": "The ID of the SampleExecution to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SampleExecution to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/sampleresources": {
      "get": {
        "tags": [
          "SampleResource"
        ],
        "summary": "List all instances of SampleResource",
        "description": "Gets a list of all instances of SampleResource (more information in https://w3id.org/okn/o/sd#SampleResource)",
        "operationId": "sampleresources_get_sampleresources_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of SampleResource.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sampleresources Get Sampleresources Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SampleResource"
        ],
        "summary": "Create one SampleResource",
        "description": "Create a new instance of SampleResource (more information in https://w3id.org/okn/o/sd#SampleResource)",
        "operationId": "sampleresources_post_sampleresources_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Sample Resource",
                "type": "string",
                "description": "Information about the SampleResourceto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Sampleresources Post Sampleresources Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/sampleresources/{id}": {
      "get": {
        "tags": [
          "SampleResource"
        ],
        "summary": "Get a single SampleResource by its id",
        "description": "Gets the details of a given SampleResource (more information in https://w3id.org/okn/o/sd#SampleResource)",
        "operationId": "sampleresources_id_get_sampleresources__id__get",
        "parameters": [
          {
            "description": "The ID of the SampleResource to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SampleResource to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given SampleResource",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sampleresources Id Get Sampleresources  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SampleResource"
        ],
        "summary": "Update an existing SampleResource",
        "description": "Updates an existing SampleResource (more information in https://w3id.org/okn/o/sd#SampleResource)",
        "operationId": "sampleresources_id_put_sampleresources__id__put",
        "parameters": [
          {
            "description": "The ID of the SampleResource to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SampleResource to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Sample Resource",
                "type": "string",
                "description": "An old SampleResourceto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sampleresources Id Put Sampleresources  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SampleResource"
        ],
        "summary": "Delete an existing SampleResource",
        "description": "Delete an existing SampleResource (more information in https://w3id.org/okn/o/sd#SampleResource)",
        "operationId": "sampleresources_id_delete_sampleresources__id__delete",
        "parameters": [
          {
            "description": "The ID of the SampleResource to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SampleResource to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/softwares": {
      "get": {
        "tags": [
          "Software"
        ],
        "summary": "List all instances of Software",
        "description": "Gets a list of all instances of Software (more information in https://w3id.org/okn/o/sd#Software)",
        "operationId": "softwares_get_softwares_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Software.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwares Get Softwares Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Software"
        ],
        "summary": "Create one Software",
        "description": "Create a new instance of Software (more information in https://w3id.org/okn/o/sd#Software)",
        "operationId": "softwares_post_softwares_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Software",
                "type": "string",
                "description": "Information about the Softwareto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Softwares Post Softwares Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/softwares/{id}": {
      "get": {
        "tags": [
          "Software"
        ],
        "summary": "Get a single Software by its id",
        "description": "Gets the details of a given Software (more information in https://w3id.org/okn/o/sd#Software)",
        "operationId": "softwares_id_get_softwares__id__get",
        "parameters": [
          {
            "description": "The ID of the Software to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Software to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Software",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwares Id Get Softwares  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Software"
        ],
        "summary": "Update an existing Software",
        "description": "Updates an existing Software (more information in https://w3id.org/okn/o/sd#Software)",
        "operationId": "softwares_id_put_softwares__id__put",
        "parameters": [
          {
            "description": "The ID of the Software to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Software to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Software",
                "type": "string",
                "description": "An old Softwareto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwares Id Put Softwares  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Software"
        ],
        "summary": "Delete an existing Software",
        "description": "Delete an existing Software (more information in https://w3id.org/okn/o/sd#Software)",
        "operationId": "softwares_id_delete_softwares__id__delete",
        "parameters": [
          {
            "description": "The ID of the Software to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Software to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/softwareconfigurations": {
      "get": {
        "tags": [
          "SoftwareConfiguration"
        ],
        "summary": "List all instances of SoftwareConfiguration",
        "description": "Gets a list of all instances of SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)",
        "operationId": "softwareconfigurations_get_softwareconfigurations_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of SoftwareConfiguration.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwareconfigurations Get Softwareconfigurations Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SoftwareConfiguration"
        ],
        "summary": "Create one SoftwareConfiguration",
        "description": "Create a new instance of SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)",
        "operationId": "softwareconfigurations_post_softwareconfigurations_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Software Configuration",
                "type": "string",
                "description": "Information about the SoftwareConfigurationto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Softwareconfigurations Post Softwareconfigurations Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/softwareconfigurations/{id}": {
      "get": {
        "tags": [
          "SoftwareConfiguration"
        ],
        "summary": "Get a single SoftwareConfiguration by its id",
        "description": "Gets the details of a given SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)",
        "operationId": "softwareconfigurations_id_get_softwareconfigurations__id__get",
        "parameters": [
          {
            "description": "The ID of the SoftwareConfiguration to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SoftwareConfiguration to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given SoftwareConfiguration",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwareconfigurations Id Get Softwareconfigurations  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SoftwareConfiguration"
        ],
        "summary": "Update an existing SoftwareConfiguration",
        "description": "Updates an existing SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)",
        "operationId": "softwareconfigurations_id_put_softwareconfigurations__id__put",
        "parameters": [
          {
            "description": "The ID of the SoftwareConfiguration to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SoftwareConfiguration to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Software Configuration",
                "type": "string",
                "description": "An old SoftwareConfigurationto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwareconfigurations Id Put Softwareconfigurations  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SoftwareConfiguration"
        ],
        "summary": "Delete an existing SoftwareConfiguration",
        "description": "Delete an existing SoftwareConfiguration (more information in https://w3id.org/okn/o/sd#SoftwareConfiguration)",
        "operationId": "softwareconfigurations_id_delete_softwareconfigurations__id__delete",
        "parameters": [
          {
            "description": "The ID of the SoftwareConfiguration to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SoftwareConfiguration to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/softwareimages": {
      "get": {
        "tags": [
          "SoftwareImage"
        ],
        "summary": "List all instances of SoftwareImage",
        "description": "Gets a list of all instances of SoftwareImage (more information in https://w3id.org/okn/o/sd#SoftwareImage)",
        "operationId": "softwareimages_get_softwareimages_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of SoftwareImage.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwareimages Get Softwareimages Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SoftwareImage"
        ],
        "summary": "Create one SoftwareImage",
        "description": "Create a new instance of SoftwareImage (more information in https://w3id.org/okn/o/sd#SoftwareImage)",
        "operationId": "softwareimages_post_softwareimages_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Software Image",
                "type": "string",
                "description": "Information about the SoftwareImageto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Softwareimages Post Softwareimages Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/softwareimages/{id}": {
      "get": {
        "tags": [
          "SoftwareImage"
        ],
        "summary": "Get a single SoftwareImage by its id",
        "description": "Gets the details of a given SoftwareImage (more information in https://w3id.org/okn/o/sd#SoftwareImage)",
        "operationId": "softwareimages_id_get_softwareimages__id__get",
        "parameters": [
          {
            "description": "The ID of the SoftwareImage to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SoftwareImage to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given SoftwareImage",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwareimages Id Get Softwareimages  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SoftwareImage"
        ],
        "summary": "Update an existing SoftwareImage",
        "description": "Updates an existing SoftwareImage (more information in https://w3id.org/okn/o/sd#SoftwareImage)",
        "operationId": "softwareimages_id_put_softwareimages__id__put",
        "parameters": [
          {
            "description": "The ID of the SoftwareImage to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SoftwareImage to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Software Image",
                "type": "string",
                "description": "An old SoftwareImageto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwareimages Id Put Softwareimages  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SoftwareImage"
        ],
        "summary": "Delete an existing SoftwareImage",
        "description": "Delete an existing SoftwareImage (more information in https://w3id.org/okn/o/sd#SoftwareImage)",
        "operationId": "softwareimages_id_delete_softwareimages__id__delete",
        "parameters": [
          {
            "description": "The ID of the SoftwareImage to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SoftwareImage to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/softwareversions": {
      "get": {
        "tags": [
          "SoftwareVersion"
        ],
        "summary": "List all instances of SoftwareVersion",
        "description": "Gets a list of all instances of SoftwareVersion (more information in https://w3id.org/okn/o/sd#SoftwareVersion)",
        "operationId": "softwareversions_get_softwareversions_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of SoftwareVersion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwareversions Get Softwareversions Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SoftwareVersion"
        ],
        "summary": "Create one SoftwareVersion",
        "description": "Create a new instance of SoftwareVersion (more information in https://w3id.org/okn/o/sd#SoftwareVersion)",
        "operationId": "softwareversions_post_softwareversions_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Software Version",
                "type": "string",
                "description": "Information about the SoftwareVersionto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Softwareversions Post Softwareversions Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/softwareversions/{id}": {
      "get": {
        "tags": [
          "SoftwareVersion"
        ],
        "summary": "Get a single SoftwareVersion by its id",
        "description": "Gets the details of a given SoftwareVersion (more information in https://w3id.org/okn/o/sd#SoftwareVersion)",
        "operationId": "softwareversions_id_get_softwareversions__id__get",
        "parameters": [
          {
            "description": "The ID of the SoftwareVersion to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SoftwareVersion to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given SoftwareVersion",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwareversions Id Get Softwareversions  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SoftwareVersion"
        ],
        "summary": "Update an existing SoftwareVersion",
        "description": "Updates an existing SoftwareVersion (more information in https://w3id.org/okn/o/sd#SoftwareVersion)",
        "operationId": "softwareversions_id_put_softwareversions__id__put",
        "parameters": [
          {
            "description": "The ID of the SoftwareVersion to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SoftwareVersion to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Software Version",
                "type": "string",
                "description": "An old SoftwareVersionto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Softwareversions Id Put Softwareversions  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SoftwareVersion"
        ],
        "summary": "Delete an existing SoftwareVersion",
        "description": "Delete an existing SoftwareVersion (more information in https://w3id.org/okn/o/sd#SoftwareVersion)",
        "operationId": "softwareversions_id_delete_softwareversions__id__delete",
        "parameters": [
          {
            "description": "The ID of the SoftwareVersion to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SoftwareVersion to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/sourcecodes": {
      "get": {
        "tags": [
          "SourceCode"
        ],
        "summary": "List all instances of SourceCode",
        "description": "Gets a list of all instances of SourceCode (more information in https://w3id.org/okn/o/sd#SourceCode)",
        "operationId": "sourcecodes_get_sourcecodes_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of SourceCode.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sourcecodes Get Sourcecodes Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SourceCode"
        ],
        "summary": "Create one SourceCode",
        "description": "Create a new instance of SourceCode (more information in https://w3id.org/okn/o/sd#SourceCode)",
        "operationId": "sourcecodes_post_sourcecodes_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Source Code",
                "type": "string",
                "description": "Information about the SourceCodeto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Sourcecodes Post Sourcecodes Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/sourcecodes/{id}": {
      "get": {
        "tags": [
          "SourceCode"
        ],
        "summary": "Get a single SourceCode by its id",
        "description": "Gets the details of a given SourceCode (more information in https://w3id.org/okn/o/sd#SourceCode)",
        "operationId": "sourcecodes_id_get_sourcecodes__id__get",
        "parameters": [
          {
            "description": "The ID of the SourceCode to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SourceCode to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given SourceCode",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sourcecodes Id Get Sourcecodes  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SourceCode"
        ],
        "summary": "Update an existing SourceCode",
        "description": "Updates an existing SourceCode (more information in https://w3id.org/okn/o/sd#SourceCode)",
        "operationId": "sourcecodes_id_put_sourcecodes__id__put",
        "parameters": [
          {
            "description": "The ID of the SourceCode to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SourceCode to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Source Code",
                "type": "string",
                "description": "An old SourceCodeto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Sourcecodes Id Put Sourcecodes  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SourceCode"
        ],
        "summary": "Delete an existing SourceCode",
        "description": "Delete an existing SourceCode (more information in https://w3id.org/okn/o/sd#SourceCode)",
        "operationId": "sourcecodes_id_delete_sourcecodes__id__delete",
        "parameters": [
          {
            "description": "The ID of the SourceCode to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SourceCode to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/spatialresolutions": {
      "get": {
        "tags": [
          "SpatialResolution"
        ],
        "summary": "List all instances of SpatialResolution",
        "description": "Gets a list of all instances of SpatialResolution (more information in https://w3id.org/okn/o/sdm#SpatialResolution)",
        "operationId": "spatialresolutions_get_spatialresolutions_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of SpatialResolution.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Spatialresolutions Get Spatialresolutions Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SpatialResolution"
        ],
        "summary": "Create one SpatialResolution",
        "description": "Create a new instance of SpatialResolution (more information in https://w3id.org/okn/o/sdm#SpatialResolution)",
        "operationId": "spatialresolutions_post_spatialresolutions_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Spatial Resolution",
                "type": "string",
                "description": "Information about the SpatialResolutionto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Spatialresolutions Post Spatialresolutions Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/spatialresolutions/{id}": {
      "get": {
        "tags": [
          "SpatialResolution"
        ],
        "summary": "Get a single SpatialResolution by its id",
        "description": "Gets the details of a given SpatialResolution (more information in https://w3id.org/okn/o/sdm#SpatialResolution)",
        "operationId": "spatialresolutions_id_get_spatialresolutions__id__get",
        "parameters": [
          {
            "description": "The ID of the SpatialResolution to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SpatialResolution to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given SpatialResolution",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Spatialresolutions Id Get Spatialresolutions  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SpatialResolution"
        ],
        "summary": "Update an existing SpatialResolution",
        "description": "Updates an existing SpatialResolution (more information in https://w3id.org/okn/o/sdm#SpatialResolution)",
        "operationId": "spatialresolutions_id_put_spatialresolutions__id__put",
        "parameters": [
          {
            "description": "The ID of the SpatialResolution to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SpatialResolution to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Spatial Resolution",
                "type": "string",
                "description": "An old SpatialResolutionto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Spatialresolutions Id Put Spatialresolutions  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SpatialResolution"
        ],
        "summary": "Delete an existing SpatialResolution",
        "description": "Delete an existing SpatialResolution (more information in https://w3id.org/okn/o/sdm#SpatialResolution)",
        "operationId": "spatialresolutions_id_delete_spatialresolutions__id__delete",
        "parameters": [
          {
            "description": "The ID of the SpatialResolution to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SpatialResolution to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/spatiallydistributedgrids": {
      "get": {
        "tags": [
          "SpatiallyDistributedGrid"
        ],
        "summary": "List all instances of SpatiallyDistributedGrid",
        "description": "Gets a list of all instances of SpatiallyDistributedGrid (more information in https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)",
        "operationId": "spatiallydistributedgrids_get_spatiallydistributedgrids_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of SpatiallyDistributedGrid.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Spatiallydistributedgrids Get Spatiallydistributedgrids Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SpatiallyDistributedGrid"
        ],
        "summary": "Create one SpatiallyDistributedGrid",
        "description": "Create a new instance of SpatiallyDistributedGrid (more information in https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)",
        "operationId": "spatiallydistributedgrids_post_spatiallydistributedgrids_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Spatially Distributed Grid",
                "type": "string",
                "description": "Information about the SpatiallyDistributedGridto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Spatiallydistributedgrids Post Spatiallydistributedgrids Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/spatiallydistributedgrids/{id}": {
      "get": {
        "tags": [
          "SpatiallyDistributedGrid"
        ],
        "summary": "Get a single SpatiallyDistributedGrid by its id",
        "description": "Gets the details of a given SpatiallyDistributedGrid (more information in https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)",
        "operationId": "spatiallydistributedgrids_id_get_spatiallydistributedgrids__id__get",
        "parameters": [
          {
            "description": "The ID of the SpatiallyDistributedGrid to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SpatiallyDistributedGrid to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given SpatiallyDistributedGrid",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Spatiallydistributedgrids Id Get Spatiallydistributedgrids  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SpatiallyDistributedGrid"
        ],
        "summary": "Update an existing SpatiallyDistributedGrid",
        "description": "Updates an existing SpatiallyDistributedGrid (more information in https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)",
        "operationId": "spatiallydistributedgrids_id_put_spatiallydistributedgrids__id__put",
        "parameters": [
          {
            "description": "The ID of the SpatiallyDistributedGrid to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SpatiallyDistributedGrid to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Spatially Distributed Grid",
                "type": "string",
                "description": "An old SpatiallyDistributedGridto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Spatiallydistributedgrids Id Put Spatiallydistributedgrids  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SpatiallyDistributedGrid"
        ],
        "summary": "Delete an existing SpatiallyDistributedGrid",
        "description": "Delete an existing SpatiallyDistributedGrid (more information in https://w3id.org/okn/o/sdm#SpatiallyDistributedGrid)",
        "operationId": "spatiallydistributedgrids_id_delete_spatiallydistributedgrids__id__delete",
        "parameters": [
          {
            "description": "The ID of the SpatiallyDistributedGrid to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the SpatiallyDistributedGrid to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/standardvariables": {
      "get": {
        "tags": [
          "StandardVariable"
        ],
        "summary": "List all instances of StandardVariable",
        "description": "Gets a list of all instances of StandardVariable (more information in https://w3id.org/okn/o/sd#StandardVariable)",
        "operationId": "standardvariables_get_standardvariables_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          },
          {
            "description": "Enable CKAN output",
            "required": false,
            "schema": {
              "title": "Enable Ckan",
              "type": "boolean",
              "description": "Enable CKAN output",
              "default": false
            },
            "name": "enable_ckan",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of StandardVariable.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Standardvariables Get Standardvariables Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "StandardVariable"
        ],
        "summary": "Create one StandardVariable",
        "description": "Create a new instance of StandardVariable (more information in https://w3id.org/okn/o/sd#StandardVariable)",
        "operationId": "standardvariables_post_standardvariables_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Standard Variable",
                "type": "string",
                "description": "Information about the StandardVariableto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Standardvariables Post Standardvariables Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/standardvariables/{id}": {
      "get": {
        "tags": [
          "StandardVariable"
        ],
        "summary": "Get a single StandardVariable by its id",
        "description": "Gets the details of a given StandardVariable (more information in https://w3id.org/okn/o/sd#StandardVariable)",
        "operationId": "standardvariables_id_get_standardvariables__id__get",
        "parameters": [
          {
            "description": "The ID of the StandardVariable to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the StandardVariable to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given StandardVariable",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Standardvariables Id Get Standardvariables  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StandardVariable"
        ],
        "summary": "Update an existing StandardVariable",
        "description": "Updates an existing StandardVariable (more information in https://w3id.org/okn/o/sd#StandardVariable)",
        "operationId": "standardvariables_id_put_standardvariables__id__put",
        "parameters": [
          {
            "description": "The ID of the StandardVariable to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the StandardVariable to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Standard Variable",
                "type": "string",
                "description": "An old StandardVariableto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Standardvariables Id Put Standardvariables  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "StandardVariable"
        ],
        "summary": "Delete an existing StandardVariable",
        "description": "Delete an existing StandardVariable (more information in https://w3id.org/okn/o/sd#StandardVariable)",
        "operationId": "standardvariables_id_delete_standardvariables__id__delete",
        "parameters": [
          {
            "description": "The ID of the StandardVariable to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the StandardVariable to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/theory-guidedmodels": {
      "get": {
        "tags": [
          "Theory-GuidedModel"
        ],
        "summary": "List all instances of Theory-GuidedModel",
        "description": "Gets a list of all instances of Theory-GuidedModel (more information in https://w3id.org/okn/o/sdm#Theory-GuidedModel)",
        "operationId": "theory_guidedmodels_get_theory_guidedmodels_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Theory-GuidedModel.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Theory Guidedmodels Get Theory Guidedmodels Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Theory-GuidedModel"
        ],
        "summary": "Create one Theory-GuidedModel",
        "description": "Create a new instance of Theory-GuidedModel (more information in https://w3id.org/okn/o/sdm#Theory-GuidedModel)",
        "operationId": "theory_guidedmodels_post_theory_guidedmodels_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Theory Guided Model",
                "type": "string",
                "description": "Information about the Theory-GuidedModelto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Theory Guidedmodels Post Theory Guidedmodels Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/theory-guidedmodels/{id}": {
      "get": {
        "tags": [
          "Theory-GuidedModel"
        ],
        "summary": "Get a single Theory-GuidedModel by its id",
        "description": "Gets the details of a given Theory-GuidedModel (more information in https://w3id.org/okn/o/sdm#Theory-GuidedModel)",
        "operationId": "theory_guidedmodels_id_get_theory_guidedmodels__id__get",
        "parameters": [
          {
            "description": "The ID of the Theory-GuidedModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Theory-GuidedModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Theory-GuidedModel",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Theory Guidedmodels Id Get Theory Guidedmodels  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Theory-GuidedModel"
        ],
        "summary": "Update an existing Theory-GuidedModel",
        "description": "Updates an existing Theory-GuidedModel (more information in https://w3id.org/okn/o/sdm#Theory-GuidedModel)",
        "operationId": "theory_guidedmodels_id_put_theory_guidedmodels__id__put",
        "parameters": [
          {
            "description": "The ID of the Theory-GuidedModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Theory-GuidedModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Theory Guided Model",
                "type": "string",
                "description": "An old Theory-GuidedModelto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Theory Guidedmodels Id Put Theory Guidedmodels  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Theory-GuidedModel"
        ],
        "summary": "Delete an existing Theory-GuidedModel",
        "description": "Delete an existing Theory-GuidedModel (more information in https://w3id.org/okn/o/sdm#Theory-GuidedModel)",
        "operationId": "theory_guidedmodels_id_delete_theory_guidedmodels__id__delete",
        "parameters": [
          {
            "description": "The ID of the Theory-GuidedModel to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Theory-GuidedModel to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/timeintervals": {
      "get": {
        "tags": [
          "TimeInterval"
        ],
        "summary": "List all instances of TimeInterval",
        "description": "Gets a list of all instances of TimeInterval (more information in https://w3id.org/okn/o/sdm#TimeInterval)",
        "operationId": "timeintervals_get_timeintervals_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of TimeInterval.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Timeintervals Get Timeintervals Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeInterval"
        ],
        "summary": "Create one TimeInterval",
        "description": "Create a new instance of TimeInterval (more information in https://w3id.org/okn/o/sdm#TimeInterval)",
        "operationId": "timeintervals_post_timeintervals_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Time Interval",
                "type": "string",
                "description": "Information about the TimeIntervalto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Timeintervals Post Timeintervals Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/timeintervals/{id}": {
      "get": {
        "tags": [
          "TimeInterval"
        ],
        "summary": "Get a single TimeInterval by its id",
        "description": "Gets the details of a given TimeInterval (more information in https://w3id.org/okn/o/sdm#TimeInterval)",
        "operationId": "timeintervals_id_get_timeintervals__id__get",
        "parameters": [
          {
            "description": "The ID of the TimeInterval to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the TimeInterval to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given TimeInterval",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Timeintervals Id Get Timeintervals  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TimeInterval"
        ],
        "summary": "Update an existing TimeInterval",
        "description": "Updates an existing TimeInterval (more information in https://w3id.org/okn/o/sdm#TimeInterval)",
        "operationId": "timeintervals_id_put_timeintervals__id__put",
        "parameters": [
          {
            "description": "The ID of the TimeInterval to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the TimeInterval to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Time Interval",
                "type": "string",
                "description": "An old TimeIntervalto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Timeintervals Id Put Timeintervals  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TimeInterval"
        ],
        "summary": "Delete an existing TimeInterval",
        "description": "Delete an existing TimeInterval (more information in https://w3id.org/okn/o/sdm#TimeInterval)",
        "operationId": "timeintervals_id_delete_timeintervals__id__delete",
        "parameters": [
          {
            "description": "The ID of the TimeInterval to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the TimeInterval to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/units": {
      "get": {
        "tags": [
          "Unit"
        ],
        "summary": "List all instances of Unit",
        "description": "Gets a list of all instances of Unit (more information in https://w3id.org/okn/o/sd#Unit)",
        "operationId": "units_get_units_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Unit.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Units Get Units Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Unit"
        ],
        "summary": "Create one Unit",
        "description": "Create a new instance of Unit (more information in https://w3id.org/okn/o/sd#Unit)",
        "operationId": "units_post_units_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Unit",
                "type": "string",
                "description": "Information about the Unitto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Units Post Units Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/units/{id}": {
      "get": {
        "tags": [
          "Unit"
        ],
        "summary": "Get a single Unit by its id",
        "description": "Gets the details of a given Unit (more information in https://w3id.org/okn/o/sd#Unit)",
        "operationId": "units_id_get_units__id__get",
        "parameters": [
          {
            "description": "The ID of the Unit to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Unit to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Unit",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Units Id Get Units  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Unit"
        ],
        "summary": "Update an existing Unit",
        "description": "Updates an existing Unit (more information in https://w3id.org/okn/o/sd#Unit)",
        "operationId": "units_id_put_units__id__put",
        "parameters": [
          {
            "description": "The ID of the Unit to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Unit to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Unit",
                "type": "string",
                "description": "An old Unitto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Units Id Put Units  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Unit"
        ],
        "summary": "Delete an existing Unit",
        "description": "Delete an existing Unit (more information in https://w3id.org/okn/o/sd#Unit)",
        "operationId": "units_id_delete_units__id__delete",
        "parameters": [
          {
            "description": "The ID of the Unit to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Unit to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/variables": {
      "get": {
        "tags": [
          "Variable"
        ],
        "summary": "List all instances of Variable",
        "description": "Gets a list of all instances of Variable (more information in https://w3id.org/okn/o/sd#Variable)",
        "operationId": "variables_get_variables_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Variable.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Variables Get Variables Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Variable"
        ],
        "summary": "Create one Variable",
        "description": "Create a new instance of Variable (more information in https://w3id.org/okn/o/sd#Variable)",
        "operationId": "variables_post_variables_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Variable",
                "type": "string",
                "description": "Information about the Variableto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Variables Post Variables Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/variables/{id}": {
      "get": {
        "tags": [
          "Variable"
        ],
        "summary": "Get a single Variable by its id",
        "description": "Gets the details of a given Variable (more information in https://w3id.org/okn/o/sd#Variable)",
        "operationId": "variables_id_get_variables__id__get",
        "parameters": [
          {
            "description": "The ID of the Variable to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Variable to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Variable",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Variables Id Get Variables  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Variable"
        ],
        "summary": "Update an existing Variable",
        "description": "Updates an existing Variable (more information in https://w3id.org/okn/o/sd#Variable)",
        "operationId": "variables_id_put_variables__id__put",
        "parameters": [
          {
            "description": "The ID of the Variable to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Variable to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Variable",
                "type": "string",
                "description": "An old Variableto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Variables Id Put Variables  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Variable"
        ],
        "summary": "Delete an existing Variable",
        "description": "Delete an existing Variable (more information in https://w3id.org/okn/o/sd#Variable)",
        "operationId": "variables_id_delete_variables__id__delete",
        "parameters": [
          {
            "description": "The ID of the Variable to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Variable to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/variablepresentations": {
      "get": {
        "tags": [
          "VariablePresentation"
        ],
        "summary": "List all instances of VariablePresentation",
        "description": "Gets a list of all instances of VariablePresentation (more information in https://w3id.org/okn/o/sd#VariablePresentation)",
        "operationId": "variablepresentations_get_variablepresentations_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of VariablePresentation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Variablepresentations Get Variablepresentations Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "VariablePresentation"
        ],
        "summary": "Create one VariablePresentation",
        "description": "Create a new instance of VariablePresentation (more information in https://w3id.org/okn/o/sd#VariablePresentation)",
        "operationId": "variablepresentations_post_variablepresentations_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Variable Presentation",
                "type": "string",
                "description": "Information about the VariablePresentationto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Variablepresentations Post Variablepresentations Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/variablepresentations/{id}": {
      "get": {
        "tags": [
          "VariablePresentation"
        ],
        "summary": "Get a single VariablePresentation by its id",
        "description": "Gets the details of a given VariablePresentation (more information in https://w3id.org/okn/o/sd#VariablePresentation)",
        "operationId": "variablepresentations_id_get_variablepresentations__id__get",
        "parameters": [
          {
            "description": "The ID of the VariablePresentation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the VariablePresentation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given VariablePresentation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Variablepresentations Id Get Variablepresentations  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VariablePresentation"
        ],
        "summary": "Update an existing VariablePresentation",
        "description": "Updates an existing VariablePresentation (more information in https://w3id.org/okn/o/sd#VariablePresentation)",
        "operationId": "variablepresentations_id_put_variablepresentations__id__put",
        "parameters": [
          {
            "description": "The ID of the VariablePresentation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the VariablePresentation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Variable Presentation",
                "type": "string",
                "description": "An old VariablePresentationto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Variablepresentations Id Put Variablepresentations  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "VariablePresentation"
        ],
        "summary": "Delete an existing VariablePresentation",
        "description": "Delete an existing VariablePresentation (more information in https://w3id.org/okn/o/sd#VariablePresentation)",
        "operationId": "variablepresentations_id_delete_variablepresentations__id__delete",
        "parameters": [
          {
            "description": "The ID of the VariablePresentation to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the VariablePresentation to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/visualizations": {
      "get": {
        "tags": [
          "Visualization"
        ],
        "summary": "List all instances of Visualization",
        "description": "Gets a list of all instances of Visualization (more information in https://w3id.org/okn/o/sd#Visualization)",
        "operationId": "visualizations_get_visualizations_get",
        "parameters": [
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          },
          {
            "description": "Filter by label",
            "required": false,
            "schema": {
              "title": "Label",
              "type": "string",
              "description": "Filter by label"
            },
            "name": "label",
            "in": "query"
          },
          {
            "description": "Page number",
            "required": false,
            "schema": {
              "title": "Page",
              "type": "integer",
              "description": "Page number",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "description": "Items per page",
            "required": false,
            "schema": {
              "title": "Per Page",
              "maximum": 200.0,
              "minimum": 1.0,
              "type": "integer",
              "description": "Items per page",
              "default": 100
            },
            "name": "per_page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of Visualization.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Visualizations Get Visualizations Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Visualization"
        ],
        "summary": "Create one Visualization",
        "description": "Create a new instance of Visualization (more information in https://w3id.org/okn/o/sd#Visualization)",
        "operationId": "visualizations_post_visualizations_post",
        "parameters": [
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Visualization",
                "type": "string",
                "description": "Information about the Visualizationto be created"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 201 Visualizations Post Visualizations Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/visualizations/{id}": {
      "get": {
        "tags": [
          "Visualization"
        ],
        "summary": "Get a single Visualization by its id",
        "description": "Gets the details of a given Visualization (more information in https://w3id.org/okn/o/sd#Visualization)",
        "operationId": "visualizations_id_get_visualizations__id__get",
        "parameters": [
          {
            "description": "The ID of the Visualization to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Visualization to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Name of the user graph to query",
            "required": false,
            "schema": {
              "title": "Username",
              "type": "string",
              "description": "Name of the user graph to query"
            },
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of a given Visualization",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Visualizations Id Get Visualizations  Id  Get",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Visualization"
        ],
        "summary": "Update an existing Visualization",
        "description": "Updates an existing Visualization (more information in https://w3id.org/okn/o/sd#Visualization)",
        "operationId": "visualizations_id_put_visualizations__id__put",
        "parameters": [
          {
            "description": "The ID of the Visualization to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Visualization to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Visualization",
                "type": "string",
                "description": "An old Visualizationto be updated"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Visualizations Id Put Visualizations  Id  Put",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Visualization"
        ],
        "summary": "Delete an existing Visualization",
        "description": "Delete an existing Visualization (more information in https://w3id.org/okn/o/sd#Visualization)",
        "operationId": "visualizations_id_delete_visualizations__id__delete",
        "parameters": [
          {
            "description": "The ID of the Visualization to be retrieved",
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "description": "The ID of the Visualization to be retrieved"
            },
            "name": "id",
            "in": "path"
          },
          {
            "description": "Username",
            "required": false,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "Username"
            },
            "name": "user",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "202": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/tapis/{tenant}/apps": {
      "get": {
        "tags": [
          "TapisApp"
        ],
        "summary": "List all instances of TapisApp",
        "operationId": "tapis_apps_get_tapis__tenant__apps_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Tenant",
              "type": "string"
            },
            "name": "tenant",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an array with the instances of TapisApp.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response 200 Tapis Apps Get Tapis  Tenant  Apps Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TapisApp"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/tapis/{tenant}/apps/{app_id}/{app_version}": {
      "get": {
        "tags": [
          "TapisApp"
        ],
        "summary": "Get a single TapisApp by its id",
        "operationId": "tapis_apps_id_get_tapis__tenant__apps__app_id___app_version__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "App Id",
              "type": "string"
            },
            "name": "app_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "App Version",
              "type": "string"
            },
            "name": "app_version",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Tenant",
              "type": "string"
            },
            "name": "tenant",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response - returns an instance of TapisApp.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TapisApp"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CatalogIdentifier": {
        "title": "CatalogIdentifier",
        "type": "object",
        "properties": {
          "hasDefaultValue": {
            "title": "Hasdefaultvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasMaximumAcceptedValue": {
            "title": "Hasmaximumacceptedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataType": {
            "title": "Hasdatatype",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFixedValue": {
            "title": "Hasfixedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasPresentation": {
            "title": "Haspresentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recommendedIncrement": {
            "title": "Recommendedincrement",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasMinimumAcceptedValue": {
            "title": "Hasminimumacceptedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasAcceptedValues": {
            "title": "Hasacceptedvalues",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adjustsVariable": {
            "title": "Adjustsvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "relevantForIntervention": {
            "title": "Relevantforintervention",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "position": {
            "title": "Position",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "usesUnit": {
            "title": "Usesunit",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasStepSize": {
            "title": "Hasstepsize",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nCatalogIdentifier - a model defined in OpenAPI\n\n    has_default_value: The has_default_value of this CatalogIdentifier [Optional].\n    has_maximum_accepted_value: The has_maximum_accepted_value of this CatalogIdentifier [Optional].\n    description: The description of this CatalogIdentifier [Optional].\n    has_data_type: The has_data_type of this CatalogIdentifier [Optional].\n    has_fixed_value: The has_fixed_value of this CatalogIdentifier [Optional].\n    has_presentation: The has_presentation of this CatalogIdentifier [Optional].\n    label: The label of this CatalogIdentifier [Optional].\n    recommended_increment: The recommended_increment of this CatalogIdentifier [Optional].\n    type: The type of this CatalogIdentifier [Optional].\n    has_minimum_accepted_value: The has_minimum_accepted_value of this CatalogIdentifier [Optional].\n    has_accepted_values: The has_accepted_values of this CatalogIdentifier [Optional].\n    adjusts_variable: The adjusts_variable of this CatalogIdentifier [Optional].\n    relevant_for_intervention: The relevant_for_intervention of this CatalogIdentifier [Optional].\n    position: The position of this CatalogIdentifier [Optional].\n    id: The id of this CatalogIdentifier [Optional].\n    uses_unit: The uses_unit of this CatalogIdentifier [Optional].\n    has_step_size: The has_step_size of this CatalogIdentifier [Optional]."
      },
      "CausalDiagram": {
        "title": "CausalDiagram",
        "type": "object",
        "properties": {
          "hasDiagramPart": {
            "title": "Hasdiagrampart",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nCausalDiagram - a model defined in OpenAPI\n\n    has_diagram_part: The has_diagram_part of this CausalDiagram [Optional].\n    description: The description of this CausalDiagram [Optional].\n    id: The id of this CausalDiagram [Optional].\n    label: The label of this CausalDiagram [Optional].\n    type: The type of this CausalDiagram [Optional]."
      },
      "CausalDiagramHasDiagramPartInner": {
        "title": "CausalDiagramHasDiagramPartInner",
        "type": "object",
        "properties": {
          "hasDefaultValue": {
            "title": "Hasdefaultvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasShortName": {
            "title": "Hasshortname",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasMinimumAcceptedValue": {
            "title": "Hasminimumacceptedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasStandardVariable": {
            "title": "Hasstandardvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasMaximumAcceptedValue": {
            "title": "Hasmaximumacceptedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "partOfDataset": {
            "title": "Partofdataset",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usesUnit": {
            "title": "Usesunit",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasLongName": {
            "title": "Haslongname",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "influences": {
            "title": "Influences",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nCausalDiagramHasDiagramPartInner - a model defined in OpenAPI\n\n    has_default_value: The has_default_value of this CausalDiagramHasDiagramPartInner [Optional].\n    has_short_name: The has_short_name of this CausalDiagramHasDiagramPartInner [Optional].\n    has_minimum_accepted_value: The has_minimum_accepted_value of this CausalDiagramHasDiagramPartInner [Optional].\n    has_standard_variable: The has_standard_variable of this CausalDiagramHasDiagramPartInner [Optional].\n    has_maximum_accepted_value: The has_maximum_accepted_value of this CausalDiagramHasDiagramPartInner [Optional].\n    description: The description of this CausalDiagramHasDiagramPartInner [Optional].\n    part_of_dataset: The part_of_dataset of this CausalDiagramHasDiagramPartInner [Optional].\n    id: The id of this CausalDiagramHasDiagramPartInner [Optional].\n    label: The label of this CausalDiagramHasDiagramPartInner [Optional].\n    uses_unit: The uses_unit of this CausalDiagramHasDiagramPartInner [Optional].\n    type: The type of this CausalDiagramHasDiagramPartInner [Optional].\n    has_long_name: The has_long_name of this CausalDiagramHasDiagramPartInner [Optional].\n    influences: The influences of this CausalDiagramHasDiagramPartInner [Optional]."
      },
      "ConfigurationSetup": {
        "title": "ConfigurationSetup",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasImplementationScriptLocation": {
            "title": "Hasimplementationscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tag": {
            "title": "Tag",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleExecution": {
            "title": "Hassampleexecution",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleResult": {
            "title": "Hassampleresult",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "wasDerivedFromSetup": {
            "title": "Wasderivedfromsetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasConstraint": {
            "title": "Hasconstraint",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutionCommand": {
            "title": "Hasexecutioncommand",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSetup": {
            "title": "Hassetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutput": {
            "title": "Hasoutput",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "title": "Status",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasComponentLocation": {
            "title": "Hascomponentlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSoftwareImage": {
            "title": "Hassoftwareimage",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adjustableParameter": {
            "title": "Adjustableparameter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSupportScriptLocation": {
            "title": "Hassupportscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasParameter": {
            "title": "Hasparameter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInput": {
            "title": "Hasinput",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nConfigurationSetup - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this ConfigurationSetup [Optional].\n    keywords: The keywords of this ConfigurationSetup [Optional].\n    has_documentation: The has_documentation of this ConfigurationSetup [Optional].\n    has_implementation_script_location: The has_implementation_script_location of this ConfigurationSetup [Optional].\n    software_requirements: The software_requirements of this ConfigurationSetup [Optional].\n    has_download_url: The has_download_url of this ConfigurationSetup [Optional].\n    type: The type of this ConfigurationSetup [Optional].\n    has_installation_instructions: The has_installation_instructions of this ConfigurationSetup [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this ConfigurationSetup [Optional].\n    copyright_holder: The copyright_holder of this ConfigurationSetup [Optional].\n    has_faq: The has_faq of this ConfigurationSetup [Optional].\n    logo: The logo of this ConfigurationSetup [Optional].\n    has_contact_person: The has_contact_person of this ConfigurationSetup [Optional].\n    tag: The tag of this ConfigurationSetup [Optional].\n    id: The id of this ConfigurationSetup [Optional].\n    identifier: The identifier of this ConfigurationSetup [Optional].\n    has_sample_execution: The has_sample_execution of this ConfigurationSetup [Optional].\n    has_sample_result: The has_sample_result of this ConfigurationSetup [Optional].\n    author: The author of this ConfigurationSetup [Optional].\n    was_derived_from_setup: The was_derived_from_setup of this ConfigurationSetup [Optional].\n    has_constraint: The has_constraint of this ConfigurationSetup [Optional].\n    has_build_file: The has_build_file of this ConfigurationSetup [Optional].\n    short_description: The short_description of this ConfigurationSetup [Optional].\n    has_execution_command: The has_execution_command of this ConfigurationSetup [Optional].\n    date_published: The date_published of this ConfigurationSetup [Optional].\n    license: The license of this ConfigurationSetup [Optional].\n    has_source_code: The has_source_code of this ConfigurationSetup [Optional].\n    has_setup: The has_setup of this ConfigurationSetup [Optional].\n    has_example: The has_example of this ConfigurationSetup [Optional].\n    publisher: The publisher of this ConfigurationSetup [Optional].\n    has_output: The has_output of this ConfigurationSetup [Optional].\n    status: The status of this ConfigurationSetup [Optional].\n    doi: The doi of this ConfigurationSetup [Optional].\n    has_funding: The has_funding of this ConfigurationSetup [Optional].\n    has_component_location: The has_component_location of this ConfigurationSetup [Optional].\n    support_details: The support_details of this ConfigurationSetup [Optional].\n    has_version: The has_version of this ConfigurationSetup [Optional].\n    has_typical_data_source: The has_typical_data_source of this ConfigurationSetup [Optional].\n    description: The description of this ConfigurationSetup [Optional].\n    reference_publication: The reference_publication of this ConfigurationSetup [Optional].\n    screenshot: The screenshot of this ConfigurationSetup [Optional].\n    had_primary_source: The had_primary_source of this ConfigurationSetup [Optional].\n    issue_tracker: The issue_tracker of this ConfigurationSetup [Optional].\n    has_software_image: The has_software_image of this ConfigurationSetup [Optional].\n    date_created: The date_created of this ConfigurationSetup [Optional].\n    contributor: The contributor of this ConfigurationSetup [Optional].\n    has_purpose: The has_purpose of this ConfigurationSetup [Optional].\n    has_executable_instructions: The has_executable_instructions of this ConfigurationSetup [Optional].\n    has_sample_visualization: The has_sample_visualization of this ConfigurationSetup [Optional].\n    memory_requirements: The memory_requirements of this ConfigurationSetup [Optional].\n    website: The website of this ConfigurationSetup [Optional].\n    citation: The citation of this ConfigurationSetup [Optional].\n    processor_requirements: The processor_requirements of this ConfigurationSetup [Optional].\n    adjustable_parameter: The adjustable_parameter of this ConfigurationSetup [Optional].\n    has_usage_notes: The has_usage_notes of this ConfigurationSetup [Optional].\n    has_support_script_location: The has_support_script_location of this ConfigurationSetup [Optional].\n    readme: The readme of this ConfigurationSetup [Optional].\n    label: The label of this ConfigurationSetup [Optional].\n    has_assumption: The has_assumption of this ConfigurationSetup [Optional].\n    has_parameter: The has_parameter of this ConfigurationSetup [Optional].\n    operating_systems: The operating_systems of this ConfigurationSetup [Optional].\n    has_executable_notebook: The has_executable_notebook of this ConfigurationSetup [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this ConfigurationSetup [Optional].\n    has_input: The has_input of this ConfigurationSetup [Optional]."
      },
      "Constraint": {
        "title": "Constraint",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasRule": {
            "title": "Hasrule",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVariable": {
            "title": "Hasvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nConstraint - a model defined in OpenAPI\n\n    description: The description of this Constraint [Optional].\n    id: The id of this Constraint [Optional].\n    label: The label of this Constraint [Optional].\n    type: The type of this Constraint [Optional].\n    has_rule: The has_rule of this Constraint [Optional].\n    has_variable: The has_variable of this Constraint [Optional]."
      },
      "CoupledModel": {
        "title": "CoupledModel",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasGrid": {
            "title": "Hasgrid",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "limitations": {
            "title": "Limitations",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theoreticalBasis": {
            "title": "Theoreticalbasis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExplanationDiagram": {
            "title": "Hasexplanationdiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runtimeEstimation": {
            "title": "Runtimeestimation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasProcess": {
            "title": "Hasprocess",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usesModel": {
            "title": "Usesmodel",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelCategory": {
            "title": "Hasmodelcategory",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInputVariable": {
            "title": "Hasinputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterization": {
            "title": "Parameterization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasEquation": {
            "title": "Hasequation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputVariable": {
            "title": "Hasoutputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nCoupledModel - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this CoupledModel [Optional].\n    keywords: The keywords of this CoupledModel [Optional].\n    has_documentation: The has_documentation of this CoupledModel [Optional].\n    has_grid: The has_grid of this CoupledModel [Optional].\n    software_requirements: The software_requirements of this CoupledModel [Optional].\n    has_download_url: The has_download_url of this CoupledModel [Optional].\n    type: The type of this CoupledModel [Optional].\n    has_installation_instructions: The has_installation_instructions of this CoupledModel [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this CoupledModel [Optional].\n    copyright_holder: The copyright_holder of this CoupledModel [Optional].\n    has_faq: The has_faq of this CoupledModel [Optional].\n    logo: The logo of this CoupledModel [Optional].\n    has_contact_person: The has_contact_person of this CoupledModel [Optional].\n    id: The id of this CoupledModel [Optional].\n    limitations: The limitations of this CoupledModel [Optional].\n    identifier: The identifier of this CoupledModel [Optional].\n    author: The author of this CoupledModel [Optional].\n    has_build_file: The has_build_file of this CoupledModel [Optional].\n    short_description: The short_description of this CoupledModel [Optional].\n    date_published: The date_published of this CoupledModel [Optional].\n    theoretical_basis: The theoretical_basis of this CoupledModel [Optional].\n    license: The license of this CoupledModel [Optional].\n    has_source_code: The has_source_code of this CoupledModel [Optional].\n    has_explanation_diagram: The has_explanation_diagram of this CoupledModel [Optional].\n    has_example: The has_example of this CoupledModel [Optional].\n    publisher: The publisher of this CoupledModel [Optional].\n    runtime_estimation: The runtime_estimation of this CoupledModel [Optional].\n    doi: The doi of this CoupledModel [Optional].\n    has_funding: The has_funding of this CoupledModel [Optional].\n    has_process: The has_process of this CoupledModel [Optional].\n    support_details: The support_details of this CoupledModel [Optional].\n    has_version: The has_version of this CoupledModel [Optional].\n    has_typical_data_source: The has_typical_data_source of this CoupledModel [Optional].\n    description: The description of this CoupledModel [Optional].\n    reference_publication: The reference_publication of this CoupledModel [Optional].\n    screenshot: The screenshot of this CoupledModel [Optional].\n    uses_model: The uses_model of this CoupledModel [Optional].\n    has_model_category: The has_model_category of this CoupledModel [Optional].\n    had_primary_source: The had_primary_source of this CoupledModel [Optional].\n    issue_tracker: The issue_tracker of this CoupledModel [Optional].\n    date_created: The date_created of this CoupledModel [Optional].\n    contributor: The contributor of this CoupledModel [Optional].\n    has_input_variable: The has_input_variable of this CoupledModel [Optional].\n    has_purpose: The has_purpose of this CoupledModel [Optional].\n    has_executable_instructions: The has_executable_instructions of this CoupledModel [Optional].\n    has_sample_visualization: The has_sample_visualization of this CoupledModel [Optional].\n    memory_requirements: The memory_requirements of this CoupledModel [Optional].\n    website: The website of this CoupledModel [Optional].\n    citation: The citation of this CoupledModel [Optional].\n    processor_requirements: The processor_requirements of this CoupledModel [Optional].\n    parameterization: The parameterization of this CoupledModel [Optional].\n    has_usage_notes: The has_usage_notes of this CoupledModel [Optional].\n    readme: The readme of this CoupledModel [Optional].\n    label: The label of this CoupledModel [Optional].\n    has_assumption: The has_assumption of this CoupledModel [Optional].\n    operating_systems: The operating_systems of this CoupledModel [Optional].\n    has_executable_notebook: The has_executable_notebook of this CoupledModel [Optional].\n    has_equation: The has_equation of this CoupledModel [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this CoupledModel [Optional].\n    has_output_variable: The has_output_variable of this CoupledModel [Optional]."
      },
      "DataTransformation": {
        "title": "DataTransformation",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasImplementationScriptLocation": {
            "title": "Hasimplementationscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tag": {
            "title": "Tag",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleExecution": {
            "title": "Hassampleexecution",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleResult": {
            "title": "Hassampleresult",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasConstraint": {
            "title": "Hasconstraint",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutionCommand": {
            "title": "Hasexecutioncommand",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSetup": {
            "title": "Hassetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutput": {
            "title": "Hasoutput",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasComponentLocation": {
            "title": "Hascomponentlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSoftwareImage": {
            "title": "Hassoftwareimage",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSupportScriptLocation": {
            "title": "Hassupportscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasParameter": {
            "title": "Hasparameter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInput": {
            "title": "Hasinput",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nDataTransformation - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this DataTransformation [Optional].\n    keywords: The keywords of this DataTransformation [Optional].\n    has_documentation: The has_documentation of this DataTransformation [Optional].\n    has_implementation_script_location: The has_implementation_script_location of this DataTransformation [Optional].\n    software_requirements: The software_requirements of this DataTransformation [Optional].\n    has_download_url: The has_download_url of this DataTransformation [Optional].\n    type: The type of this DataTransformation [Optional].\n    has_installation_instructions: The has_installation_instructions of this DataTransformation [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this DataTransformation [Optional].\n    copyright_holder: The copyright_holder of this DataTransformation [Optional].\n    has_faq: The has_faq of this DataTransformation [Optional].\n    logo: The logo of this DataTransformation [Optional].\n    has_contact_person: The has_contact_person of this DataTransformation [Optional].\n    tag: The tag of this DataTransformation [Optional].\n    id: The id of this DataTransformation [Optional].\n    identifier: The identifier of this DataTransformation [Optional].\n    has_sample_execution: The has_sample_execution of this DataTransformation [Optional].\n    has_sample_result: The has_sample_result of this DataTransformation [Optional].\n    author: The author of this DataTransformation [Optional].\n    has_constraint: The has_constraint of this DataTransformation [Optional].\n    has_build_file: The has_build_file of this DataTransformation [Optional].\n    short_description: The short_description of this DataTransformation [Optional].\n    has_execution_command: The has_execution_command of this DataTransformation [Optional].\n    date_published: The date_published of this DataTransformation [Optional].\n    license: The license of this DataTransformation [Optional].\n    has_source_code: The has_source_code of this DataTransformation [Optional].\n    has_setup: The has_setup of this DataTransformation [Optional].\n    has_example: The has_example of this DataTransformation [Optional].\n    publisher: The publisher of this DataTransformation [Optional].\n    has_output: The has_output of this DataTransformation [Optional].\n    doi: The doi of this DataTransformation [Optional].\n    has_funding: The has_funding of this DataTransformation [Optional].\n    has_component_location: The has_component_location of this DataTransformation [Optional].\n    support_details: The support_details of this DataTransformation [Optional].\n    has_version: The has_version of this DataTransformation [Optional].\n    has_typical_data_source: The has_typical_data_source of this DataTransformation [Optional].\n    description: The description of this DataTransformation [Optional].\n    reference_publication: The reference_publication of this DataTransformation [Optional].\n    screenshot: The screenshot of this DataTransformation [Optional].\n    had_primary_source: The had_primary_source of this DataTransformation [Optional].\n    issue_tracker: The issue_tracker of this DataTransformation [Optional].\n    has_software_image: The has_software_image of this DataTransformation [Optional].\n    date_created: The date_created of this DataTransformation [Optional].\n    contributor: The contributor of this DataTransformation [Optional].\n    has_purpose: The has_purpose of this DataTransformation [Optional].\n    has_executable_instructions: The has_executable_instructions of this DataTransformation [Optional].\n    has_sample_visualization: The has_sample_visualization of this DataTransformation [Optional].\n    memory_requirements: The memory_requirements of this DataTransformation [Optional].\n    website: The website of this DataTransformation [Optional].\n    citation: The citation of this DataTransformation [Optional].\n    processor_requirements: The processor_requirements of this DataTransformation [Optional].\n    has_usage_notes: The has_usage_notes of this DataTransformation [Optional].\n    has_support_script_location: The has_support_script_location of this DataTransformation [Optional].\n    readme: The readme of this DataTransformation [Optional].\n    label: The label of this DataTransformation [Optional].\n    has_assumption: The has_assumption of this DataTransformation [Optional].\n    has_parameter: The has_parameter of this DataTransformation [Optional].\n    operating_systems: The operating_systems of this DataTransformation [Optional].\n    has_executable_notebook: The has_executable_notebook of this DataTransformation [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this DataTransformation [Optional].\n    has_input: The has_input of this DataTransformation [Optional]."
      },
      "DataTransformationSetup": {
        "title": "DataTransformationSetup",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasImplementationScriptLocation": {
            "title": "Hasimplementationscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tag": {
            "title": "Tag",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleExecution": {
            "title": "Hassampleexecution",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleResult": {
            "title": "Hassampleresult",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "wasDerivedFromSetup": {
            "title": "Wasderivedfromsetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasConstraint": {
            "title": "Hasconstraint",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutionCommand": {
            "title": "Hasexecutioncommand",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSetup": {
            "title": "Hassetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutput": {
            "title": "Hasoutput",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "title": "Status",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasComponentLocation": {
            "title": "Hascomponentlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSoftwareImage": {
            "title": "Hassoftwareimage",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adjustableParameter": {
            "title": "Adjustableparameter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSupportScriptLocation": {
            "title": "Hassupportscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasParameter": {
            "title": "Hasparameter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInput": {
            "title": "Hasinput",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nDataTransformationSetup - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this DataTransformationSetup [Optional].\n    keywords: The keywords of this DataTransformationSetup [Optional].\n    has_documentation: The has_documentation of this DataTransformationSetup [Optional].\n    has_implementation_script_location: The has_implementation_script_location of this DataTransformationSetup [Optional].\n    software_requirements: The software_requirements of this DataTransformationSetup [Optional].\n    has_download_url: The has_download_url of this DataTransformationSetup [Optional].\n    type: The type of this DataTransformationSetup [Optional].\n    has_installation_instructions: The has_installation_instructions of this DataTransformationSetup [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this DataTransformationSetup [Optional].\n    copyright_holder: The copyright_holder of this DataTransformationSetup [Optional].\n    has_faq: The has_faq of this DataTransformationSetup [Optional].\n    logo: The logo of this DataTransformationSetup [Optional].\n    has_contact_person: The has_contact_person of this DataTransformationSetup [Optional].\n    tag: The tag of this DataTransformationSetup [Optional].\n    id: The id of this DataTransformationSetup [Optional].\n    identifier: The identifier of this DataTransformationSetup [Optional].\n    has_sample_execution: The has_sample_execution of this DataTransformationSetup [Optional].\n    has_sample_result: The has_sample_result of this DataTransformationSetup [Optional].\n    author: The author of this DataTransformationSetup [Optional].\n    was_derived_from_setup: The was_derived_from_setup of this DataTransformationSetup [Optional].\n    has_constraint: The has_constraint of this DataTransformationSetup [Optional].\n    has_build_file: The has_build_file of this DataTransformationSetup [Optional].\n    short_description: The short_description of this DataTransformationSetup [Optional].\n    has_execution_command: The has_execution_command of this DataTransformationSetup [Optional].\n    date_published: The date_published of this DataTransformationSetup [Optional].\n    license: The license of this DataTransformationSetup [Optional].\n    has_source_code: The has_source_code of this DataTransformationSetup [Optional].\n    has_setup: The has_setup of this DataTransformationSetup [Optional].\n    has_example: The has_example of this DataTransformationSetup [Optional].\n    publisher: The publisher of this DataTransformationSetup [Optional].\n    has_output: The has_output of this DataTransformationSetup [Optional].\n    status: The status of this DataTransformationSetup [Optional].\n    doi: The doi of this DataTransformationSetup [Optional].\n    has_funding: The has_funding of this DataTransformationSetup [Optional].\n    has_component_location: The has_component_location of this DataTransformationSetup [Optional].\n    support_details: The support_details of this DataTransformationSetup [Optional].\n    has_version: The has_version of this DataTransformationSetup [Optional].\n    has_typical_data_source: The has_typical_data_source of this DataTransformationSetup [Optional].\n    description: The description of this DataTransformationSetup [Optional].\n    reference_publication: The reference_publication of this DataTransformationSetup [Optional].\n    screenshot: The screenshot of this DataTransformationSetup [Optional].\n    had_primary_source: The had_primary_source of this DataTransformationSetup [Optional].\n    issue_tracker: The issue_tracker of this DataTransformationSetup [Optional].\n    has_software_image: The has_software_image of this DataTransformationSetup [Optional].\n    date_created: The date_created of this DataTransformationSetup [Optional].\n    contributor: The contributor of this DataTransformationSetup [Optional].\n    has_purpose: The has_purpose of this DataTransformationSetup [Optional].\n    has_executable_instructions: The has_executable_instructions of this DataTransformationSetup [Optional].\n    has_sample_visualization: The has_sample_visualization of this DataTransformationSetup [Optional].\n    memory_requirements: The memory_requirements of this DataTransformationSetup [Optional].\n    website: The website of this DataTransformationSetup [Optional].\n    citation: The citation of this DataTransformationSetup [Optional].\n    processor_requirements: The processor_requirements of this DataTransformationSetup [Optional].\n    adjustable_parameter: The adjustable_parameter of this DataTransformationSetup [Optional].\n    has_usage_notes: The has_usage_notes of this DataTransformationSetup [Optional].\n    has_support_script_location: The has_support_script_location of this DataTransformationSetup [Optional].\n    readme: The readme of this DataTransformationSetup [Optional].\n    label: The label of this DataTransformationSetup [Optional].\n    has_assumption: The has_assumption of this DataTransformationSetup [Optional].\n    has_parameter: The has_parameter of this DataTransformationSetup [Optional].\n    operating_systems: The operating_systems of this DataTransformationSetup [Optional].\n    has_executable_notebook: The has_executable_notebook of this DataTransformationSetup [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this DataTransformationSetup [Optional].\n    has_input: The has_input of this DataTransformationSetup [Optional]."
      },
      "DatasetSpecification": {
        "title": "DatasetSpecification",
        "type": "object",
        "properties": {
          "hasDimensionality": {
            "title": "Hasdimensionality",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "hasFormat": {
            "title": "Hasformat",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pathLocation": {
            "title": "Pathlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFileStructure": {
            "title": "Hasfilestructure",
            "type": "array",
            "items": {}
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataTransformation": {
            "title": "Hasdatatransformation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPresentation": {
            "title": "Haspresentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFixedResource": {
            "title": "Hasfixedresource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isTransformedFrom": {
            "title": "Istransformedfrom",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataTransformationSetup": {
            "title": "Hasdatatransformationsetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "position": {
            "title": "Position",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nDatasetSpecification - a model defined in OpenAPI\n\n    has_dimensionality: The has_dimensionality of this DatasetSpecification [Optional].\n    has_format: The has_format of this DatasetSpecification [Optional].\n    path_location: The path_location of this DatasetSpecification [Optional].\n    has_file_structure: The has_file_structure of this DatasetSpecification [Optional].\n    description: The description of this DatasetSpecification [Optional].\n    has_data_transformation: The has_data_transformation of this DatasetSpecification [Optional].\n    has_presentation: The has_presentation of this DatasetSpecification [Optional].\n    label: The label of this DatasetSpecification [Optional].\n    type: The type of this DatasetSpecification [Optional].\n    has_fixed_resource: The has_fixed_resource of this DatasetSpecification [Optional].\n    is_transformed_from: The is_transformed_from of this DatasetSpecification [Optional].\n    has_data_transformation_setup: The has_data_transformation_setup of this DatasetSpecification [Optional].\n    position: The position of this DatasetSpecification [Optional].\n    id: The id of this DatasetSpecification [Optional]."
      },
      "EmpiricalModel": {
        "title": "EmpiricalModel",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasGrid": {
            "title": "Hasgrid",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "limitations": {
            "title": "Limitations",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theoreticalBasis": {
            "title": "Theoreticalbasis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExplanationDiagram": {
            "title": "Hasexplanationdiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runtimeEstimation": {
            "title": "Runtimeestimation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasProcess": {
            "title": "Hasprocess",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelCategory": {
            "title": "Hasmodelcategory",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInputVariable": {
            "title": "Hasinputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterization": {
            "title": "Parameterization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasEquation": {
            "title": "Hasequation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputVariable": {
            "title": "Hasoutputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nEmpiricalModel - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this EmpiricalModel [Optional].\n    keywords: The keywords of this EmpiricalModel [Optional].\n    has_documentation: The has_documentation of this EmpiricalModel [Optional].\n    has_grid: The has_grid of this EmpiricalModel [Optional].\n    software_requirements: The software_requirements of this EmpiricalModel [Optional].\n    has_download_url: The has_download_url of this EmpiricalModel [Optional].\n    type: The type of this EmpiricalModel [Optional].\n    has_installation_instructions: The has_installation_instructions of this EmpiricalModel [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this EmpiricalModel [Optional].\n    copyright_holder: The copyright_holder of this EmpiricalModel [Optional].\n    has_faq: The has_faq of this EmpiricalModel [Optional].\n    logo: The logo of this EmpiricalModel [Optional].\n    has_contact_person: The has_contact_person of this EmpiricalModel [Optional].\n    id: The id of this EmpiricalModel [Optional].\n    limitations: The limitations of this EmpiricalModel [Optional].\n    identifier: The identifier of this EmpiricalModel [Optional].\n    author: The author of this EmpiricalModel [Optional].\n    has_build_file: The has_build_file of this EmpiricalModel [Optional].\n    short_description: The short_description of this EmpiricalModel [Optional].\n    date_published: The date_published of this EmpiricalModel [Optional].\n    theoretical_basis: The theoretical_basis of this EmpiricalModel [Optional].\n    license: The license of this EmpiricalModel [Optional].\n    has_source_code: The has_source_code of this EmpiricalModel [Optional].\n    has_explanation_diagram: The has_explanation_diagram of this EmpiricalModel [Optional].\n    has_example: The has_example of this EmpiricalModel [Optional].\n    publisher: The publisher of this EmpiricalModel [Optional].\n    runtime_estimation: The runtime_estimation of this EmpiricalModel [Optional].\n    doi: The doi of this EmpiricalModel [Optional].\n    has_funding: The has_funding of this EmpiricalModel [Optional].\n    has_process: The has_process of this EmpiricalModel [Optional].\n    support_details: The support_details of this EmpiricalModel [Optional].\n    has_version: The has_version of this EmpiricalModel [Optional].\n    has_typical_data_source: The has_typical_data_source of this EmpiricalModel [Optional].\n    description: The description of this EmpiricalModel [Optional].\n    reference_publication: The reference_publication of this EmpiricalModel [Optional].\n    screenshot: The screenshot of this EmpiricalModel [Optional].\n    has_model_category: The has_model_category of this EmpiricalModel [Optional].\n    had_primary_source: The had_primary_source of this EmpiricalModel [Optional].\n    issue_tracker: The issue_tracker of this EmpiricalModel [Optional].\n    date_created: The date_created of this EmpiricalModel [Optional].\n    contributor: The contributor of this EmpiricalModel [Optional].\n    has_input_variable: The has_input_variable of this EmpiricalModel [Optional].\n    has_purpose: The has_purpose of this EmpiricalModel [Optional].\n    has_executable_instructions: The has_executable_instructions of this EmpiricalModel [Optional].\n    has_sample_visualization: The has_sample_visualization of this EmpiricalModel [Optional].\n    memory_requirements: The memory_requirements of this EmpiricalModel [Optional].\n    website: The website of this EmpiricalModel [Optional].\n    citation: The citation of this EmpiricalModel [Optional].\n    processor_requirements: The processor_requirements of this EmpiricalModel [Optional].\n    parameterization: The parameterization of this EmpiricalModel [Optional].\n    has_usage_notes: The has_usage_notes of this EmpiricalModel [Optional].\n    readme: The readme of this EmpiricalModel [Optional].\n    label: The label of this EmpiricalModel [Optional].\n    has_assumption: The has_assumption of this EmpiricalModel [Optional].\n    operating_systems: The operating_systems of this EmpiricalModel [Optional].\n    has_executable_notebook: The has_executable_notebook of this EmpiricalModel [Optional].\n    has_equation: The has_equation of this EmpiricalModel [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this EmpiricalModel [Optional].\n    has_output_variable: The has_output_variable of this EmpiricalModel [Optional]."
      },
      "Emulator": {
        "title": "Emulator",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasGrid": {
            "title": "Hasgrid",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "limitations": {
            "title": "Limitations",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theoreticalBasis": {
            "title": "Theoreticalbasis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExplanationDiagram": {
            "title": "Hasexplanationdiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runtimeEstimation": {
            "title": "Runtimeestimation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasProcess": {
            "title": "Hasprocess",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelCategory": {
            "title": "Hasmodelcategory",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInputVariable": {
            "title": "Hasinputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterization": {
            "title": "Parameterization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasEquation": {
            "title": "Hasequation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputVariable": {
            "title": "Hasoutputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nEmulator - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this Emulator [Optional].\n    keywords: The keywords of this Emulator [Optional].\n    has_documentation: The has_documentation of this Emulator [Optional].\n    has_grid: The has_grid of this Emulator [Optional].\n    software_requirements: The software_requirements of this Emulator [Optional].\n    has_download_url: The has_download_url of this Emulator [Optional].\n    type: The type of this Emulator [Optional].\n    has_installation_instructions: The has_installation_instructions of this Emulator [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this Emulator [Optional].\n    copyright_holder: The copyright_holder of this Emulator [Optional].\n    has_faq: The has_faq of this Emulator [Optional].\n    logo: The logo of this Emulator [Optional].\n    has_contact_person: The has_contact_person of this Emulator [Optional].\n    id: The id of this Emulator [Optional].\n    limitations: The limitations of this Emulator [Optional].\n    identifier: The identifier of this Emulator [Optional].\n    author: The author of this Emulator [Optional].\n    has_build_file: The has_build_file of this Emulator [Optional].\n    short_description: The short_description of this Emulator [Optional].\n    date_published: The date_published of this Emulator [Optional].\n    theoretical_basis: The theoretical_basis of this Emulator [Optional].\n    license: The license of this Emulator [Optional].\n    has_source_code: The has_source_code of this Emulator [Optional].\n    has_explanation_diagram: The has_explanation_diagram of this Emulator [Optional].\n    has_example: The has_example of this Emulator [Optional].\n    publisher: The publisher of this Emulator [Optional].\n    runtime_estimation: The runtime_estimation of this Emulator [Optional].\n    doi: The doi of this Emulator [Optional].\n    has_funding: The has_funding of this Emulator [Optional].\n    has_process: The has_process of this Emulator [Optional].\n    support_details: The support_details of this Emulator [Optional].\n    has_version: The has_version of this Emulator [Optional].\n    has_typical_data_source: The has_typical_data_source of this Emulator [Optional].\n    description: The description of this Emulator [Optional].\n    reference_publication: The reference_publication of this Emulator [Optional].\n    screenshot: The screenshot of this Emulator [Optional].\n    has_model_category: The has_model_category of this Emulator [Optional].\n    had_primary_source: The had_primary_source of this Emulator [Optional].\n    issue_tracker: The issue_tracker of this Emulator [Optional].\n    date_created: The date_created of this Emulator [Optional].\n    contributor: The contributor of this Emulator [Optional].\n    has_input_variable: The has_input_variable of this Emulator [Optional].\n    has_purpose: The has_purpose of this Emulator [Optional].\n    has_executable_instructions: The has_executable_instructions of this Emulator [Optional].\n    has_sample_visualization: The has_sample_visualization of this Emulator [Optional].\n    memory_requirements: The memory_requirements of this Emulator [Optional].\n    website: The website of this Emulator [Optional].\n    citation: The citation of this Emulator [Optional].\n    processor_requirements: The processor_requirements of this Emulator [Optional].\n    parameterization: The parameterization of this Emulator [Optional].\n    has_usage_notes: The has_usage_notes of this Emulator [Optional].\n    readme: The readme of this Emulator [Optional].\n    label: The label of this Emulator [Optional].\n    has_assumption: The has_assumption of this Emulator [Optional].\n    operating_systems: The operating_systems of this Emulator [Optional].\n    has_executable_notebook: The has_executable_notebook of this Emulator [Optional].\n    has_equation: The has_equation of this Emulator [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this Emulator [Optional].\n    has_output_variable: The has_output_variable of this Emulator [Optional]."
      },
      "EmulatorCopyrightHolderInner": {
        "title": "EmulatorCopyrightHolderInner",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "title": "Email",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nEmulatorCopyrightHolderInner - a model defined in OpenAPI\n\n    identifier: The identifier of this EmulatorCopyrightHolderInner [Optional].\n    website: The website of this EmulatorCopyrightHolderInner [Optional].\n    description: The description of this EmulatorCopyrightHolderInner [Optional].\n    id: The id of this EmulatorCopyrightHolderInner [Optional].\n    label: The label of this EmulatorCopyrightHolderInner [Optional].\n    type: The type of this EmulatorCopyrightHolderInner [Optional].\n    email: The email of this EmulatorCopyrightHolderInner [Optional]."
      },
      "Equation": {
        "title": "Equation",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nEquation - a model defined in OpenAPI\n\n    description: The description of this Equation [Optional].\n    id: The id of this Equation [Optional].\n    label: The label of this Equation [Optional].\n    type: The type of this Equation [Optional]."
      },
      "FundingInformation": {
        "title": "FundingInformation",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fundingSource": {
            "title": "Fundingsource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fundingGrant": {
            "title": "Fundinggrant",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nFundingInformation - a model defined in OpenAPI\n\n    description: The description of this FundingInformation [Optional].\n    id: The id of this FundingInformation [Optional].\n    label: The label of this FundingInformation [Optional].\n    funding_source: The funding_source of this FundingInformation [Optional].\n    type: The type of this FundingInformation [Optional].\n    funding_grant: The funding_grant of this FundingInformation [Optional]."
      },
      "GeoCoordinates": {
        "title": "GeoCoordinates",
        "type": "object",
        "properties": {
          "elevation": {
            "title": "Elevation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "latitude": {
            "title": "Latitude",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "longitude": {
            "title": "Longitude",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nGeoCoordinates - a model defined in OpenAPI\n\n    elevation: The elevation of this GeoCoordinates [Optional].\n    latitude: The latitude of this GeoCoordinates [Optional].\n    description: The description of this GeoCoordinates [Optional].\n    id: The id of this GeoCoordinates [Optional].\n    label: The label of this GeoCoordinates [Optional].\n    type: The type of this GeoCoordinates [Optional].\n    longitude: The longitude of this GeoCoordinates [Optional]."
      },
      "GeoShape": {
        "title": "GeoShape",
        "type": "object",
        "properties": {
          "elevation": {
            "title": "Elevation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "latitude": {
            "title": "Latitude",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "box": {
            "title": "Box",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "longitude": {
            "title": "Longitude",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nGeoShape - a model defined in OpenAPI\n\n    elevation: The elevation of this GeoShape [Optional].\n    latitude: The latitude of this GeoShape [Optional].\n    description: The description of this GeoShape [Optional].\n    box: The box of this GeoShape [Optional].\n    id: The id of this GeoShape [Optional].\n    label: The label of this GeoShape [Optional].\n    type: The type of this GeoShape [Optional].\n    longitude: The longitude of this GeoShape [Optional]."
      },
      "Grid": {
        "title": "Grid",
        "type": "object",
        "properties": {
          "hasDimensionality": {
            "title": "Hasdimensionality",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "hasFormat": {
            "title": "Hasformat",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pathLocation": {
            "title": "Pathlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFileStructure": {
            "title": "Hasfilestructure",
            "type": "array",
            "items": {}
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataTransformation": {
            "title": "Hasdatatransformation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPresentation": {
            "title": "Haspresentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFixedResource": {
            "title": "Hasfixedresource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasCoordinateSystem": {
            "title": "Hascoordinatesystem",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSpatialResolution": {
            "title": "Hasspatialresolution",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isTransformedFrom": {
            "title": "Istransformedfrom",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasShape": {
            "title": "Hasshape",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDimension": {
            "title": "Hasdimension",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataTransformationSetup": {
            "title": "Hasdatatransformationsetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "position": {
            "title": "Position",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nGrid - a model defined in OpenAPI\n\n    has_dimensionality: The has_dimensionality of this Grid [Optional].\n    has_format: The has_format of this Grid [Optional].\n    path_location: The path_location of this Grid [Optional].\n    has_file_structure: The has_file_structure of this Grid [Optional].\n    description: The description of this Grid [Optional].\n    has_data_transformation: The has_data_transformation of this Grid [Optional].\n    has_presentation: The has_presentation of this Grid [Optional].\n    label: The label of this Grid [Optional].\n    type: The type of this Grid [Optional].\n    has_fixed_resource: The has_fixed_resource of this Grid [Optional].\n    has_coordinate_system: The has_coordinate_system of this Grid [Optional].\n    has_spatial_resolution: The has_spatial_resolution of this Grid [Optional].\n    is_transformed_from: The is_transformed_from of this Grid [Optional].\n    has_shape: The has_shape of this Grid [Optional].\n    has_dimension: The has_dimension of this Grid [Optional].\n    has_data_transformation_setup: The has_data_transformation_setup of this Grid [Optional].\n    position: The position of this Grid [Optional].\n    id: The id of this Grid [Optional]."
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "HybridModel": {
        "title": "HybridModel",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasGrid": {
            "title": "Hasgrid",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "limitations": {
            "title": "Limitations",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theoreticalBasis": {
            "title": "Theoreticalbasis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExplanationDiagram": {
            "title": "Hasexplanationdiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runtimeEstimation": {
            "title": "Runtimeestimation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasProcess": {
            "title": "Hasprocess",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelCategory": {
            "title": "Hasmodelcategory",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInputVariable": {
            "title": "Hasinputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterization": {
            "title": "Parameterization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasEquation": {
            "title": "Hasequation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputVariable": {
            "title": "Hasoutputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nHybridModel - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this HybridModel [Optional].\n    keywords: The keywords of this HybridModel [Optional].\n    has_documentation: The has_documentation of this HybridModel [Optional].\n    has_grid: The has_grid of this HybridModel [Optional].\n    software_requirements: The software_requirements of this HybridModel [Optional].\n    has_download_url: The has_download_url of this HybridModel [Optional].\n    type: The type of this HybridModel [Optional].\n    has_installation_instructions: The has_installation_instructions of this HybridModel [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this HybridModel [Optional].\n    copyright_holder: The copyright_holder of this HybridModel [Optional].\n    has_faq: The has_faq of this HybridModel [Optional].\n    logo: The logo of this HybridModel [Optional].\n    has_contact_person: The has_contact_person of this HybridModel [Optional].\n    id: The id of this HybridModel [Optional].\n    limitations: The limitations of this HybridModel [Optional].\n    identifier: The identifier of this HybridModel [Optional].\n    author: The author of this HybridModel [Optional].\n    has_build_file: The has_build_file of this HybridModel [Optional].\n    short_description: The short_description of this HybridModel [Optional].\n    date_published: The date_published of this HybridModel [Optional].\n    theoretical_basis: The theoretical_basis of this HybridModel [Optional].\n    license: The license of this HybridModel [Optional].\n    has_source_code: The has_source_code of this HybridModel [Optional].\n    has_explanation_diagram: The has_explanation_diagram of this HybridModel [Optional].\n    has_example: The has_example of this HybridModel [Optional].\n    publisher: The publisher of this HybridModel [Optional].\n    runtime_estimation: The runtime_estimation of this HybridModel [Optional].\n    doi: The doi of this HybridModel [Optional].\n    has_funding: The has_funding of this HybridModel [Optional].\n    has_process: The has_process of this HybridModel [Optional].\n    support_details: The support_details of this HybridModel [Optional].\n    has_version: The has_version of this HybridModel [Optional].\n    has_typical_data_source: The has_typical_data_source of this HybridModel [Optional].\n    description: The description of this HybridModel [Optional].\n    reference_publication: The reference_publication of this HybridModel [Optional].\n    screenshot: The screenshot of this HybridModel [Optional].\n    has_model_category: The has_model_category of this HybridModel [Optional].\n    had_primary_source: The had_primary_source of this HybridModel [Optional].\n    issue_tracker: The issue_tracker of this HybridModel [Optional].\n    date_created: The date_created of this HybridModel [Optional].\n    contributor: The contributor of this HybridModel [Optional].\n    has_input_variable: The has_input_variable of this HybridModel [Optional].\n    has_purpose: The has_purpose of this HybridModel [Optional].\n    has_executable_instructions: The has_executable_instructions of this HybridModel [Optional].\n    has_sample_visualization: The has_sample_visualization of this HybridModel [Optional].\n    memory_requirements: The memory_requirements of this HybridModel [Optional].\n    website: The website of this HybridModel [Optional].\n    citation: The citation of this HybridModel [Optional].\n    processor_requirements: The processor_requirements of this HybridModel [Optional].\n    parameterization: The parameterization of this HybridModel [Optional].\n    has_usage_notes: The has_usage_notes of this HybridModel [Optional].\n    readme: The readme of this HybridModel [Optional].\n    label: The label of this HybridModel [Optional].\n    has_assumption: The has_assumption of this HybridModel [Optional].\n    operating_systems: The operating_systems of this HybridModel [Optional].\n    has_executable_notebook: The has_executable_notebook of this HybridModel [Optional].\n    has_equation: The has_equation of this HybridModel [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this HybridModel [Optional].\n    has_output_variable: The has_output_variable of this HybridModel [Optional]."
      },
      "Image": {
        "title": "Image",
        "type": "object",
        "properties": {
          "hasDimensionality": {
            "title": "Hasdimensionality",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "hasFormat": {
            "title": "Hasformat",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pathLocation": {
            "title": "Pathlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFileStructure": {
            "title": "Hasfilestructure",
            "type": "array",
            "items": {}
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataTransformation": {
            "title": "Hasdatatransformation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPresentation": {
            "title": "Haspresentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFixedResource": {
            "title": "Hasfixedresource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isTransformedFrom": {
            "title": "Istransformedfrom",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "hasDataTransformationSetup": {
            "title": "Hasdatatransformationsetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "position": {
            "title": "Position",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "value": {
            "title": "Value",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nImage - a model defined in OpenAPI\n\n    has_dimensionality: The has_dimensionality of this Image [Optional].\n    has_format: The has_format of this Image [Optional].\n    path_location: The path_location of this Image [Optional].\n    has_file_structure: The has_file_structure of this Image [Optional].\n    description: The description of this Image [Optional].\n    has_data_transformation: The has_data_transformation of this Image [Optional].\n    has_presentation: The has_presentation of this Image [Optional].\n    label: The label of this Image [Optional].\n    type: The type of this Image [Optional].\n    has_fixed_resource: The has_fixed_resource of this Image [Optional].\n    is_transformed_from: The is_transformed_from of this Image [Optional].\n    had_primary_source: The had_primary_source of this Image [Optional].\n    has_data_transformation_setup: The has_data_transformation_setup of this Image [Optional].\n    position: The position of this Image [Optional].\n    id: The id of this Image [Optional].\n    value: The value of this Image [Optional]."
      },
      "Intervention": {
        "title": "Intervention",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nIntervention - a model defined in OpenAPI\n\n    description: The description of this Intervention [Optional].\n    id: The id of this Intervention [Optional].\n    label: The label of this Intervention [Optional].\n    type: The type of this Intervention [Optional]."
      },
      "Model": {
        "title": "Model",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasGrid": {
            "title": "Hasgrid",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "limitations": {
            "title": "Limitations",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theoreticalBasis": {
            "title": "Theoreticalbasis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExplanationDiagram": {
            "title": "Hasexplanationdiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runtimeEstimation": {
            "title": "Runtimeestimation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasProcess": {
            "title": "Hasprocess",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelCategory": {
            "title": "Hasmodelcategory",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInputVariable": {
            "title": "Hasinputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterization": {
            "title": "Parameterization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasEquation": {
            "title": "Hasequation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputVariable": {
            "title": "Hasoutputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nModel - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this Model [Optional].\n    keywords: The keywords of this Model [Optional].\n    has_documentation: The has_documentation of this Model [Optional].\n    has_grid: The has_grid of this Model [Optional].\n    software_requirements: The software_requirements of this Model [Optional].\n    has_download_url: The has_download_url of this Model [Optional].\n    type: The type of this Model [Optional].\n    has_installation_instructions: The has_installation_instructions of this Model [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this Model [Optional].\n    copyright_holder: The copyright_holder of this Model [Optional].\n    has_faq: The has_faq of this Model [Optional].\n    logo: The logo of this Model [Optional].\n    has_contact_person: The has_contact_person of this Model [Optional].\n    id: The id of this Model [Optional].\n    limitations: The limitations of this Model [Optional].\n    identifier: The identifier of this Model [Optional].\n    author: The author of this Model [Optional].\n    has_build_file: The has_build_file of this Model [Optional].\n    short_description: The short_description of this Model [Optional].\n    date_published: The date_published of this Model [Optional].\n    theoretical_basis: The theoretical_basis of this Model [Optional].\n    license: The license of this Model [Optional].\n    has_source_code: The has_source_code of this Model [Optional].\n    has_explanation_diagram: The has_explanation_diagram of this Model [Optional].\n    has_example: The has_example of this Model [Optional].\n    publisher: The publisher of this Model [Optional].\n    runtime_estimation: The runtime_estimation of this Model [Optional].\n    doi: The doi of this Model [Optional].\n    has_funding: The has_funding of this Model [Optional].\n    has_process: The has_process of this Model [Optional].\n    support_details: The support_details of this Model [Optional].\n    has_version: The has_version of this Model [Optional].\n    has_typical_data_source: The has_typical_data_source of this Model [Optional].\n    description: The description of this Model [Optional].\n    reference_publication: The reference_publication of this Model [Optional].\n    screenshot: The screenshot of this Model [Optional].\n    has_model_category: The has_model_category of this Model [Optional].\n    had_primary_source: The had_primary_source of this Model [Optional].\n    issue_tracker: The issue_tracker of this Model [Optional].\n    date_created: The date_created of this Model [Optional].\n    contributor: The contributor of this Model [Optional].\n    has_input_variable: The has_input_variable of this Model [Optional].\n    has_purpose: The has_purpose of this Model [Optional].\n    has_executable_instructions: The has_executable_instructions of this Model [Optional].\n    has_sample_visualization: The has_sample_visualization of this Model [Optional].\n    memory_requirements: The memory_requirements of this Model [Optional].\n    website: The website of this Model [Optional].\n    citation: The citation of this Model [Optional].\n    processor_requirements: The processor_requirements of this Model [Optional].\n    parameterization: The parameterization of this Model [Optional].\n    has_usage_notes: The has_usage_notes of this Model [Optional].\n    readme: The readme of this Model [Optional].\n    label: The label of this Model [Optional].\n    has_assumption: The has_assumption of this Model [Optional].\n    operating_systems: The operating_systems of this Model [Optional].\n    has_executable_notebook: The has_executable_notebook of this Model [Optional].\n    has_equation: The has_equation of this Model [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this Model [Optional].\n    has_output_variable: The has_output_variable of this Model [Optional]."
      },
      "ModelCategory": {
        "title": "ModelCategory",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parentCategory": {
            "title": "Parentcategory",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nModelCategory - a model defined in OpenAPI\n\n    description: The description of this ModelCategory [Optional].\n    parent_category: The parent_category of this ModelCategory [Optional].\n    id: The id of this ModelCategory [Optional].\n    label: The label of this ModelCategory [Optional].\n    type: The type of this ModelCategory [Optional]."
      },
      "ModelConfiguration": {
        "title": "ModelConfiguration",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasGrid": {
            "title": "Hasgrid",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasImplementationScriptLocation": {
            "title": "Hasimplementationscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasRegion": {
            "title": "Hasregion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tag": {
            "title": "Tag",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "limitations": {
            "title": "Limitations",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleExecution": {
            "title": "Hassampleexecution",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleResult": {
            "title": "Hassampleresult",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasConstraint": {
            "title": "Hasconstraint",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutionCommand": {
            "title": "Hasexecutioncommand",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theoreticalBasis": {
            "title": "Theoreticalbasis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSetup": {
            "title": "Hassetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExplanationDiagram": {
            "title": "Hasexplanationdiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutput": {
            "title": "Hasoutput",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runtimeEstimation": {
            "title": "Runtimeestimation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputTimeInterval": {
            "title": "Hasoutputtimeinterval",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasComponentLocation": {
            "title": "Hascomponentlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasProcess": {
            "title": "Hasprocess",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelCategory": {
            "title": "Hasmodelcategory",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSoftwareImage": {
            "title": "Hassoftwareimage",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInputVariable": {
            "title": "Hasinputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelResultTable": {
            "title": "Hasmodelresulttable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasCausalDiagram": {
            "title": "Hascausaldiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterization": {
            "title": "Parameterization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSupportScriptLocation": {
            "title": "Hassupportscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasParameter": {
            "title": "Hasparameter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasEquation": {
            "title": "Hasequation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInput": {
            "title": "Hasinput",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputVariable": {
            "title": "Hasoutputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nModelConfiguration - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this ModelConfiguration [Optional].\n    keywords: The keywords of this ModelConfiguration [Optional].\n    has_documentation: The has_documentation of this ModelConfiguration [Optional].\n    has_grid: The has_grid of this ModelConfiguration [Optional].\n    has_implementation_script_location: The has_implementation_script_location of this ModelConfiguration [Optional].\n    software_requirements: The software_requirements of this ModelConfiguration [Optional].\n    has_download_url: The has_download_url of this ModelConfiguration [Optional].\n    type: The type of this ModelConfiguration [Optional].\n    has_installation_instructions: The has_installation_instructions of this ModelConfiguration [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this ModelConfiguration [Optional].\n    copyright_holder: The copyright_holder of this ModelConfiguration [Optional].\n    has_region: The has_region of this ModelConfiguration [Optional].\n    has_faq: The has_faq of this ModelConfiguration [Optional].\n    logo: The logo of this ModelConfiguration [Optional].\n    has_contact_person: The has_contact_person of this ModelConfiguration [Optional].\n    tag: The tag of this ModelConfiguration [Optional].\n    id: The id of this ModelConfiguration [Optional].\n    limitations: The limitations of this ModelConfiguration [Optional].\n    identifier: The identifier of this ModelConfiguration [Optional].\n    has_sample_execution: The has_sample_execution of this ModelConfiguration [Optional].\n    has_sample_result: The has_sample_result of this ModelConfiguration [Optional].\n    author: The author of this ModelConfiguration [Optional].\n    has_constraint: The has_constraint of this ModelConfiguration [Optional].\n    has_build_file: The has_build_file of this ModelConfiguration [Optional].\n    short_description: The short_description of this ModelConfiguration [Optional].\n    has_execution_command: The has_execution_command of this ModelConfiguration [Optional].\n    date_published: The date_published of this ModelConfiguration [Optional].\n    theoretical_basis: The theoretical_basis of this ModelConfiguration [Optional].\n    license: The license of this ModelConfiguration [Optional].\n    has_source_code: The has_source_code of this ModelConfiguration [Optional].\n    has_setup: The has_setup of this ModelConfiguration [Optional].\n    has_explanation_diagram: The has_explanation_diagram of this ModelConfiguration [Optional].\n    has_example: The has_example of this ModelConfiguration [Optional].\n    publisher: The publisher of this ModelConfiguration [Optional].\n    has_output: The has_output of this ModelConfiguration [Optional].\n    runtime_estimation: The runtime_estimation of this ModelConfiguration [Optional].\n    has_output_time_interval: The has_output_time_interval of this ModelConfiguration [Optional].\n    doi: The doi of this ModelConfiguration [Optional].\n    has_funding: The has_funding of this ModelConfiguration [Optional].\n    has_component_location: The has_component_location of this ModelConfiguration [Optional].\n    has_process: The has_process of this ModelConfiguration [Optional].\n    support_details: The support_details of this ModelConfiguration [Optional].\n    has_version: The has_version of this ModelConfiguration [Optional].\n    has_typical_data_source: The has_typical_data_source of this ModelConfiguration [Optional].\n    description: The description of this ModelConfiguration [Optional].\n    reference_publication: The reference_publication of this ModelConfiguration [Optional].\n    screenshot: The screenshot of this ModelConfiguration [Optional].\n    has_model_category: The has_model_category of this ModelConfiguration [Optional].\n    had_primary_source: The had_primary_source of this ModelConfiguration [Optional].\n    issue_tracker: The issue_tracker of this ModelConfiguration [Optional].\n    has_software_image: The has_software_image of this ModelConfiguration [Optional].\n    date_created: The date_created of this ModelConfiguration [Optional].\n    contributor: The contributor of this ModelConfiguration [Optional].\n    has_input_variable: The has_input_variable of this ModelConfiguration [Optional].\n    has_model_result_table: The has_model_result_table of this ModelConfiguration [Optional].\n    has_purpose: The has_purpose of this ModelConfiguration [Optional].\n    has_executable_instructions: The has_executable_instructions of this ModelConfiguration [Optional].\n    has_sample_visualization: The has_sample_visualization of this ModelConfiguration [Optional].\n    has_causal_diagram: The has_causal_diagram of this ModelConfiguration [Optional].\n    memory_requirements: The memory_requirements of this ModelConfiguration [Optional].\n    website: The website of this ModelConfiguration [Optional].\n    citation: The citation of this ModelConfiguration [Optional].\n    processor_requirements: The processor_requirements of this ModelConfiguration [Optional].\n    parameterization: The parameterization of this ModelConfiguration [Optional].\n    has_usage_notes: The has_usage_notes of this ModelConfiguration [Optional].\n    has_support_script_location: The has_support_script_location of this ModelConfiguration [Optional].\n    readme: The readme of this ModelConfiguration [Optional].\n    label: The label of this ModelConfiguration [Optional].\n    has_assumption: The has_assumption of this ModelConfiguration [Optional].\n    has_parameter: The has_parameter of this ModelConfiguration [Optional].\n    operating_systems: The operating_systems of this ModelConfiguration [Optional].\n    has_executable_notebook: The has_executable_notebook of this ModelConfiguration [Optional].\n    has_equation: The has_equation of this ModelConfiguration [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this ModelConfiguration [Optional].\n    has_input: The has_input of this ModelConfiguration [Optional].\n    has_output_variable: The has_output_variable of this ModelConfiguration [Optional]."
      },
      "ModelConfigurationSetup": {
        "title": "ModelConfigurationSetup",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasGrid": {
            "title": "Hasgrid",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasImplementationScriptLocation": {
            "title": "Hasimplementationscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "calibratedVariable": {
            "title": "Calibratedvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "calibrationMethod": {
            "title": "Calibrationmethod",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasRegion": {
            "title": "Hasregion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tag": {
            "title": "Tag",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "limitations": {
            "title": "Limitations",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleExecution": {
            "title": "Hassampleexecution",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleResult": {
            "title": "Hassampleresult",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "wasDerivedFromSetup": {
            "title": "Wasderivedfromsetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasConstraint": {
            "title": "Hasconstraint",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutionCommand": {
            "title": "Hasexecutioncommand",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theoreticalBasis": {
            "title": "Theoreticalbasis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSetup": {
            "title": "Hassetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExplanationDiagram": {
            "title": "Hasexplanationdiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "calibrationInterval": {
            "title": "Calibrationinterval",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutput": {
            "title": "Hasoutput",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runtimeEstimation": {
            "title": "Runtimeestimation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputTimeInterval": {
            "title": "Hasoutputtimeinterval",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "title": "Status",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterAssignmentMethod": {
            "title": "Parameterassignmentmethod",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasComponentLocation": {
            "title": "Hascomponentlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasProcess": {
            "title": "Hasprocess",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelCategory": {
            "title": "Hasmodelcategory",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSoftwareImage": {
            "title": "Hassoftwareimage",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInputVariable": {
            "title": "Hasinputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelResultTable": {
            "title": "Hasmodelresulttable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "calibrationTargetVariable": {
            "title": "Calibrationtargetvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasCausalDiagram": {
            "title": "Hascausaldiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterization": {
            "title": "Parameterization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adjustableParameter": {
            "title": "Adjustableparameter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSupportScriptLocation": {
            "title": "Hassupportscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasParameter": {
            "title": "Hasparameter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "validUntil": {
            "title": "Validuntil",
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "hasEquation": {
            "title": "Hasequation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInput": {
            "title": "Hasinput",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputVariable": {
            "title": "Hasoutputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nModelConfigurationSetup - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this ModelConfigurationSetup [Optional].\n    keywords: The keywords of this ModelConfigurationSetup [Optional].\n    has_documentation: The has_documentation of this ModelConfigurationSetup [Optional].\n    has_grid: The has_grid of this ModelConfigurationSetup [Optional].\n    has_implementation_script_location: The has_implementation_script_location of this ModelConfigurationSetup [Optional].\n    software_requirements: The software_requirements of this ModelConfigurationSetup [Optional].\n    has_download_url: The has_download_url of this ModelConfigurationSetup [Optional].\n    type: The type of this ModelConfigurationSetup [Optional].\n    calibrated_variable: The calibrated_variable of this ModelConfigurationSetup [Optional].\n    has_installation_instructions: The has_installation_instructions of this ModelConfigurationSetup [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this ModelConfigurationSetup [Optional].\n    copyright_holder: The copyright_holder of this ModelConfigurationSetup [Optional].\n    calibration_method: The calibration_method of this ModelConfigurationSetup [Optional].\n    has_region: The has_region of this ModelConfigurationSetup [Optional].\n    has_faq: The has_faq of this ModelConfigurationSetup [Optional].\n    logo: The logo of this ModelConfigurationSetup [Optional].\n    has_contact_person: The has_contact_person of this ModelConfigurationSetup [Optional].\n    tag: The tag of this ModelConfigurationSetup [Optional].\n    id: The id of this ModelConfigurationSetup [Optional].\n    limitations: The limitations of this ModelConfigurationSetup [Optional].\n    identifier: The identifier of this ModelConfigurationSetup [Optional].\n    has_sample_execution: The has_sample_execution of this ModelConfigurationSetup [Optional].\n    has_sample_result: The has_sample_result of this ModelConfigurationSetup [Optional].\n    author: The author of this ModelConfigurationSetup [Optional].\n    was_derived_from_setup: The was_derived_from_setup of this ModelConfigurationSetup [Optional].\n    has_constraint: The has_constraint of this ModelConfigurationSetup [Optional].\n    has_build_file: The has_build_file of this ModelConfigurationSetup [Optional].\n    short_description: The short_description of this ModelConfigurationSetup [Optional].\n    has_execution_command: The has_execution_command of this ModelConfigurationSetup [Optional].\n    date_published: The date_published of this ModelConfigurationSetup [Optional].\n    theoretical_basis: The theoretical_basis of this ModelConfigurationSetup [Optional].\n    license: The license of this ModelConfigurationSetup [Optional].\n    has_source_code: The has_source_code of this ModelConfigurationSetup [Optional].\n    has_setup: The has_setup of this ModelConfigurationSetup [Optional].\n    has_explanation_diagram: The has_explanation_diagram of this ModelConfigurationSetup [Optional].\n    has_example: The has_example of this ModelConfigurationSetup [Optional].\n    calibration_interval: The calibration_interval of this ModelConfigurationSetup [Optional].\n    publisher: The publisher of this ModelConfigurationSetup [Optional].\n    has_output: The has_output of this ModelConfigurationSetup [Optional].\n    runtime_estimation: The runtime_estimation of this ModelConfigurationSetup [Optional].\n    has_output_time_interval: The has_output_time_interval of this ModelConfigurationSetup [Optional].\n    status: The status of this ModelConfigurationSetup [Optional].\n    doi: The doi of this ModelConfigurationSetup [Optional].\n    parameter_assignment_method: The parameter_assignment_method of this ModelConfigurationSetup [Optional].\n    has_funding: The has_funding of this ModelConfigurationSetup [Optional].\n    has_component_location: The has_component_location of this ModelConfigurationSetup [Optional].\n    has_process: The has_process of this ModelConfigurationSetup [Optional].\n    support_details: The support_details of this ModelConfigurationSetup [Optional].\n    has_version: The has_version of this ModelConfigurationSetup [Optional].\n    has_typical_data_source: The has_typical_data_source of this ModelConfigurationSetup [Optional].\n    description: The description of this ModelConfigurationSetup [Optional].\n    reference_publication: The reference_publication of this ModelConfigurationSetup [Optional].\n    screenshot: The screenshot of this ModelConfigurationSetup [Optional].\n    has_model_category: The has_model_category of this ModelConfigurationSetup [Optional].\n    had_primary_source: The had_primary_source of this ModelConfigurationSetup [Optional].\n    issue_tracker: The issue_tracker of this ModelConfigurationSetup [Optional].\n    has_software_image: The has_software_image of this ModelConfigurationSetup [Optional].\n    date_created: The date_created of this ModelConfigurationSetup [Optional].\n    contributor: The contributor of this ModelConfigurationSetup [Optional].\n    has_input_variable: The has_input_variable of this ModelConfigurationSetup [Optional].\n    has_model_result_table: The has_model_result_table of this ModelConfigurationSetup [Optional].\n    calibration_target_variable: The calibration_target_variable of this ModelConfigurationSetup [Optional].\n    has_purpose: The has_purpose of this ModelConfigurationSetup [Optional].\n    has_executable_instructions: The has_executable_instructions of this ModelConfigurationSetup [Optional].\n    has_sample_visualization: The has_sample_visualization of this ModelConfigurationSetup [Optional].\n    has_causal_diagram: The has_causal_diagram of this ModelConfigurationSetup [Optional].\n    memory_requirements: The memory_requirements of this ModelConfigurationSetup [Optional].\n    website: The website of this ModelConfigurationSetup [Optional].\n    citation: The citation of this ModelConfigurationSetup [Optional].\n    processor_requirements: The processor_requirements of this ModelConfigurationSetup [Optional].\n    parameterization: The parameterization of this ModelConfigurationSetup [Optional].\n    adjustable_parameter: The adjustable_parameter of this ModelConfigurationSetup [Optional].\n    has_usage_notes: The has_usage_notes of this ModelConfigurationSetup [Optional].\n    has_support_script_location: The has_support_script_location of this ModelConfigurationSetup [Optional].\n    readme: The readme of this ModelConfigurationSetup [Optional].\n    label: The label of this ModelConfigurationSetup [Optional].\n    has_assumption: The has_assumption of this ModelConfigurationSetup [Optional].\n    has_parameter: The has_parameter of this ModelConfigurationSetup [Optional].\n    operating_systems: The operating_systems of this ModelConfigurationSetup [Optional].\n    has_executable_notebook: The has_executable_notebook of this ModelConfigurationSetup [Optional].\n    valid_until: The valid_until of this ModelConfigurationSetup [Optional].\n    has_equation: The has_equation of this ModelConfigurationSetup [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this ModelConfigurationSetup [Optional].\n    has_input: The has_input of this ModelConfigurationSetup [Optional].\n    has_output_variable: The has_output_variable of this ModelConfigurationSetup [Optional]."
      },
      "NumericalIndex": {
        "title": "NumericalIndex",
        "type": "object",
        "properties": {
          "hasStandardVariable": {
            "title": "Hasstandardvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nNumericalIndex - a model defined in OpenAPI\n\n    has_standard_variable: The has_standard_variable of this NumericalIndex [Optional].\n    description: The description of this NumericalIndex [Optional].\n    id: The id of this NumericalIndex [Optional].\n    label: The label of this NumericalIndex [Optional].\n    type: The type of this NumericalIndex [Optional]."
      },
      "Organization": {
        "title": "Organization",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nOrganization - a model defined in OpenAPI\n\n    identifier: The identifier of this Organization [Optional].\n    website: The website of this Organization [Optional].\n    description: The description of this Organization [Optional].\n    id: The id of this Organization [Optional].\n    label: The label of this Organization [Optional].\n    type: The type of this Organization [Optional]."
      },
      "Parameter": {
        "title": "Parameter",
        "type": "object",
        "properties": {
          "hasDefaultValue": {
            "title": "Hasdefaultvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasMaximumAcceptedValue": {
            "title": "Hasmaximumacceptedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataType": {
            "title": "Hasdatatype",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFixedValue": {
            "title": "Hasfixedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasPresentation": {
            "title": "Haspresentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recommendedIncrement": {
            "title": "Recommendedincrement",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasMinimumAcceptedValue": {
            "title": "Hasminimumacceptedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasAcceptedValues": {
            "title": "Hasacceptedvalues",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adjustsVariable": {
            "title": "Adjustsvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "relevantForIntervention": {
            "title": "Relevantforintervention",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "position": {
            "title": "Position",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "usesUnit": {
            "title": "Usesunit",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasStepSize": {
            "title": "Hasstepsize",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nParameter - a model defined in OpenAPI\n\n    has_default_value: The has_default_value of this Parameter [Optional].\n    has_maximum_accepted_value: The has_maximum_accepted_value of this Parameter [Optional].\n    description: The description of this Parameter [Optional].\n    has_data_type: The has_data_type of this Parameter [Optional].\n    has_fixed_value: The has_fixed_value of this Parameter [Optional].\n    has_presentation: The has_presentation of this Parameter [Optional].\n    label: The label of this Parameter [Optional].\n    recommended_increment: The recommended_increment of this Parameter [Optional].\n    type: The type of this Parameter [Optional].\n    has_minimum_accepted_value: The has_minimum_accepted_value of this Parameter [Optional].\n    has_accepted_values: The has_accepted_values of this Parameter [Optional].\n    adjusts_variable: The adjusts_variable of this Parameter [Optional].\n    relevant_for_intervention: The relevant_for_intervention of this Parameter [Optional].\n    position: The position of this Parameter [Optional].\n    id: The id of this Parameter [Optional].\n    uses_unit: The uses_unit of this Parameter [Optional].\n    has_step_size: The has_step_size of this Parameter [Optional]."
      },
      "Person": {
        "title": "Person",
        "type": "object",
        "properties": {
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "title": "Email",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nPerson - a model defined in OpenAPI\n\n    identifier: The identifier of this Person [Optional].\n    website: The website of this Person [Optional].\n    description: The description of this Person [Optional].\n    id: The id of this Person [Optional].\n    label: The label of this Person [Optional].\n    type: The type of this Person [Optional].\n    email: The email of this Person [Optional]."
      },
      "PointBasedGrid": {
        "title": "PointBasedGrid",
        "type": "object",
        "properties": {
          "hasDimensionality": {
            "title": "Hasdimensionality",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "hasFormat": {
            "title": "Hasformat",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pathLocation": {
            "title": "Pathlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFileStructure": {
            "title": "Hasfilestructure",
            "type": "array",
            "items": {}
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataTransformation": {
            "title": "Hasdatatransformation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPresentation": {
            "title": "Haspresentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFixedResource": {
            "title": "Hasfixedresource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasCoordinateSystem": {
            "title": "Hascoordinatesystem",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSpatialResolution": {
            "title": "Hasspatialresolution",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isTransformedFrom": {
            "title": "Istransformedfrom",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasShape": {
            "title": "Hasshape",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDimension": {
            "title": "Hasdimension",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataTransformationSetup": {
            "title": "Hasdatatransformationsetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "position": {
            "title": "Position",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nPointBasedGrid - a model defined in OpenAPI\n\n    has_dimensionality: The has_dimensionality of this PointBasedGrid [Optional].\n    has_format: The has_format of this PointBasedGrid [Optional].\n    path_location: The path_location of this PointBasedGrid [Optional].\n    has_file_structure: The has_file_structure of this PointBasedGrid [Optional].\n    description: The description of this PointBasedGrid [Optional].\n    has_data_transformation: The has_data_transformation of this PointBasedGrid [Optional].\n    has_presentation: The has_presentation of this PointBasedGrid [Optional].\n    label: The label of this PointBasedGrid [Optional].\n    type: The type of this PointBasedGrid [Optional].\n    has_fixed_resource: The has_fixed_resource of this PointBasedGrid [Optional].\n    has_coordinate_system: The has_coordinate_system of this PointBasedGrid [Optional].\n    has_spatial_resolution: The has_spatial_resolution of this PointBasedGrid [Optional].\n    is_transformed_from: The is_transformed_from of this PointBasedGrid [Optional].\n    has_shape: The has_shape of this PointBasedGrid [Optional].\n    has_dimension: The has_dimension of this PointBasedGrid [Optional].\n    has_data_transformation_setup: The has_data_transformation_setup of this PointBasedGrid [Optional].\n    position: The position of this PointBasedGrid [Optional].\n    id: The id of this PointBasedGrid [Optional]."
      },
      "Process": {
        "title": "Process",
        "type": "object",
        "properties": {
          "influences": {
            "title": "Influences",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nProcess - a model defined in OpenAPI\n\n    influences: The influences of this Process [Optional].\n    description: The description of this Process [Optional].\n    id: The id of this Process [Optional].\n    label: The label of this Process [Optional].\n    type: The type of this Process [Optional]."
      },
      "Region": {
        "title": "Region",
        "type": "object",
        "properties": {
          "geo": {
            "title": "Geo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "partOf": {
            "title": "Partof",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nRegion - a model defined in OpenAPI\n\n    geo: The geo of this Region [Optional].\n    part_of: The part_of of this Region [Optional].\n    description: The description of this Region [Optional].\n    id: The id of this Region [Optional].\n    label: The label of this Region [Optional].\n    type: The type of this Region [Optional]."
      },
      "RegionGeoInner": {
        "title": "RegionGeoInner",
        "type": "object",
        "properties": {
          "elevation": {
            "title": "Elevation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "latitude": {
            "title": "Latitude",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "longitude": {
            "title": "Longitude",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "box": {
            "title": "Box",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nRegionGeoInner - a model defined in OpenAPI\n\n    elevation: The elevation of this RegionGeoInner [Optional].\n    latitude: The latitude of this RegionGeoInner [Optional].\n    description: The description of this RegionGeoInner [Optional].\n    id: The id of this RegionGeoInner [Optional].\n    label: The label of this RegionGeoInner [Optional].\n    type: The type of this RegionGeoInner [Optional].\n    longitude: The longitude of this RegionGeoInner [Optional].\n    box: The box of this RegionGeoInner [Optional]."
      },
      "SampleCollection": {
        "title": "SampleCollection",
        "type": "object",
        "properties": {
          "dataCatalogIdentifier": {
            "title": "Datacatalogidentifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPart": {
            "title": "Haspart",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "value": {
            "title": "Value",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSampleCollection - a model defined in OpenAPI\n\n    data_catalog_identifier: The data_catalog_identifier of this SampleCollection [Optional].\n    has_part: The has_part of this SampleCollection [Optional].\n    description: The description of this SampleCollection [Optional].\n    id: The id of this SampleCollection [Optional].\n    label: The label of this SampleCollection [Optional].\n    type: The type of this SampleCollection [Optional].\n    value: The value of this SampleCollection [Optional]."
      },
      "SampleExecution": {
        "title": "SampleExecution",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutionCommand": {
            "title": "Hasexecutioncommand",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSampleExecution - a model defined in OpenAPI\n\n    description: The description of this SampleExecution [Optional].\n    id: The id of this SampleExecution [Optional].\n    label: The label of this SampleExecution [Optional].\n    type: The type of this SampleExecution [Optional].\n    has_execution_command: The has_execution_command of this SampleExecution [Optional]."
      },
      "SampleResource": {
        "title": "SampleResource",
        "type": "object",
        "properties": {
          "dataCatalogIdentifier": {
            "title": "Datacatalogidentifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "value": {
            "title": "Value",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSampleResource - a model defined in OpenAPI\n\n    data_catalog_identifier: The data_catalog_identifier of this SampleResource [Optional].\n    description: The description of this SampleResource [Optional].\n    id: The id of this SampleResource [Optional].\n    label: The label of this SampleResource [Optional].\n    type: The type of this SampleResource [Optional].\n    value: The value of this SampleResource [Optional]."
      },
      "Software": {
        "title": "Software",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSoftware - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this Software [Optional].\n    has_funding: The has_funding of this Software [Optional].\n    keywords: The keywords of this Software [Optional].\n    has_documentation: The has_documentation of this Software [Optional].\n    support_details: The support_details of this Software [Optional].\n    software_requirements: The software_requirements of this Software [Optional].\n    has_version: The has_version of this Software [Optional].\n    has_typical_data_source: The has_typical_data_source of this Software [Optional].\n    has_download_url: The has_download_url of this Software [Optional].\n    description: The description of this Software [Optional].\n    reference_publication: The reference_publication of this Software [Optional].\n    screenshot: The screenshot of this Software [Optional].\n    type: The type of this Software [Optional].\n    has_installation_instructions: The has_installation_instructions of this Software [Optional].\n    had_primary_source: The had_primary_source of this Software [Optional].\n    issue_tracker: The issue_tracker of this Software [Optional].\n    date_created: The date_created of this Software [Optional].\n    contributor: The contributor of this Software [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this Software [Optional].\n    copyright_holder: The copyright_holder of this Software [Optional].\n    has_faq: The has_faq of this Software [Optional].\n    logo: The logo of this Software [Optional].\n    has_contact_person: The has_contact_person of this Software [Optional].\n    has_purpose: The has_purpose of this Software [Optional].\n    id: The id of this Software [Optional].\n    has_executable_instructions: The has_executable_instructions of this Software [Optional].\n    has_sample_visualization: The has_sample_visualization of this Software [Optional].\n    identifier: The identifier of this Software [Optional].\n    memory_requirements: The memory_requirements of this Software [Optional].\n    website: The website of this Software [Optional].\n    citation: The citation of this Software [Optional].\n    author: The author of this Software [Optional].\n    processor_requirements: The processor_requirements of this Software [Optional].\n    has_usage_notes: The has_usage_notes of this Software [Optional].\n    readme: The readme of this Software [Optional].\n    has_build_file: The has_build_file of this Software [Optional].\n    short_description: The short_description of this Software [Optional].\n    label: The label of this Software [Optional].\n    has_assumption: The has_assumption of this Software [Optional].\n    date_published: The date_published of this Software [Optional].\n    operating_systems: The operating_systems of this Software [Optional].\n    license: The license of this Software [Optional].\n    has_source_code: The has_source_code of this Software [Optional].\n    has_executable_notebook: The has_executable_notebook of this Software [Optional].\n    has_example: The has_example of this Software [Optional].\n    publisher: The publisher of this Software [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this Software [Optional].\n    doi: The doi of this Software [Optional]."
      },
      "SoftwareConfiguration": {
        "title": "SoftwareConfiguration",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasImplementationScriptLocation": {
            "title": "Hasimplementationscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tag": {
            "title": "Tag",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleExecution": {
            "title": "Hassampleexecution",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleResult": {
            "title": "Hassampleresult",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasConstraint": {
            "title": "Hasconstraint",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutionCommand": {
            "title": "Hasexecutioncommand",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSetup": {
            "title": "Hassetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutput": {
            "title": "Hasoutput",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasComponentLocation": {
            "title": "Hascomponentlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSoftwareImage": {
            "title": "Hassoftwareimage",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSupportScriptLocation": {
            "title": "Hassupportscriptlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasParameter": {
            "title": "Hasparameter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInput": {
            "title": "Hasinput",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSoftwareConfiguration - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this SoftwareConfiguration [Optional].\n    keywords: The keywords of this SoftwareConfiguration [Optional].\n    has_documentation: The has_documentation of this SoftwareConfiguration [Optional].\n    has_implementation_script_location: The has_implementation_script_location of this SoftwareConfiguration [Optional].\n    software_requirements: The software_requirements of this SoftwareConfiguration [Optional].\n    has_download_url: The has_download_url of this SoftwareConfiguration [Optional].\n    type: The type of this SoftwareConfiguration [Optional].\n    has_installation_instructions: The has_installation_instructions of this SoftwareConfiguration [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this SoftwareConfiguration [Optional].\n    copyright_holder: The copyright_holder of this SoftwareConfiguration [Optional].\n    has_faq: The has_faq of this SoftwareConfiguration [Optional].\n    logo: The logo of this SoftwareConfiguration [Optional].\n    has_contact_person: The has_contact_person of this SoftwareConfiguration [Optional].\n    tag: The tag of this SoftwareConfiguration [Optional].\n    id: The id of this SoftwareConfiguration [Optional].\n    identifier: The identifier of this SoftwareConfiguration [Optional].\n    has_sample_execution: The has_sample_execution of this SoftwareConfiguration [Optional].\n    has_sample_result: The has_sample_result of this SoftwareConfiguration [Optional].\n    author: The author of this SoftwareConfiguration [Optional].\n    has_constraint: The has_constraint of this SoftwareConfiguration [Optional].\n    has_build_file: The has_build_file of this SoftwareConfiguration [Optional].\n    short_description: The short_description of this SoftwareConfiguration [Optional].\n    has_execution_command: The has_execution_command of this SoftwareConfiguration [Optional].\n    date_published: The date_published of this SoftwareConfiguration [Optional].\n    license: The license of this SoftwareConfiguration [Optional].\n    has_source_code: The has_source_code of this SoftwareConfiguration [Optional].\n    has_setup: The has_setup of this SoftwareConfiguration [Optional].\n    has_example: The has_example of this SoftwareConfiguration [Optional].\n    publisher: The publisher of this SoftwareConfiguration [Optional].\n    has_output: The has_output of this SoftwareConfiguration [Optional].\n    doi: The doi of this SoftwareConfiguration [Optional].\n    has_funding: The has_funding of this SoftwareConfiguration [Optional].\n    has_component_location: The has_component_location of this SoftwareConfiguration [Optional].\n    support_details: The support_details of this SoftwareConfiguration [Optional].\n    has_version: The has_version of this SoftwareConfiguration [Optional].\n    has_typical_data_source: The has_typical_data_source of this SoftwareConfiguration [Optional].\n    description: The description of this SoftwareConfiguration [Optional].\n    reference_publication: The reference_publication of this SoftwareConfiguration [Optional].\n    screenshot: The screenshot of this SoftwareConfiguration [Optional].\n    had_primary_source: The had_primary_source of this SoftwareConfiguration [Optional].\n    issue_tracker: The issue_tracker of this SoftwareConfiguration [Optional].\n    has_software_image: The has_software_image of this SoftwareConfiguration [Optional].\n    date_created: The date_created of this SoftwareConfiguration [Optional].\n    contributor: The contributor of this SoftwareConfiguration [Optional].\n    has_purpose: The has_purpose of this SoftwareConfiguration [Optional].\n    has_executable_instructions: The has_executable_instructions of this SoftwareConfiguration [Optional].\n    has_sample_visualization: The has_sample_visualization of this SoftwareConfiguration [Optional].\n    memory_requirements: The memory_requirements of this SoftwareConfiguration [Optional].\n    website: The website of this SoftwareConfiguration [Optional].\n    citation: The citation of this SoftwareConfiguration [Optional].\n    processor_requirements: The processor_requirements of this SoftwareConfiguration [Optional].\n    has_usage_notes: The has_usage_notes of this SoftwareConfiguration [Optional].\n    has_support_script_location: The has_support_script_location of this SoftwareConfiguration [Optional].\n    readme: The readme of this SoftwareConfiguration [Optional].\n    label: The label of this SoftwareConfiguration [Optional].\n    has_assumption: The has_assumption of this SoftwareConfiguration [Optional].\n    has_parameter: The has_parameter of this SoftwareConfiguration [Optional].\n    operating_systems: The operating_systems of this SoftwareConfiguration [Optional].\n    has_executable_notebook: The has_executable_notebook of this SoftwareConfiguration [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this SoftwareConfiguration [Optional].\n    has_input: The has_input of this SoftwareConfiguration [Optional]."
      },
      "SoftwareImage": {
        "title": "SoftwareImage",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutionCommand": {
            "title": "Hasexecutioncommand",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "availableInRegistry": {
            "title": "Availableinregistry",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSoftwareImage - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this SoftwareImage [Optional].\n    keywords: The keywords of this SoftwareImage [Optional].\n    has_documentation: The has_documentation of this SoftwareImage [Optional].\n    software_requirements: The software_requirements of this SoftwareImage [Optional].\n    has_download_url: The has_download_url of this SoftwareImage [Optional].\n    type: The type of this SoftwareImage [Optional].\n    has_installation_instructions: The has_installation_instructions of this SoftwareImage [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this SoftwareImage [Optional].\n    copyright_holder: The copyright_holder of this SoftwareImage [Optional].\n    has_faq: The has_faq of this SoftwareImage [Optional].\n    logo: The logo of this SoftwareImage [Optional].\n    has_contact_person: The has_contact_person of this SoftwareImage [Optional].\n    id: The id of this SoftwareImage [Optional].\n    identifier: The identifier of this SoftwareImage [Optional].\n    author: The author of this SoftwareImage [Optional].\n    has_build_file: The has_build_file of this SoftwareImage [Optional].\n    short_description: The short_description of this SoftwareImage [Optional].\n    has_execution_command: The has_execution_command of this SoftwareImage [Optional].\n    date_published: The date_published of this SoftwareImage [Optional].\n    license: The license of this SoftwareImage [Optional].\n    has_source_code: The has_source_code of this SoftwareImage [Optional].\n    has_example: The has_example of this SoftwareImage [Optional].\n    publisher: The publisher of this SoftwareImage [Optional].\n    doi: The doi of this SoftwareImage [Optional].\n    has_funding: The has_funding of this SoftwareImage [Optional].\n    support_details: The support_details of this SoftwareImage [Optional].\n    has_version: The has_version of this SoftwareImage [Optional].\n    has_typical_data_source: The has_typical_data_source of this SoftwareImage [Optional].\n    description: The description of this SoftwareImage [Optional].\n    reference_publication: The reference_publication of this SoftwareImage [Optional].\n    screenshot: The screenshot of this SoftwareImage [Optional].\n    had_primary_source: The had_primary_source of this SoftwareImage [Optional].\n    issue_tracker: The issue_tracker of this SoftwareImage [Optional].\n    date_created: The date_created of this SoftwareImage [Optional].\n    contributor: The contributor of this SoftwareImage [Optional].\n    available_in_registry: The available_in_registry of this SoftwareImage [Optional].\n    has_purpose: The has_purpose of this SoftwareImage [Optional].\n    has_executable_instructions: The has_executable_instructions of this SoftwareImage [Optional].\n    has_sample_visualization: The has_sample_visualization of this SoftwareImage [Optional].\n    memory_requirements: The memory_requirements of this SoftwareImage [Optional].\n    website: The website of this SoftwareImage [Optional].\n    citation: The citation of this SoftwareImage [Optional].\n    processor_requirements: The processor_requirements of this SoftwareImage [Optional].\n    has_usage_notes: The has_usage_notes of this SoftwareImage [Optional].\n    readme: The readme of this SoftwareImage [Optional].\n    label: The label of this SoftwareImage [Optional].\n    has_assumption: The has_assumption of this SoftwareImage [Optional].\n    operating_systems: The operating_systems of this SoftwareImage [Optional].\n    has_executable_notebook: The has_executable_notebook of this SoftwareImage [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this SoftwareImage [Optional]."
      },
      "SoftwareVersion": {
        "title": "SoftwareVersion",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tag": {
            "title": "Tag",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasConfiguration": {
            "title": "Hasconfiguration",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersionId": {
            "title": "Hasversionid",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSoftwareVersion - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this SoftwareVersion [Optional].\n    keywords: The keywords of this SoftwareVersion [Optional].\n    has_documentation: The has_documentation of this SoftwareVersion [Optional].\n    software_requirements: The software_requirements of this SoftwareVersion [Optional].\n    has_download_url: The has_download_url of this SoftwareVersion [Optional].\n    type: The type of this SoftwareVersion [Optional].\n    has_installation_instructions: The has_installation_instructions of this SoftwareVersion [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this SoftwareVersion [Optional].\n    copyright_holder: The copyright_holder of this SoftwareVersion [Optional].\n    has_faq: The has_faq of this SoftwareVersion [Optional].\n    logo: The logo of this SoftwareVersion [Optional].\n    has_contact_person: The has_contact_person of this SoftwareVersion [Optional].\n    tag: The tag of this SoftwareVersion [Optional].\n    id: The id of this SoftwareVersion [Optional].\n    identifier: The identifier of this SoftwareVersion [Optional].\n    has_configuration: The has_configuration of this SoftwareVersion [Optional].\n    author: The author of this SoftwareVersion [Optional].\n    has_build_file: The has_build_file of this SoftwareVersion [Optional].\n    short_description: The short_description of this SoftwareVersion [Optional].\n    date_published: The date_published of this SoftwareVersion [Optional].\n    license: The license of this SoftwareVersion [Optional].\n    has_source_code: The has_source_code of this SoftwareVersion [Optional].\n    has_example: The has_example of this SoftwareVersion [Optional].\n    publisher: The publisher of this SoftwareVersion [Optional].\n    doi: The doi of this SoftwareVersion [Optional].\n    has_funding: The has_funding of this SoftwareVersion [Optional].\n    support_details: The support_details of this SoftwareVersion [Optional].\n    has_version: The has_version of this SoftwareVersion [Optional].\n    has_typical_data_source: The has_typical_data_source of this SoftwareVersion [Optional].\n    description: The description of this SoftwareVersion [Optional].\n    reference_publication: The reference_publication of this SoftwareVersion [Optional].\n    screenshot: The screenshot of this SoftwareVersion [Optional].\n    had_primary_source: The had_primary_source of this SoftwareVersion [Optional].\n    issue_tracker: The issue_tracker of this SoftwareVersion [Optional].\n    date_created: The date_created of this SoftwareVersion [Optional].\n    contributor: The contributor of this SoftwareVersion [Optional].\n    has_purpose: The has_purpose of this SoftwareVersion [Optional].\n    has_executable_instructions: The has_executable_instructions of this SoftwareVersion [Optional].\n    has_sample_visualization: The has_sample_visualization of this SoftwareVersion [Optional].\n    memory_requirements: The memory_requirements of this SoftwareVersion [Optional].\n    website: The website of this SoftwareVersion [Optional].\n    citation: The citation of this SoftwareVersion [Optional].\n    processor_requirements: The processor_requirements of this SoftwareVersion [Optional].\n    has_usage_notes: The has_usage_notes of this SoftwareVersion [Optional].\n    readme: The readme of this SoftwareVersion [Optional].\n    label: The label of this SoftwareVersion [Optional].\n    has_assumption: The has_assumption of this SoftwareVersion [Optional].\n    operating_systems: The operating_systems of this SoftwareVersion [Optional].\n    has_executable_notebook: The has_executable_notebook of this SoftwareVersion [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this SoftwareVersion [Optional].\n    has_version_id: The has_version_id of this SoftwareVersion [Optional]."
      },
      "SourceCode": {
        "title": "SourceCode",
        "type": "object",
        "properties": {
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "programmingLanguage": {
            "title": "Programminglanguage",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "codeRepository": {
            "title": "Coderepository",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSourceCode - a model defined in OpenAPI\n\n    license: The license of this SourceCode [Optional].\n    programming_language: The programming_language of this SourceCode [Optional].\n    description: The description of this SourceCode [Optional].\n    code_repository: The code_repository of this SourceCode [Optional].\n    id: The id of this SourceCode [Optional].\n    label: The label of this SourceCode [Optional].\n    type: The type of this SourceCode [Optional]."
      },
      "SpatialResolution": {
        "title": "SpatialResolution",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSpatialResolution - a model defined in OpenAPI\n\n    description: The description of this SpatialResolution [Optional].\n    id: The id of this SpatialResolution [Optional].\n    label: The label of this SpatialResolution [Optional].\n    type: The type of this SpatialResolution [Optional]."
      },
      "SpatiallyDistributedGrid": {
        "title": "SpatiallyDistributedGrid",
        "type": "object",
        "properties": {
          "hasDimensionality": {
            "title": "Hasdimensionality",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "hasFormat": {
            "title": "Hasformat",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pathLocation": {
            "title": "Pathlocation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFileStructure": {
            "title": "Hasfilestructure",
            "type": "array",
            "items": {}
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataTransformation": {
            "title": "Hasdatatransformation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPresentation": {
            "title": "Haspresentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFixedResource": {
            "title": "Hasfixedresource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasCoordinateSystem": {
            "title": "Hascoordinatesystem",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSpatialResolution": {
            "title": "Hasspatialresolution",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isTransformedFrom": {
            "title": "Istransformedfrom",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasShape": {
            "title": "Hasshape",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDimension": {
            "title": "Hasdimension",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDataTransformationSetup": {
            "title": "Hasdatatransformationsetup",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "position": {
            "title": "Position",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nSpatiallyDistributedGrid - a model defined in OpenAPI\n\n    has_dimensionality: The has_dimensionality of this SpatiallyDistributedGrid [Optional].\n    has_format: The has_format of this SpatiallyDistributedGrid [Optional].\n    path_location: The path_location of this SpatiallyDistributedGrid [Optional].\n    has_file_structure: The has_file_structure of this SpatiallyDistributedGrid [Optional].\n    description: The description of this SpatiallyDistributedGrid [Optional].\n    has_data_transformation: The has_data_transformation of this SpatiallyDistributedGrid [Optional].\n    has_presentation: The has_presentation of this SpatiallyDistributedGrid [Optional].\n    label: The label of this SpatiallyDistributedGrid [Optional].\n    type: The type of this SpatiallyDistributedGrid [Optional].\n    has_fixed_resource: The has_fixed_resource of this SpatiallyDistributedGrid [Optional].\n    has_coordinate_system: The has_coordinate_system of this SpatiallyDistributedGrid [Optional].\n    has_spatial_resolution: The has_spatial_resolution of this SpatiallyDistributedGrid [Optional].\n    is_transformed_from: The is_transformed_from of this SpatiallyDistributedGrid [Optional].\n    has_shape: The has_shape of this SpatiallyDistributedGrid [Optional].\n    has_dimension: The has_dimension of this SpatiallyDistributedGrid [Optional].\n    has_data_transformation_setup: The has_data_transformation_setup of this SpatiallyDistributedGrid [Optional].\n    position: The position of this SpatiallyDistributedGrid [Optional].\n    id: The id of this SpatiallyDistributedGrid [Optional]."
      },
      "StandardVariable": {
        "title": "StandardVariable",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nStandardVariable - a model defined in OpenAPI\n\n    description: The description of this StandardVariable [Optional].\n    id: The id of this StandardVariable [Optional].\n    label: The label of this StandardVariable [Optional].\n    type: The type of this StandardVariable [Optional]."
      },
      "TapisApp": {
        "title": "TapisApp",
        "type": "object",
        "properties": {
          "tenant": {
            "title": "Tenant",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "version": {
            "title": "Version",
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "maxLength": 2048,
            "type": "string"
          },
          "owner": {
            "title": "Owner",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "enabled": {
            "title": "Enabled",
            "type": "boolean",
            "default": true
          },
          "versionEnabled": {
            "title": "Versionenabled",
            "type": "boolean",
            "default": true
          },
          "locked": {
            "title": "Locked",
            "type": "boolean",
            "default": false
          },
          "isPublic": {
            "title": "Ispublic",
            "type": "boolean"
          },
          "sharedWithUsers": {
            "title": "Sharedwithusers",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runtime": {
            "title": "Runtime",
            "type": "string"
          },
          "runtimeVersion": {
            "title": "Runtimeversion",
            "type": "string"
          },
          "runtimeOptions": {
            "title": "Runtimeoptions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "containerImage": {
            "title": "Containerimage",
            "type": "string"
          },
          "jobType": {
            "title": "Jobtype",
            "type": "string"
          },
          "maxJobs": {
            "title": "Maxjobs",
            "type": "integer",
            "default": -1
          },
          "maxJobsPerUser": {
            "title": "Maxjobsperuser",
            "type": "integer",
            "default": -1
          },
          "strictFileInputs": {
            "title": "Strictfileinputs",
            "type": "boolean",
            "default": false
          },
          "jobAttributes": {
            "title": "Jobattributes",
            "type": "object"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notes": {
            "title": "Notes",
            "type": "object"
          },
          "sharedAppCtx": {
            "title": "Sharedappctx",
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "uuid": {
            "title": "Uuid",
            "type": "string",
            "format": "uuid"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TheoryGuidedModel": {
        "title": "TheoryGuidedModel",
        "type": "object",
        "properties": {
          "hasDownloadInstructions": {
            "title": "Hasdownloadinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "title": "Keywords",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDocumentation": {
            "title": "Hasdocumentation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasGrid": {
            "title": "Hasgrid",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "softwareRequirements": {
            "title": "Softwarerequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasDownloadURL": {
            "title": "Hasdownloadurl",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInstallationInstructions": {
            "title": "Hasinstallationinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "compatibleVisualizationSoftware": {
            "title": "Compatiblevisualizationsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "copyrightHolder": {
            "title": "Copyrightholder",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFAQ": {
            "title": "Hasfaq",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logo": {
            "title": "Logo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasContactPerson": {
            "title": "Hascontactperson",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "limitations": {
            "title": "Limitations",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "identifier": {
            "title": "Identifier",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "author": {
            "title": "Author",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasBuildFile": {
            "title": "Hasbuildfile",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortDescription": {
            "title": "Shortdescription",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "datePublished": {
            "title": "Datepublished",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "theoreticalBasis": {
            "title": "Theoreticalbasis",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "license": {
            "title": "License",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSourceCode": {
            "title": "Hassourcecode",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExplanationDiagram": {
            "title": "Hasexplanationdiagram",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExample": {
            "title": "Hasexample",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "title": "Publisher",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runtimeEstimation": {
            "title": "Runtimeestimation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doi": {
            "title": "Doi",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasFunding": {
            "title": "Hasfunding",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasProcess": {
            "title": "Hasprocess",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportDetails": {
            "title": "Supportdetails",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasVersion": {
            "title": "Hasversion",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasTypicalDataSource": {
            "title": "Hastypicaldatasource",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referencePublication": {
            "title": "Referencepublication",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "screenshot": {
            "title": "Screenshot",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasModelCategory": {
            "title": "Hasmodelcategory",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "issueTracker": {
            "title": "Issuetracker",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateCreated": {
            "title": "Datecreated",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contributor": {
            "title": "Contributor",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasInputVariable": {
            "title": "Hasinputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasPurpose": {
            "title": "Haspurpose",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableInstructions": {
            "title": "Hasexecutableinstructions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasSampleVisualization": {
            "title": "Hassamplevisualization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memoryRequirements": {
            "title": "Memoryrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "title": "Website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "citation": {
            "title": "Citation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processorRequirements": {
            "title": "Processorrequirements",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameterization": {
            "title": "Parameterization",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasUsageNotes": {
            "title": "Hasusagenotes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readme": {
            "title": "Readme",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasAssumption": {
            "title": "Hasassumption",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingSystems": {
            "title": "Operatingsystems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasExecutableNotebook": {
            "title": "Hasexecutablenotebook",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasEquation": {
            "title": "Hasequation",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usefulForCalculatingIndex": {
            "title": "Usefulforcalculatingindex",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasOutputVariable": {
            "title": "Hasoutputvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nTheoryGuidedModel - a model defined in OpenAPI\n\n    has_download_instructions: The has_download_instructions of this TheoryGuidedModel [Optional].\n    keywords: The keywords of this TheoryGuidedModel [Optional].\n    has_documentation: The has_documentation of this TheoryGuidedModel [Optional].\n    has_grid: The has_grid of this TheoryGuidedModel [Optional].\n    software_requirements: The software_requirements of this TheoryGuidedModel [Optional].\n    has_download_url: The has_download_url of this TheoryGuidedModel [Optional].\n    type: The type of this TheoryGuidedModel [Optional].\n    has_installation_instructions: The has_installation_instructions of this TheoryGuidedModel [Optional].\n    compatible_visualization_software: The compatible_visualization_software of this TheoryGuidedModel [Optional].\n    copyright_holder: The copyright_holder of this TheoryGuidedModel [Optional].\n    has_faq: The has_faq of this TheoryGuidedModel [Optional].\n    logo: The logo of this TheoryGuidedModel [Optional].\n    has_contact_person: The has_contact_person of this TheoryGuidedModel [Optional].\n    id: The id of this TheoryGuidedModel [Optional].\n    limitations: The limitations of this TheoryGuidedModel [Optional].\n    identifier: The identifier of this TheoryGuidedModel [Optional].\n    author: The author of this TheoryGuidedModel [Optional].\n    has_build_file: The has_build_file of this TheoryGuidedModel [Optional].\n    short_description: The short_description of this TheoryGuidedModel [Optional].\n    date_published: The date_published of this TheoryGuidedModel [Optional].\n    theoretical_basis: The theoretical_basis of this TheoryGuidedModel [Optional].\n    license: The license of this TheoryGuidedModel [Optional].\n    has_source_code: The has_source_code of this TheoryGuidedModel [Optional].\n    has_explanation_diagram: The has_explanation_diagram of this TheoryGuidedModel [Optional].\n    has_example: The has_example of this TheoryGuidedModel [Optional].\n    publisher: The publisher of this TheoryGuidedModel [Optional].\n    runtime_estimation: The runtime_estimation of this TheoryGuidedModel [Optional].\n    doi: The doi of this TheoryGuidedModel [Optional].\n    has_funding: The has_funding of this TheoryGuidedModel [Optional].\n    has_process: The has_process of this TheoryGuidedModel [Optional].\n    support_details: The support_details of this TheoryGuidedModel [Optional].\n    has_version: The has_version of this TheoryGuidedModel [Optional].\n    has_typical_data_source: The has_typical_data_source of this TheoryGuidedModel [Optional].\n    description: The description of this TheoryGuidedModel [Optional].\n    reference_publication: The reference_publication of this TheoryGuidedModel [Optional].\n    screenshot: The screenshot of this TheoryGuidedModel [Optional].\n    has_model_category: The has_model_category of this TheoryGuidedModel [Optional].\n    had_primary_source: The had_primary_source of this TheoryGuidedModel [Optional].\n    issue_tracker: The issue_tracker of this TheoryGuidedModel [Optional].\n    date_created: The date_created of this TheoryGuidedModel [Optional].\n    contributor: The contributor of this TheoryGuidedModel [Optional].\n    has_input_variable: The has_input_variable of this TheoryGuidedModel [Optional].\n    has_purpose: The has_purpose of this TheoryGuidedModel [Optional].\n    has_executable_instructions: The has_executable_instructions of this TheoryGuidedModel [Optional].\n    has_sample_visualization: The has_sample_visualization of this TheoryGuidedModel [Optional].\n    memory_requirements: The memory_requirements of this TheoryGuidedModel [Optional].\n    website: The website of this TheoryGuidedModel [Optional].\n    citation: The citation of this TheoryGuidedModel [Optional].\n    processor_requirements: The processor_requirements of this TheoryGuidedModel [Optional].\n    parameterization: The parameterization of this TheoryGuidedModel [Optional].\n    has_usage_notes: The has_usage_notes of this TheoryGuidedModel [Optional].\n    readme: The readme of this TheoryGuidedModel [Optional].\n    label: The label of this TheoryGuidedModel [Optional].\n    has_assumption: The has_assumption of this TheoryGuidedModel [Optional].\n    operating_systems: The operating_systems of this TheoryGuidedModel [Optional].\n    has_executable_notebook: The has_executable_notebook of this TheoryGuidedModel [Optional].\n    has_equation: The has_equation of this TheoryGuidedModel [Optional].\n    useful_for_calculating_index: The useful_for_calculating_index of this TheoryGuidedModel [Optional].\n    has_output_variable: The has_output_variable of this TheoryGuidedModel [Optional]."
      },
      "TimeInterval": {
        "title": "TimeInterval",
        "type": "object",
        "properties": {
          "intervalUnit": {
            "title": "Intervalunit",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "intervalValue": {
            "title": "Intervalvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nTimeInterval - a model defined in OpenAPI\n\n    interval_unit: The interval_unit of this TimeInterval [Optional].\n    description: The description of this TimeInterval [Optional].\n    id: The id of this TimeInterval [Optional].\n    label: The label of this TimeInterval [Optional].\n    type: The type of this TimeInterval [Optional].\n    interval_value: The interval_value of this TimeInterval [Optional]."
      },
      "Unit": {
        "title": "Unit",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nUnit - a model defined in OpenAPI\n\n    description: The description of this Unit [Optional].\n    id: The id of this Unit [Optional].\n    label: The label of this Unit [Optional].\n    type: The type of this Unit [Optional]."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "Variable": {
        "title": "Variable",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nVariable - a model defined in OpenAPI\n\n    description: The description of this Variable [Optional].\n    id: The id of this Variable [Optional].\n    label: The label of this Variable [Optional].\n    type: The type of this Variable [Optional]."
      },
      "VariablePresentation": {
        "title": "VariablePresentation",
        "type": "object",
        "properties": {
          "hasDefaultValue": {
            "title": "Hasdefaultvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasShortName": {
            "title": "Hasshortname",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasMinimumAcceptedValue": {
            "title": "Hasminimumacceptedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "hasStandardVariable": {
            "title": "Hasstandardvariable",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasMaximumAcceptedValue": {
            "title": "Hasmaximumacceptedvalue",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "partOfDataset": {
            "title": "Partofdataset",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usesUnit": {
            "title": "Usesunit",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasLongName": {
            "title": "Haslongname",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nVariablePresentation - a model defined in OpenAPI\n\n    has_default_value: The has_default_value of this VariablePresentation [Optional].\n    has_short_name: The has_short_name of this VariablePresentation [Optional].\n    has_minimum_accepted_value: The has_minimum_accepted_value of this VariablePresentation [Optional].\n    has_standard_variable: The has_standard_variable of this VariablePresentation [Optional].\n    has_maximum_accepted_value: The has_maximum_accepted_value of this VariablePresentation [Optional].\n    description: The description of this VariablePresentation [Optional].\n    part_of_dataset: The part_of_dataset of this VariablePresentation [Optional].\n    id: The id of this VariablePresentation [Optional].\n    label: The label of this VariablePresentation [Optional].\n    uses_unit: The uses_unit of this VariablePresentation [Optional].\n    type: The type of this VariablePresentation [Optional].\n    has_long_name: The has_long_name of this VariablePresentation [Optional]."
      },
      "Visualization": {
        "title": "Visualization",
        "type": "object",
        "properties": {
          "hasFormat": {
            "title": "Hasformat",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hadPrimarySource": {
            "title": "Hadprimarysource",
            "type": "array",
            "items": {}
          },
          "wasDerivedFromSoftware": {
            "title": "Wasderivedfromsoftware",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "title": "Type",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "value": {
            "title": "Value",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "description": "NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n\nDo not edit the class manually.\n\nVisualization - a model defined in OpenAPI\n\n    has_format: The has_format of this Visualization [Optional].\n    had_primary_source: The had_primary_source of this Visualization [Optional].\n    was_derived_from_software: The was_derived_from_software of this Visualization [Optional].\n    description: The description of this Visualization [Optional].\n    id: The id of this Visualization [Optional].\n    label: The label of this Visualization [Optional].\n    type: The type of this Visualization [Optional].\n    value: The value of this Visualization [Optional]."
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}